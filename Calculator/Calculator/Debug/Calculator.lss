
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003592  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  00003592  00003626  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000044  00800096  00800096  0000365c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000365c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000036b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000036f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001488  00000000  00000000  0000380c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ef  00000000  00000000  00004c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001288  00000000  00000000  00005583  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  0000680c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065b  00000000  00000000  00006ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e2  00000000  00000000  000072ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00007ce1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ab 00 	jmp	0x156	; 0x156 <__ctors_end>
       4:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       8:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
       c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      10:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      14:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      18:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      1c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      20:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      2c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      30:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      34:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      38:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      3c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      40:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      44:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      48:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      4c:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>
      50:	0c 94 c8 00 	jmp	0x190	; 0x190 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e2 e9       	ldi	r30, 0x92	; 146
     16a:	f5 e3       	ldi	r31, 0x35	; 53
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a6 39       	cpi	r26, 0x96	; 150
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	a6 e9       	ldi	r26, 0x96	; 150
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	aa 3d       	cpi	r26, 0xDA	; 218
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	0e 94 ca 00 	call	0x194	; 0x194 <main>
     18c:	0c 94 c7 1a 	jmp	0x358e	; 0x358e <_exit>

00000190 <__bad_interrupt>:
     190:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000194 <main>:
void _convert(u8* , u64* );
u64 power(u64 ,u64 );
void convertToString(s64 , u8 *);

int main(void)
{
     194:	2f 92       	push	r2
     196:	3f 92       	push	r3
     198:	4f 92       	push	r4
     19a:	5f 92       	push	r5
     19c:	6f 92       	push	r6
     19e:	7f 92       	push	r7
     1a0:	8f 92       	push	r8
     1a2:	9f 92       	push	r9
     1a4:	af 92       	push	r10
     1a6:	bf 92       	push	r11
     1a8:	cf 92       	push	r12
     1aa:	df 92       	push	r13
     1ac:	ef 92       	push	r14
     1ae:	ff 92       	push	r15
     1b0:	0f 93       	push	r16
     1b2:	1f 93       	push	r17
     1b4:	cf 93       	push	r28
     1b6:	df 93       	push	r29
     1b8:	cd b7       	in	r28, 0x3d	; 61
     1ba:	de b7       	in	r29, 0x3e	; 62
     1bc:	aa 97       	sbiw	r28, 0x2a	; 42
     1be:	0f b6       	in	r0, 0x3f	; 63
     1c0:	f8 94       	cli
     1c2:	de bf       	out	0x3e, r29	; 62
     1c4:	0f be       	out	0x3f, r0	; 63
     1c6:	cd bf       	out	0x3d, r28	; 61
	SetBit(_DDRD, 0);
     1c8:	81 e3       	ldi	r24, 0x31	; 49
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	21 e3       	ldi	r18, 0x31	; 49
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	f9 01       	movw	r30, r18
     1d2:	20 81       	ld	r18, Z
     1d4:	21 60       	ori	r18, 0x01	; 1
     1d6:	fc 01       	movw	r30, r24
     1d8:	20 83       	st	Z, r18
	H_Lcd_Init();
     1da:	0e 94 03 09 	call	0x1206	; 0x1206 <H_Lcd_Init>
	H_Keypad_Init();
     1de:	0e 94 df 07 	call	0xfbe	; 0xfbe <H_Keypad_Init>
	H_Lcd_WriteString("Hi :)");
     1e2:	81 e6       	ldi	r24, 0x61	; 97
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <H_Lcd_WriteString>
	H_Lcd_GoTo(1,0);
     1ea:	60 e0       	ldi	r22, 0x00	; 0
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <H_Lcd_GoTo>
	H_Lcd_WriteString("Simple Calculator ;)");
     1f2:	87 e6       	ldi	r24, 0x67	; 103
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <H_Lcd_WriteString>
	for (cnt = 0; cnt<5; cnt++)
     1fa:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
     1fe:	79 c0       	rjmp	.+242    	; 0x2f2 <main+0x15e>
	{
		H_Lcd_ShiftLeft();
     200:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <H_Lcd_ShiftLeft>
     204:	80 e0       	ldi	r24, 0x00	; 0
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	aa ef       	ldi	r26, 0xFA	; 250
     20a:	b3 e4       	ldi	r27, 0x43	; 67
     20c:	89 87       	std	Y+9, r24	; 0x09
     20e:	9a 87       	std	Y+10, r25	; 0x0a
     210:	ab 87       	std	Y+11, r26	; 0x0b
     212:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	4a e7       	ldi	r20, 0x7A	; 122
     21a:	55 e4       	ldi	r21, 0x45	; 69
     21c:	69 85       	ldd	r22, Y+9	; 0x09
     21e:	7a 85       	ldd	r23, Y+10	; 0x0a
     220:	8b 85       	ldd	r24, Y+11	; 0x0b
     222:	9c 85       	ldd	r25, Y+12	; 0x0c
     224:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     228:	dc 01       	movw	r26, r24
     22a:	cb 01       	movw	r24, r22
     22c:	8d 87       	std	Y+13, r24	; 0x0d
     22e:	9e 87       	std	Y+14, r25	; 0x0e
     230:	af 87       	std	Y+15, r26	; 0x0f
     232:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
     234:	20 e0       	ldi	r18, 0x00	; 0
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	40 e8       	ldi	r20, 0x80	; 128
     23a:	5f e3       	ldi	r21, 0x3F	; 63
     23c:	6d 85       	ldd	r22, Y+13	; 0x0d
     23e:	7e 85       	ldd	r23, Y+14	; 0x0e
     240:	8f 85       	ldd	r24, Y+15	; 0x0f
     242:	98 89       	ldd	r25, Y+16	; 0x10
     244:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
     248:	88 23       	and	r24, r24
     24a:	2c f4       	brge	.+10     	; 0x256 <main+0xc2>
		__ticks = 1;
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	9a 8b       	std	Y+18, r25	; 0x12
     252:	89 8b       	std	Y+17, r24	; 0x11
     254:	3f c0       	rjmp	.+126    	; 0x2d4 <main+0x140>
	else if (__tmp > 65535)
     256:	20 e0       	ldi	r18, 0x00	; 0
     258:	3f ef       	ldi	r19, 0xFF	; 255
     25a:	4f e7       	ldi	r20, 0x7F	; 127
     25c:	57 e4       	ldi	r21, 0x47	; 71
     25e:	6d 85       	ldd	r22, Y+13	; 0x0d
     260:	7e 85       	ldd	r23, Y+14	; 0x0e
     262:	8f 85       	ldd	r24, Y+15	; 0x0f
     264:	98 89       	ldd	r25, Y+16	; 0x10
     266:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
     26a:	18 16       	cp	r1, r24
     26c:	4c f5       	brge	.+82     	; 0x2c0 <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	40 e2       	ldi	r20, 0x20	; 32
     274:	51 e4       	ldi	r21, 0x41	; 65
     276:	69 85       	ldd	r22, Y+9	; 0x09
     278:	7a 85       	ldd	r23, Y+10	; 0x0a
     27a:	8b 85       	ldd	r24, Y+11	; 0x0b
     27c:	9c 85       	ldd	r25, Y+12	; 0x0c
     27e:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     282:	dc 01       	movw	r26, r24
     284:	cb 01       	movw	r24, r22
     286:	bc 01       	movw	r22, r24
     288:	cd 01       	movw	r24, r26
     28a:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     28e:	dc 01       	movw	r26, r24
     290:	cb 01       	movw	r24, r22
     292:	9a 8b       	std	Y+18, r25	; 0x12
     294:	89 8b       	std	Y+17, r24	; 0x11
     296:	0f c0       	rjmp	.+30     	; 0x2b6 <main+0x122>
     298:	80 e9       	ldi	r24, 0x90	; 144
     29a:	91 e0       	ldi	r25, 0x01	; 1
     29c:	9c 8b       	std	Y+20, r25	; 0x14
     29e:	8b 8b       	std	Y+19, r24	; 0x13
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2a0:	8b 89       	ldd	r24, Y+19	; 0x13
     2a2:	9c 89       	ldd	r25, Y+20	; 0x14
     2a4:	01 97       	sbiw	r24, 0x01	; 1
     2a6:	f1 f7       	brne	.-4      	; 0x2a4 <main+0x110>
     2a8:	9c 8b       	std	Y+20, r25	; 0x14
     2aa:	8b 8b       	std	Y+19, r24	; 0x13
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2ac:	89 89       	ldd	r24, Y+17	; 0x11
     2ae:	9a 89       	ldd	r25, Y+18	; 0x12
     2b0:	01 97       	sbiw	r24, 0x01	; 1
     2b2:	9a 8b       	std	Y+18, r25	; 0x12
     2b4:	89 8b       	std	Y+17, r24	; 0x11
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2b6:	89 89       	ldd	r24, Y+17	; 0x11
     2b8:	9a 89       	ldd	r25, Y+18	; 0x12
     2ba:	89 2b       	or	r24, r25
     2bc:	69 f7       	brne	.-38     	; 0x298 <main+0x104>
     2be:	14 c0       	rjmp	.+40     	; 0x2e8 <main+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2c0:	6d 85       	ldd	r22, Y+13	; 0x0d
     2c2:	7e 85       	ldd	r23, Y+14	; 0x0e
     2c4:	8f 85       	ldd	r24, Y+15	; 0x0f
     2c6:	98 89       	ldd	r25, Y+16	; 0x10
     2c8:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     2cc:	dc 01       	movw	r26, r24
     2ce:	cb 01       	movw	r24, r22
     2d0:	9a 8b       	std	Y+18, r25	; 0x12
     2d2:	89 8b       	std	Y+17, r24	; 0x11
     2d4:	89 89       	ldd	r24, Y+17	; 0x11
     2d6:	9a 89       	ldd	r25, Y+18	; 0x12
     2d8:	9e 8b       	std	Y+22, r25	; 0x16
     2da:	8d 8b       	std	Y+21, r24	; 0x15
     2dc:	8d 89       	ldd	r24, Y+21	; 0x15
     2de:	9e 89       	ldd	r25, Y+22	; 0x16
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x14c>
     2e4:	9e 8b       	std	Y+22, r25	; 0x16
     2e6:	8d 8b       	std	Y+21, r24	; 0x15
	H_Lcd_Init();
	H_Keypad_Init();
	H_Lcd_WriteString("Hi :)");
	H_Lcd_GoTo(1,0);
	H_Lcd_WriteString("Simple Calculator ;)");
	for (cnt = 0; cnt<5; cnt++)
     2e8:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     2ec:	8f 5f       	subi	r24, 0xFF	; 255
     2ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <cnt>
     2f2:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     2f6:	85 30       	cpi	r24, 0x05	; 5
     2f8:	08 f4       	brcc	.+2      	; 0x2fc <main+0x168>
     2fa:	82 cf       	rjmp	.-252    	; 0x200 <main+0x6c>
	{
		H_Lcd_ShiftLeft();
		_delay_ms(500);
	}
	cnt = 0;
     2fc:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
     300:	80 e0       	ldi	r24, 0x00	; 0
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	a8 ec       	ldi	r26, 0xC8	; 200
     306:	b2 e4       	ldi	r27, 0x42	; 66
     308:	89 83       	std	Y+1, r24	; 0x01
     30a:	9a 83       	std	Y+2, r25	; 0x02
     30c:	ab 83       	std	Y+3, r26	; 0x03
     30e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	4a e7       	ldi	r20, 0x7A	; 122
     316:	55 e4       	ldi	r21, 0x45	; 69
     318:	69 81       	ldd	r22, Y+1	; 0x01
     31a:	7a 81       	ldd	r23, Y+2	; 0x02
     31c:	8b 81       	ldd	r24, Y+3	; 0x03
     31e:	9c 81       	ldd	r25, Y+4	; 0x04
     320:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     324:	dc 01       	movw	r26, r24
     326:	cb 01       	movw	r24, r22
     328:	8f 8b       	std	Y+23, r24	; 0x17
     32a:	98 8f       	std	Y+24, r25	; 0x18
     32c:	a9 8f       	std	Y+25, r26	; 0x19
     32e:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     330:	20 e0       	ldi	r18, 0x00	; 0
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e8       	ldi	r20, 0x80	; 128
     336:	5f e3       	ldi	r21, 0x3F	; 63
     338:	6f 89       	ldd	r22, Y+23	; 0x17
     33a:	78 8d       	ldd	r23, Y+24	; 0x18
     33c:	89 8d       	ldd	r24, Y+25	; 0x19
     33e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     340:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
     344:	88 23       	and	r24, r24
     346:	2c f4       	brge	.+10     	; 0x352 <main+0x1be>
		__ticks = 1;
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	9c 8f       	std	Y+28, r25	; 0x1c
     34e:	8b 8f       	std	Y+27, r24	; 0x1b
     350:	3f c0       	rjmp	.+126    	; 0x3d0 <main+0x23c>
	else if (__tmp > 65535)
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	3f ef       	ldi	r19, 0xFF	; 255
     356:	4f e7       	ldi	r20, 0x7F	; 127
     358:	57 e4       	ldi	r21, 0x47	; 71
     35a:	6f 89       	ldd	r22, Y+23	; 0x17
     35c:	78 8d       	ldd	r23, Y+24	; 0x18
     35e:	89 8d       	ldd	r24, Y+25	; 0x19
     360:	9a 8d       	ldd	r25, Y+26	; 0x1a
     362:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
     366:	18 16       	cp	r1, r24
     368:	4c f5       	brge	.+82     	; 0x3bc <main+0x228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	40 e2       	ldi	r20, 0x20	; 32
     370:	51 e4       	ldi	r21, 0x41	; 65
     372:	69 81       	ldd	r22, Y+1	; 0x01
     374:	7a 81       	ldd	r23, Y+2	; 0x02
     376:	8b 81       	ldd	r24, Y+3	; 0x03
     378:	9c 81       	ldd	r25, Y+4	; 0x04
     37a:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     37e:	dc 01       	movw	r26, r24
     380:	cb 01       	movw	r24, r22
     382:	bc 01       	movw	r22, r24
     384:	cd 01       	movw	r24, r26
     386:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     38a:	dc 01       	movw	r26, r24
     38c:	cb 01       	movw	r24, r22
     38e:	9c 8f       	std	Y+28, r25	; 0x1c
     390:	8b 8f       	std	Y+27, r24	; 0x1b
     392:	0f c0       	rjmp	.+30     	; 0x3b2 <main+0x21e>
     394:	80 e9       	ldi	r24, 0x90	; 144
     396:	91 e0       	ldi	r25, 0x01	; 1
     398:	9e 8f       	std	Y+30, r25	; 0x1e
     39a:	8d 8f       	std	Y+29, r24	; 0x1d
     39c:	8d 8d       	ldd	r24, Y+29	; 0x1d
     39e:	9e 8d       	ldd	r25, Y+30	; 0x1e
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <main+0x20c>
     3a4:	9e 8f       	std	Y+30, r25	; 0x1e
     3a6:	8d 8f       	std	Y+29, r24	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	9c 8f       	std	Y+28, r25	; 0x1c
     3b0:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3b6:	89 2b       	or	r24, r25
     3b8:	69 f7       	brne	.-38     	; 0x394 <main+0x200>
     3ba:	14 c0       	rjmp	.+40     	; 0x3e4 <main+0x250>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3bc:	6f 89       	ldd	r22, Y+23	; 0x17
     3be:	78 8d       	ldd	r23, Y+24	; 0x18
     3c0:	89 8d       	ldd	r24, Y+25	; 0x19
     3c2:	9a 8d       	ldd	r25, Y+26	; 0x1a
     3c4:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     3c8:	dc 01       	movw	r26, r24
     3ca:	cb 01       	movw	r24, r22
     3cc:	9c 8f       	std	Y+28, r25	; 0x1c
     3ce:	8b 8f       	std	Y+27, r24	; 0x1b
     3d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3d4:	98 a3       	std	Y+32, r25	; 0x20
     3d6:	8f 8f       	std	Y+31, r24	; 0x1f
     3d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3da:	98 a1       	ldd	r25, Y+32	; 0x20
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <main+0x248>
     3e0:	98 a3       	std	Y+32, r25	; 0x20
     3e2:	8f 8f       	std	Y+31, r24	; 0x1f
	_delay_ms(100);
	H_Lcd_Clr();
     3e4:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <H_Lcd_Clr>
	memset(String, 0, 16);
     3e8:	40 e1       	ldi	r20, 0x10	; 16
     3ea:	50 e0       	ldi	r21, 0x00	; 0
     3ec:	60 e0       	ldi	r22, 0x00	; 0
     3ee:	70 e0       	ldi	r23, 0x00	; 0
     3f0:	8e e9       	ldi	r24, 0x9E	; 158
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
    while (1) 
    {
		label:
		H_Lcd_GoTo(0,i);
     3f8:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     3fc:	68 2f       	mov	r22, r24
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <H_Lcd_GoTo>
		c = H_Keypad_Read();
     404:	0e 94 27 08 	call	0x104e	; 0x104e <H_Keypad_Read>
     408:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <c>
		
		if(c != '\0')
     40c:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     410:	88 23       	and	r24, r24
     412:	91 f3       	breq	.-28     	; 0x3f8 <main+0x264>
		{
			flag = 1;
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			if(i > 16)
     41a:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     41e:	81 31       	cpi	r24, 0x11	; 17
     420:	60 f0       	brcs	.+24     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
			{
				memset(String, 0, 16);
     422:	40 e1       	ldi	r20, 0x10	; 16
     424:	50 e0       	ldi	r21, 0x00	; 0
     426:	60 e0       	ldi	r22, 0x00	; 0
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	8e e9       	ldi	r24, 0x9E	; 158
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
				i = 0;
     432:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <i>
				H_Lcd_Clr();
     436:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <H_Lcd_Clr>
			}

			if(c != '=') H_Lcd_WriteCharacter(c);
     43a:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     43e:	8d 33       	cpi	r24, 0x3D	; 61
     440:	29 f0       	breq	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     442:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     446:	0e 94 bb 09 	call	0x1376	; 0x1376 <H_Lcd_WriteCharacter>
     44a:	59 c2       	rjmp	.+1202   	; 0x8fe <__stack+0x9f>
			else if(c == '=')
     44c:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     450:	8d 33       	cpi	r24, 0x3D	; 61
     452:	09 f0       	breq	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     454:	54 c2       	rjmp	.+1192   	; 0x8fe <__stack+0x9f>
			{
				_convert(String, &Number2);
     456:	68 eb       	ldi	r22, 0xB8	; 184
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	8e e9       	ldi	r24, 0x9E	; 158
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 89 05 	call	0xb12	; 0xb12 <_convert>
				
				switch(operation)
     462:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <operation>
     466:	88 2f       	mov	r24, r24
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	8b 32       	cpi	r24, 0x2B	; 43
     46c:	91 05       	cpc	r25, r1
     46e:	79 f0       	breq	.+30     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
     470:	8c 32       	cpi	r24, 0x2C	; 44
     472:	91 05       	cpc	r25, r1
     474:	24 f4       	brge	.+8      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     476:	8a 97       	sbiw	r24, 0x2a	; 42
     478:	09 f4       	brne	.+2      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     47a:	9f c0       	rjmp	.+318    	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
				{
					case '+' : result = (Number1 + Number2); break;
					case '-' : result = (Number1 - Number2); break;
					case '*' : result = (Number1 * Number2); break;
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
					default  :					                  break;
     47c:	3a c1       	rjmp	.+628    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
			if(c != '=') H_Lcd_WriteCharacter(c);
			else if(c == '=')
			{
				_convert(String, &Number2);
				
				switch(operation)
     47e:	8d 32       	cpi	r24, 0x2D	; 45
     480:	91 05       	cpc	r25, r1
     482:	09 f4       	brne	.+2      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
     484:	4f c0       	rjmp	.+158    	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
     486:	8f 97       	sbiw	r24, 0x2f	; 47
     488:	09 f4       	brne	.+2      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     48a:	ea c0       	rjmp	.+468    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
				{
					case '+' : result = (Number1 + Number2); break;
					case '-' : result = (Number1 - Number2); break;
					case '*' : result = (Number1 * Number2); break;
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
					default  :					                  break;
     48c:	32 c1       	rjmp	.+612    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
			{
				_convert(String, &Number2);
				
				switch(operation)
				{
					case '+' : result = (Number1 + Number2); break;
     48e:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     492:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     496:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     49a:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     49e:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     4a2:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     4a6:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     4aa:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     4ae:	20 90 b8 00 	lds	r2, 0x00B8	; 0x8000b8 <Number2>
     4b2:	30 90 b9 00 	lds	r3, 0x00B9	; 0x8000b9 <Number2+0x1>
     4b6:	40 90 ba 00 	lds	r4, 0x00BA	; 0x8000ba <Number2+0x2>
     4ba:	50 90 bb 00 	lds	r5, 0x00BB	; 0x8000bb <Number2+0x3>
     4be:	60 90 bc 00 	lds	r6, 0x00BC	; 0x8000bc <Number2+0x4>
     4c2:	70 90 bd 00 	lds	r7, 0x00BD	; 0x8000bd <Number2+0x5>
     4c6:	80 90 be 00 	lds	r8, 0x00BE	; 0x8000be <Number2+0x6>
     4ca:	90 90 bf 00 	lds	r9, 0x00BF	; 0x8000bf <Number2+0x7>
     4ce:	2a 2d       	mov	r18, r10
     4d0:	3b 2d       	mov	r19, r11
     4d2:	4c 2d       	mov	r20, r12
     4d4:	5d 2d       	mov	r21, r13
     4d6:	6e 2d       	mov	r22, r14
     4d8:	7f 2d       	mov	r23, r15
     4da:	80 2f       	mov	r24, r16
     4dc:	91 2f       	mov	r25, r17
     4de:	a2 2c       	mov	r10, r2
     4e0:	b3 2c       	mov	r11, r3
     4e2:	c4 2c       	mov	r12, r4
     4e4:	d5 2c       	mov	r13, r5
     4e6:	e6 2c       	mov	r14, r6
     4e8:	f7 2c       	mov	r15, r7
     4ea:	08 2d       	mov	r16, r8
     4ec:	19 2d       	mov	r17, r9
     4ee:	0e 94 bc 18 	call	0x3178	; 0x3178 <__adddi3>
     4f2:	a2 2e       	mov	r10, r18
     4f4:	b3 2e       	mov	r11, r19
     4f6:	c4 2e       	mov	r12, r20
     4f8:	d5 2e       	mov	r13, r21
     4fa:	e6 2e       	mov	r14, r22
     4fc:	f7 2e       	mov	r15, r23
     4fe:	08 2f       	mov	r16, r24
     500:	19 2f       	mov	r17, r25
     502:	a0 92 96 00 	sts	0x0096, r10	; 0x800096 <__data_end>
     506:	b0 92 97 00 	sts	0x0097, r11	; 0x800097 <__data_end+0x1>
     50a:	c0 92 98 00 	sts	0x0098, r12	; 0x800098 <__data_end+0x2>
     50e:	d0 92 99 00 	sts	0x0099, r13	; 0x800099 <__data_end+0x3>
     512:	e0 92 9a 00 	sts	0x009A, r14	; 0x80009a <__data_end+0x4>
     516:	f0 92 9b 00 	sts	0x009B, r15	; 0x80009b <__data_end+0x5>
     51a:	00 93 9c 00 	sts	0x009C, r16	; 0x80009c <__data_end+0x6>
     51e:	10 93 9d 00 	sts	0x009D, r17	; 0x80009d <__data_end+0x7>
     522:	e7 c0       	rjmp	.+462    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
					case '-' : result = (Number1 - Number2); break;
     524:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     528:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     52c:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     530:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     534:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     538:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     53c:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     540:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     544:	20 90 b8 00 	lds	r2, 0x00B8	; 0x8000b8 <Number2>
     548:	30 90 b9 00 	lds	r3, 0x00B9	; 0x8000b9 <Number2+0x1>
     54c:	40 90 ba 00 	lds	r4, 0x00BA	; 0x8000ba <Number2+0x2>
     550:	50 90 bb 00 	lds	r5, 0x00BB	; 0x8000bb <Number2+0x3>
     554:	60 90 bc 00 	lds	r6, 0x00BC	; 0x8000bc <Number2+0x4>
     558:	70 90 bd 00 	lds	r7, 0x00BD	; 0x8000bd <Number2+0x5>
     55c:	80 90 be 00 	lds	r8, 0x00BE	; 0x8000be <Number2+0x6>
     560:	90 90 bf 00 	lds	r9, 0x00BF	; 0x8000bf <Number2+0x7>
     564:	2a 2d       	mov	r18, r10
     566:	3b 2d       	mov	r19, r11
     568:	4c 2d       	mov	r20, r12
     56a:	5d 2d       	mov	r21, r13
     56c:	6e 2d       	mov	r22, r14
     56e:	7f 2d       	mov	r23, r15
     570:	80 2f       	mov	r24, r16
     572:	91 2f       	mov	r25, r17
     574:	a2 2c       	mov	r10, r2
     576:	b3 2c       	mov	r11, r3
     578:	c4 2c       	mov	r12, r4
     57a:	d5 2c       	mov	r13, r5
     57c:	e6 2c       	mov	r14, r6
     57e:	f7 2c       	mov	r15, r7
     580:	08 2d       	mov	r16, r8
     582:	19 2d       	mov	r17, r9
     584:	0e 94 c5 18 	call	0x318a	; 0x318a <__subdi3>
     588:	a2 2e       	mov	r10, r18
     58a:	b3 2e       	mov	r11, r19
     58c:	c4 2e       	mov	r12, r20
     58e:	d5 2e       	mov	r13, r21
     590:	e6 2e       	mov	r14, r22
     592:	f7 2e       	mov	r15, r23
     594:	08 2f       	mov	r16, r24
     596:	19 2f       	mov	r17, r25
     598:	a0 92 96 00 	sts	0x0096, r10	; 0x800096 <__data_end>
     59c:	b0 92 97 00 	sts	0x0097, r11	; 0x800097 <__data_end+0x1>
     5a0:	c0 92 98 00 	sts	0x0098, r12	; 0x800098 <__data_end+0x2>
     5a4:	d0 92 99 00 	sts	0x0099, r13	; 0x800099 <__data_end+0x3>
     5a8:	e0 92 9a 00 	sts	0x009A, r14	; 0x80009a <__data_end+0x4>
     5ac:	f0 92 9b 00 	sts	0x009B, r15	; 0x80009b <__data_end+0x5>
     5b0:	00 93 9c 00 	sts	0x009C, r16	; 0x80009c <__data_end+0x6>
     5b4:	10 93 9d 00 	sts	0x009D, r17	; 0x80009d <__data_end+0x7>
     5b8:	9c c0       	rjmp	.+312    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
					case '*' : result = (Number1 * Number2); break;
     5ba:	20 90 b0 00 	lds	r2, 0x00B0	; 0x8000b0 <Number1>
     5be:	30 90 b1 00 	lds	r3, 0x00B1	; 0x8000b1 <Number1+0x1>
     5c2:	40 90 b2 00 	lds	r4, 0x00B2	; 0x8000b2 <Number1+0x2>
     5c6:	50 90 b3 00 	lds	r5, 0x00B3	; 0x8000b3 <Number1+0x3>
     5ca:	60 90 b4 00 	lds	r6, 0x00B4	; 0x8000b4 <Number1+0x4>
     5ce:	70 90 b5 00 	lds	r7, 0x00B5	; 0x8000b5 <Number1+0x5>
     5d2:	80 90 b6 00 	lds	r8, 0x00B6	; 0x8000b6 <Number1+0x6>
     5d6:	90 90 b7 00 	lds	r9, 0x00B7	; 0x8000b7 <Number1+0x7>
     5da:	20 91 b8 00 	lds	r18, 0x00B8	; 0x8000b8 <Number2>
     5de:	30 91 b9 00 	lds	r19, 0x00B9	; 0x8000b9 <Number2+0x1>
     5e2:	40 91 ba 00 	lds	r20, 0x00BA	; 0x8000ba <Number2+0x2>
     5e6:	50 91 bb 00 	lds	r21, 0x00BB	; 0x8000bb <Number2+0x3>
     5ea:	60 91 bc 00 	lds	r22, 0x00BC	; 0x8000bc <Number2+0x4>
     5ee:	70 91 bd 00 	lds	r23, 0x00BD	; 0x8000bd <Number2+0x5>
     5f2:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <Number2+0x6>
     5f6:	90 91 bf 00 	lds	r25, 0x00BF	; 0x8000bf <Number2+0x7>
     5fa:	a2 2e       	mov	r10, r18
     5fc:	b3 2e       	mov	r11, r19
     5fe:	c4 2e       	mov	r12, r20
     600:	d5 2e       	mov	r13, r21
     602:	e6 2e       	mov	r14, r22
     604:	f7 2e       	mov	r15, r23
     606:	08 2f       	mov	r16, r24
     608:	19 2f       	mov	r17, r25
     60a:	22 2d       	mov	r18, r2
     60c:	33 2d       	mov	r19, r3
     60e:	44 2d       	mov	r20, r4
     610:	55 2d       	mov	r21, r5
     612:	66 2d       	mov	r22, r6
     614:	77 2d       	mov	r23, r7
     616:	88 2d       	mov	r24, r8
     618:	99 2d       	mov	r25, r9
     61a:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__muldi3>
     61e:	a2 2e       	mov	r10, r18
     620:	b3 2e       	mov	r11, r19
     622:	c4 2e       	mov	r12, r20
     624:	d5 2e       	mov	r13, r21
     626:	e6 2e       	mov	r14, r22
     628:	f7 2e       	mov	r15, r23
     62a:	08 2f       	mov	r16, r24
     62c:	19 2f       	mov	r17, r25
     62e:	2a 2d       	mov	r18, r10
     630:	3b 2d       	mov	r19, r11
     632:	4c 2d       	mov	r20, r12
     634:	5d 2d       	mov	r21, r13
     636:	6e 2d       	mov	r22, r14
     638:	7f 2d       	mov	r23, r15
     63a:	80 2f       	mov	r24, r16
     63c:	91 2f       	mov	r25, r17
     63e:	20 93 96 00 	sts	0x0096, r18	; 0x800096 <__data_end>
     642:	30 93 97 00 	sts	0x0097, r19	; 0x800097 <__data_end+0x1>
     646:	40 93 98 00 	sts	0x0098, r20	; 0x800098 <__data_end+0x2>
     64a:	50 93 99 00 	sts	0x0099, r21	; 0x800099 <__data_end+0x3>
     64e:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__data_end+0x4>
     652:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__data_end+0x5>
     656:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end+0x6>
     65a:	90 93 9d 00 	sts	0x009D, r25	; 0x80009d <__data_end+0x7>
     65e:	49 c0       	rjmp	.+146    	; 0x6f2 <__EEPROM_REGION_LENGTH__+0x2f2>
					case '/' : result2 = ((f64)Number1 / (f64)Number2); break;
     660:	a0 90 b0 00 	lds	r10, 0x00B0	; 0x8000b0 <Number1>
     664:	b0 90 b1 00 	lds	r11, 0x00B1	; 0x8000b1 <Number1+0x1>
     668:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <Number1+0x2>
     66c:	d0 90 b3 00 	lds	r13, 0x00B3	; 0x8000b3 <Number1+0x3>
     670:	e0 90 b4 00 	lds	r14, 0x00B4	; 0x8000b4 <Number1+0x4>
     674:	f0 90 b5 00 	lds	r15, 0x00B5	; 0x8000b5 <Number1+0x5>
     678:	00 91 b6 00 	lds	r16, 0x00B6	; 0x8000b6 <Number1+0x6>
     67c:	10 91 b7 00 	lds	r17, 0x00B7	; 0x8000b7 <Number1+0x7>
     680:	2a 2d       	mov	r18, r10
     682:	3b 2d       	mov	r19, r11
     684:	4c 2d       	mov	r20, r12
     686:	5d 2d       	mov	r21, r13
     688:	6e 2d       	mov	r22, r14
     68a:	7f 2d       	mov	r23, r15
     68c:	80 2f       	mov	r24, r16
     68e:	91 2f       	mov	r25, r17
     690:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <__floatdisf>
     694:	3b 01       	movw	r6, r22
     696:	4c 01       	movw	r8, r24
     698:	a0 90 b8 00 	lds	r10, 0x00B8	; 0x8000b8 <Number2>
     69c:	b0 90 b9 00 	lds	r11, 0x00B9	; 0x8000b9 <Number2+0x1>
     6a0:	c0 90 ba 00 	lds	r12, 0x00BA	; 0x8000ba <Number2+0x2>
     6a4:	d0 90 bb 00 	lds	r13, 0x00BB	; 0x8000bb <Number2+0x3>
     6a8:	e0 90 bc 00 	lds	r14, 0x00BC	; 0x8000bc <Number2+0x4>
     6ac:	f0 90 bd 00 	lds	r15, 0x00BD	; 0x8000bd <Number2+0x5>
     6b0:	00 91 be 00 	lds	r16, 0x00BE	; 0x8000be <Number2+0x6>
     6b4:	10 91 bf 00 	lds	r17, 0x00BF	; 0x8000bf <Number2+0x7>
     6b8:	2a 2d       	mov	r18, r10
     6ba:	3b 2d       	mov	r19, r11
     6bc:	4c 2d       	mov	r20, r12
     6be:	5d 2d       	mov	r21, r13
     6c0:	6e 2d       	mov	r22, r14
     6c2:	7f 2d       	mov	r23, r15
     6c4:	80 2f       	mov	r24, r16
     6c6:	91 2f       	mov	r25, r17
     6c8:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <__floatdisf>
     6cc:	dc 01       	movw	r26, r24
     6ce:	cb 01       	movw	r24, r22
     6d0:	9c 01       	movw	r18, r24
     6d2:	ad 01       	movw	r20, r26
     6d4:	c4 01       	movw	r24, r8
     6d6:	b3 01       	movw	r22, r6
     6d8:	0e 94 33 12 	call	0x2466	; 0x2466 <__divsf3>
     6dc:	dc 01       	movw	r26, r24
     6de:	cb 01       	movw	r24, r22
     6e0:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <result2>
     6e4:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <result2+0x1>
     6e8:	a0 93 c2 00 	sts	0x00C2, r26	; 0x8000c2 <result2+0x2>
     6ec:	b0 93 c3 00 	sts	0x00C3, r27	; 0x8000c3 <result2+0x3>
     6f0:	00 00       	nop
					default  :					                  break;
				}
				H_Lcd_GoTo(1,0);
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <H_Lcd_GoTo>
				H_Lcd_WriteCharacter('=');
     6fa:	8d e3       	ldi	r24, 0x3D	; 61
     6fc:	0e 94 bb 09 	call	0x1376	; 0x1376 <H_Lcd_WriteCharacter>

				if(operation == '/') H_Lcd_WriteNumberflt(result2);
     700:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <operation>
     704:	8f 32       	cpi	r24, 0x2F	; 47
     706:	69 f4       	brne	.+26     	; 0x722 <__EEPROM_REGION_LENGTH__+0x322>
     708:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <result2>
     70c:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <result2+0x1>
     710:	a0 91 c2 00 	lds	r26, 0x00C2	; 0x8000c2 <result2+0x2>
     714:	b0 91 c3 00 	lds	r27, 0x00C3	; 0x8000c3 <result2+0x3>
     718:	bc 01       	movw	r22, r24
     71a:	cd 01       	movw	r24, r26
     71c:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <H_Lcd_WriteNumberflt>
     720:	1c c0       	rjmp	.+56     	; 0x75a <__EEPROM_REGION_LENGTH__+0x35a>
				else convertToString(result, str);
     722:	80 90 96 00 	lds	r8, 0x0096	; 0x800096 <__data_end>
     726:	90 90 97 00 	lds	r9, 0x0097	; 0x800097 <__data_end+0x1>
     72a:	a0 90 98 00 	lds	r10, 0x0098	; 0x800098 <__data_end+0x2>
     72e:	b0 90 99 00 	lds	r11, 0x0099	; 0x800099 <__data_end+0x3>
     732:	c0 90 9a 00 	lds	r12, 0x009A	; 0x80009a <__data_end+0x4>
     736:	d0 90 9b 00 	lds	r13, 0x009B	; 0x80009b <__data_end+0x5>
     73a:	e0 90 9c 00 	lds	r14, 0x009C	; 0x80009c <__data_end+0x6>
     73e:	f0 90 9d 00 	lds	r15, 0x009D	; 0x80009d <__data_end+0x7>
     742:	06 ec       	ldi	r16, 0xC6	; 198
     744:	10 e0       	ldi	r17, 0x00	; 0
     746:	28 2d       	mov	r18, r8
     748:	39 2d       	mov	r19, r9
     74a:	4a 2d       	mov	r20, r10
     74c:	5b 2d       	mov	r21, r11
     74e:	6c 2d       	mov	r22, r12
     750:	7d 2d       	mov	r23, r13
     752:	8e 2d       	mov	r24, r14
     754:	9f 2d       	mov	r25, r15
     756:	0e 94 93 06 	call	0xd26	; 0xd26 <convertToString>
				H_Lcd_WriteString(str);
     75a:	86 ec       	ldi	r24, 0xC6	; 198
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <H_Lcd_WriteString>
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	a0 e2       	ldi	r26, 0x20	; 32
     768:	b1 e4       	ldi	r27, 0x41	; 65
     76a:	8d 83       	std	Y+5, r24	; 0x05
     76c:	9e 83       	std	Y+6, r25	; 0x06
     76e:	af 83       	std	Y+7, r26	; 0x07
     770:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	4a e7       	ldi	r20, 0x7A	; 122
     778:	55 e4       	ldi	r21, 0x45	; 69
     77a:	6d 81       	ldd	r22, Y+5	; 0x05
     77c:	7e 81       	ldd	r23, Y+6	; 0x06
     77e:	8f 81       	ldd	r24, Y+7	; 0x07
     780:	98 85       	ldd	r25, Y+8	; 0x08
     782:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     786:	dc 01       	movw	r26, r24
     788:	cb 01       	movw	r24, r22
     78a:	89 a3       	std	Y+33, r24	; 0x21
     78c:	9a a3       	std	Y+34, r25	; 0x22
     78e:	ab a3       	std	Y+35, r26	; 0x23
     790:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     792:	20 e0       	ldi	r18, 0x00	; 0
     794:	30 e0       	ldi	r19, 0x00	; 0
     796:	40 e8       	ldi	r20, 0x80	; 128
     798:	5f e3       	ldi	r21, 0x3F	; 63
     79a:	69 a1       	ldd	r22, Y+33	; 0x21
     79c:	7a a1       	ldd	r23, Y+34	; 0x22
     79e:	8b a1       	ldd	r24, Y+35	; 0x23
     7a0:	9c a1       	ldd	r25, Y+36	; 0x24
     7a2:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
     7a6:	88 23       	and	r24, r24
     7a8:	2c f4       	brge	.+10     	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
		__ticks = 1;
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	9e a3       	std	Y+38, r25	; 0x26
     7b0:	8d a3       	std	Y+37, r24	; 0x25
     7b2:	3f c0       	rjmp	.+126    	; 0x832 <__DATA_REGION_LENGTH__+0x32>
	else if (__tmp > 65535)
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	3f ef       	ldi	r19, 0xFF	; 255
     7b8:	4f e7       	ldi	r20, 0x7F	; 127
     7ba:	57 e4       	ldi	r21, 0x47	; 71
     7bc:	69 a1       	ldd	r22, Y+33	; 0x21
     7be:	7a a1       	ldd	r23, Y+34	; 0x22
     7c0:	8b a1       	ldd	r24, Y+35	; 0x23
     7c2:	9c a1       	ldd	r25, Y+36	; 0x24
     7c4:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
     7c8:	18 16       	cp	r1, r24
     7ca:	4c f5       	brge	.+82     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	40 e2       	ldi	r20, 0x20	; 32
     7d2:	51 e4       	ldi	r21, 0x41	; 65
     7d4:	6d 81       	ldd	r22, Y+5	; 0x05
     7d6:	7e 81       	ldd	r23, Y+6	; 0x06
     7d8:	8f 81       	ldd	r24, Y+7	; 0x07
     7da:	98 85       	ldd	r25, Y+8	; 0x08
     7dc:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
     7e0:	dc 01       	movw	r26, r24
     7e2:	cb 01       	movw	r24, r22
     7e4:	bc 01       	movw	r22, r24
     7e6:	cd 01       	movw	r24, r26
     7e8:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     7ec:	dc 01       	movw	r26, r24
     7ee:	cb 01       	movw	r24, r22
     7f0:	9e a3       	std	Y+38, r25	; 0x26
     7f2:	8d a3       	std	Y+37, r24	; 0x25
     7f4:	0f c0       	rjmp	.+30     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     7f6:	80 e9       	ldi	r24, 0x90	; 144
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	98 a7       	std	Y+40, r25	; 0x28
     7fc:	8f a3       	std	Y+39, r24	; 0x27
     7fe:	8f a1       	ldd	r24, Y+39	; 0x27
     800:	98 a5       	ldd	r25, Y+40	; 0x28
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	f1 f7       	brne	.-4      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     806:	98 a7       	std	Y+40, r25	; 0x28
     808:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     80a:	8d a1       	ldd	r24, Y+37	; 0x25
     80c:	9e a1       	ldd	r25, Y+38	; 0x26
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	9e a3       	std	Y+38, r25	; 0x26
     812:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     814:	8d a1       	ldd	r24, Y+37	; 0x25
     816:	9e a1       	ldd	r25, Y+38	; 0x26
     818:	89 2b       	or	r24, r25
     81a:	69 f7       	brne	.-38     	; 0x7f6 <__EEPROM_REGION_LENGTH__+0x3f6>
     81c:	14 c0       	rjmp	.+40     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     81e:	69 a1       	ldd	r22, Y+33	; 0x21
     820:	7a a1       	ldd	r23, Y+34	; 0x22
     822:	8b a1       	ldd	r24, Y+35	; 0x23
     824:	9c a1       	ldd	r25, Y+36	; 0x24
     826:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
     82a:	dc 01       	movw	r26, r24
     82c:	cb 01       	movw	r24, r22
     82e:	9e a3       	std	Y+38, r25	; 0x26
     830:	8d a3       	std	Y+37, r24	; 0x25
     832:	8d a1       	ldd	r24, Y+37	; 0x25
     834:	9e a1       	ldd	r25, Y+38	; 0x26
     836:	9a a7       	std	Y+42, r25	; 0x2a
     838:	89 a7       	std	Y+41, r24	; 0x29
     83a:	89 a5       	ldd	r24, Y+41	; 0x29
     83c:	9a a5       	ldd	r25, Y+42	; 0x2a
     83e:	01 97       	sbiw	r24, 0x01	; 1
     840:	f1 f7       	brne	.-4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     842:	9a a7       	std	Y+42, r25	; 0x2a
     844:	89 a7       	std	Y+41, r24	; 0x29
				_delay_ms(10);
				while(c != 'C') c = H_Keypad_Read();
     846:	04 c0       	rjmp	.+8      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     848:	0e 94 27 08 	call	0x104e	; 0x104e <H_Keypad_Read>
     84c:	80 93 af 00 	sts	0x00AF, r24	; 0x8000af <c>
     850:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     854:	83 34       	cpi	r24, 0x43	; 67
     856:	c1 f7       	brne	.-16     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
				i = 0;
     858:	10 92 ae 00 	sts	0x00AE, r1	; 0x8000ae <i>
				result = 0;
     85c:	10 92 96 00 	sts	0x0096, r1	; 0x800096 <__data_end>
     860:	10 92 97 00 	sts	0x0097, r1	; 0x800097 <__data_end+0x1>
     864:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__data_end+0x2>
     868:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__data_end+0x3>
     86c:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__data_end+0x4>
     870:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__data_end+0x5>
     874:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end+0x6>
     878:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <__data_end+0x7>
				result2 =0.0;
     87c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <result2>
     880:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <result2+0x1>
     884:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <result2+0x2>
     888:	10 92 c3 00 	sts	0x00C3, r1	; 0x8000c3 <result2+0x3>
				cnt = 0;
     88c:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
				operation = '\0';
     890:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <operation>
				c='\0';
     894:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <c>
				H_Lcd_Clr();
     898:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <H_Lcd_Clr>
				memset(String, 0, 16);
     89c:	40 e1       	ldi	r20, 0x10	; 16
     89e:	50 e0       	ldi	r21, 0x00	; 0
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	8e e9       	ldi	r24, 0x9E	; 158
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
				memset(str, 0, 16);
     8ac:	40 e1       	ldi	r20, 0x10	; 16
     8ae:	50 e0       	ldi	r21, 0x00	; 0
     8b0:	60 e0       	ldi	r22, 0x00	; 0
     8b2:	70 e0       	ldi	r23, 0x00	; 0
     8b4:	86 ec       	ldi	r24, 0xC6	; 198
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
				Number1 = 0;
     8bc:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <Number1>
     8c0:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <Number1+0x1>
     8c4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <Number1+0x2>
     8c8:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <Number1+0x3>
     8cc:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <Number1+0x4>
     8d0:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <Number1+0x5>
     8d4:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <Number1+0x6>
     8d8:	10 92 b7 00 	sts	0x00B7, r1	; 0x8000b7 <Number1+0x7>
				Number2 = 0;
     8dc:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <Number2>
     8e0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <Number2+0x1>
     8e4:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <Number2+0x2>
     8e8:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <Number2+0x3>
     8ec:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <Number2+0x4>
     8f0:	10 92 bd 00 	sts	0x00BD, r1	; 0x8000bd <Number2+0x5>
     8f4:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <Number2+0x6>
     8f8:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <Number2+0x7>
				goto label;
     8fc:	7d cd       	rjmp	.-1286   	; 0x3f8 <main+0x264>
			}
			if ((c == '+') || (c == '-' )|| (c == '/' )|| (c == '*'))
     8fe:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     902:	8b 32       	cpi	r24, 0x2B	; 43
     904:	61 f0       	breq	.+24     	; 0x91e <__stack+0xbf>
     906:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     90a:	8d 32       	cpi	r24, 0x2D	; 45
     90c:	41 f0       	breq	.+16     	; 0x91e <__stack+0xbf>
     90e:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     912:	8f 32       	cpi	r24, 0x2F	; 47
     914:	21 f0       	breq	.+8      	; 0x91e <__stack+0xbf>
     916:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     91a:	8a 32       	cpi	r24, 0x2A	; 42
     91c:	e9 f4       	brne	.+58     	; 0x958 <__stack+0xf9>
			{
				operation = c;
     91e:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <c>
     922:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <operation>
				_convert(String, &Number1);
     926:	60 eb       	ldi	r22, 0xB0	; 176
     928:	70 e0       	ldi	r23, 0x00	; 0
     92a:	8e e9       	ldi	r24, 0x9E	; 158
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	0e 94 89 05 	call	0xb12	; 0xb12 <_convert>
				c = '\0';
     932:	10 92 af 00 	sts	0x00AF, r1	; 0x8000af <c>
				flag = 0; 
     936:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
				i++;
     93a:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     93e:	8f 5f       	subi	r24, 0xFF	; 255
     940:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <i>
				cnt=0;
     944:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <cnt>
				memset(String, 0, 16);
     948:	40 e1       	ldi	r20, 0x10	; 16
     94a:	50 e0       	ldi	r21, 0x00	; 0
     94c:	60 e0       	ldi	r22, 0x00	; 0
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	8e e9       	ldi	r24, 0x9E	; 158
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
			}		
			if(flag == 1)
     958:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     95c:	81 30       	cpi	r24, 0x01	; 1
     95e:	09 f0       	breq	.+2      	; 0x962 <__stack+0x103>
     960:	4b cd       	rjmp	.-1386   	; 0x3f8 <main+0x264>
			{
				String[cnt] = c;
     962:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     966:	88 2f       	mov	r24, r24
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	20 91 af 00 	lds	r18, 0x00AF	; 0x8000af <c>
     96e:	82 56       	subi	r24, 0x62	; 98
     970:	9f 4f       	sbci	r25, 0xFF	; 255
     972:	fc 01       	movw	r30, r24
     974:	20 83       	st	Z, r18
				String[cnt+1] = '\0';
     976:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     97a:	88 2f       	mov	r24, r24
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	82 56       	subi	r24, 0x62	; 98
     982:	9f 4f       	sbci	r25, 0xFF	; 255
     984:	fc 01       	movw	r30, r24
     986:	10 82       	st	Z, r1
				cnt++;
     988:	80 91 c4 00 	lds	r24, 0x00C4	; 0x8000c4 <cnt>
     98c:	8f 5f       	subi	r24, 0xFF	; 255
     98e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <cnt>
				i++;
     992:	80 91 ae 00 	lds	r24, 0x00AE	; 0x8000ae <i>
     996:	8f 5f       	subi	r24, 0xFF	; 255
     998:	80 93 ae 00 	sts	0x00AE, r24	; 0x8000ae <i>
			}
		}
		
    }
     99c:	2d cd       	rjmp	.-1446   	; 0x3f8 <main+0x264>

0000099e <power>:
}


u64 power(u64 number ,u64 power_times)
{
     99e:	2f 92       	push	r2
     9a0:	3f 92       	push	r3
     9a2:	4f 92       	push	r4
     9a4:	5f 92       	push	r5
     9a6:	6f 92       	push	r6
     9a8:	7f 92       	push	r7
     9aa:	8f 92       	push	r8
     9ac:	9f 92       	push	r9
     9ae:	af 92       	push	r10
     9b0:	bf 92       	push	r11
     9b2:	cf 92       	push	r12
     9b4:	df 92       	push	r13
     9b6:	ef 92       	push	r14
     9b8:	ff 92       	push	r15
     9ba:	0f 93       	push	r16
     9bc:	1f 93       	push	r17
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
     9c6:	a2 97       	sbiw	r28, 0x22	; 34
     9c8:	0f b6       	in	r0, 0x3f	; 63
     9ca:	f8 94       	cli
     9cc:	de bf       	out	0x3e, r29	; 62
     9ce:	0f be       	out	0x3f, r0	; 63
     9d0:	cd bf       	out	0x3d, r28	; 61
     9d2:	2b 87       	std	Y+11, r18	; 0x0b
     9d4:	3c 87       	std	Y+12, r19	; 0x0c
     9d6:	4d 87       	std	Y+13, r20	; 0x0d
     9d8:	5e 87       	std	Y+14, r21	; 0x0e
     9da:	6f 87       	std	Y+15, r22	; 0x0f
     9dc:	78 8b       	std	Y+16, r23	; 0x10
     9de:	89 8b       	std	Y+17, r24	; 0x11
     9e0:	9a 8b       	std	Y+18, r25	; 0x12
     9e2:	ab 8a       	std	Y+19, r10	; 0x13
     9e4:	bc 8a       	std	Y+20, r11	; 0x14
     9e6:	cd 8a       	std	Y+21, r12	; 0x15
     9e8:	de 8a       	std	Y+22, r13	; 0x16
     9ea:	ef 8a       	std	Y+23, r14	; 0x17
     9ec:	f8 8e       	std	Y+24, r15	; 0x18
     9ee:	09 8f       	std	Y+25, r16	; 0x19
     9f0:	1a 8f       	std	Y+26, r17	; 0x1a
	u64 nn = 1;
     9f2:	81 e0       	ldi	r24, 0x01	; 1
     9f4:	89 83       	std	Y+1, r24	; 0x01
     9f6:	1a 82       	std	Y+2, r1	; 0x02
     9f8:	1b 82       	std	Y+3, r1	; 0x03
     9fa:	1c 82       	std	Y+4, r1	; 0x04
     9fc:	1d 82       	std	Y+5, r1	; 0x05
     9fe:	1e 82       	std	Y+6, r1	; 0x06
     a00:	1f 82       	std	Y+7, r1	; 0x07
     a02:	18 86       	std	Y+8, r1	; 0x08
	for (int x = 1; x <= power_times; x++)
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	9a 87       	std	Y+10, r25	; 0x0a
     a0a:	89 87       	std	Y+9, r24	; 0x09
     a0c:	27 c0       	rjmp	.+78     	; 0xa5c <power+0xbe>
	nn *= number;
     a0e:	ab 84       	ldd	r10, Y+11	; 0x0b
     a10:	bc 84       	ldd	r11, Y+12	; 0x0c
     a12:	cd 84       	ldd	r12, Y+13	; 0x0d
     a14:	de 84       	ldd	r13, Y+14	; 0x0e
     a16:	ef 84       	ldd	r14, Y+15	; 0x0f
     a18:	f8 88       	ldd	r15, Y+16	; 0x10
     a1a:	09 89       	ldd	r16, Y+17	; 0x11
     a1c:	1a 89       	ldd	r17, Y+18	; 0x12
     a1e:	29 81       	ldd	r18, Y+1	; 0x01
     a20:	3a 81       	ldd	r19, Y+2	; 0x02
     a22:	4b 81       	ldd	r20, Y+3	; 0x03
     a24:	5c 81       	ldd	r21, Y+4	; 0x04
     a26:	6d 81       	ldd	r22, Y+5	; 0x05
     a28:	7e 81       	ldd	r23, Y+6	; 0x06
     a2a:	8f 81       	ldd	r24, Y+7	; 0x07
     a2c:	98 85       	ldd	r25, Y+8	; 0x08
     a2e:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__muldi3>
     a32:	a2 2e       	mov	r10, r18
     a34:	b3 2e       	mov	r11, r19
     a36:	c4 2e       	mov	r12, r20
     a38:	d5 2e       	mov	r13, r21
     a3a:	e6 2e       	mov	r14, r22
     a3c:	f7 2e       	mov	r15, r23
     a3e:	08 2f       	mov	r16, r24
     a40:	19 2f       	mov	r17, r25
     a42:	a9 82       	std	Y+1, r10	; 0x01
     a44:	ba 82       	std	Y+2, r11	; 0x02
     a46:	cb 82       	std	Y+3, r12	; 0x03
     a48:	dc 82       	std	Y+4, r13	; 0x04
     a4a:	ed 82       	std	Y+5, r14	; 0x05
     a4c:	fe 82       	std	Y+6, r15	; 0x06
     a4e:	0f 83       	std	Y+7, r16	; 0x07
     a50:	18 87       	std	Y+8, r17	; 0x08


u64 power(u64 number ,u64 power_times)
{
	u64 nn = 1;
	for (int x = 1; x <= power_times; x++)
     a52:	89 85       	ldd	r24, Y+9	; 0x09
     a54:	9a 85       	ldd	r25, Y+10	; 0x0a
     a56:	01 96       	adiw	r24, 0x01	; 1
     a58:	9a 87       	std	Y+10, r25	; 0x0a
     a5a:	89 87       	std	Y+9, r24	; 0x09
     a5c:	89 85       	ldd	r24, Y+9	; 0x09
     a5e:	9a 85       	ldd	r25, Y+10	; 0x0a
     a60:	9c 8f       	std	Y+28, r25	; 0x1c
     a62:	8b 8f       	std	Y+27, r24	; 0x1b
     a64:	89 2f       	mov	r24, r25
     a66:	88 0f       	add	r24, r24
     a68:	88 0b       	sbc	r24, r24
     a6a:	8d 8f       	std	Y+29, r24	; 0x1d
     a6c:	8e 8f       	std	Y+30, r24	; 0x1e
     a6e:	8f 8f       	std	Y+31, r24	; 0x1f
     a70:	88 a3       	std	Y+32, r24	; 0x20
     a72:	89 a3       	std	Y+33, r24	; 0x21
     a74:	8a a3       	std	Y+34, r24	; 0x22
     a76:	2b 88       	ldd	r2, Y+19	; 0x13
     a78:	3c 88       	ldd	r3, Y+20	; 0x14
     a7a:	4d 88       	ldd	r4, Y+21	; 0x15
     a7c:	5e 88       	ldd	r5, Y+22	; 0x16
     a7e:	6f 88       	ldd	r6, Y+23	; 0x17
     a80:	78 8c       	ldd	r7, Y+24	; 0x18
     a82:	89 8c       	ldd	r8, Y+25	; 0x19
     a84:	9a 8c       	ldd	r9, Y+26	; 0x1a
     a86:	2b 8d       	ldd	r18, Y+27	; 0x1b
     a88:	3c 8d       	ldd	r19, Y+28	; 0x1c
     a8a:	4d 8d       	ldd	r20, Y+29	; 0x1d
     a8c:	5e 8d       	ldd	r21, Y+30	; 0x1e
     a8e:	6f 8d       	ldd	r22, Y+31	; 0x1f
     a90:	78 a1       	ldd	r23, Y+32	; 0x20
     a92:	89 a1       	ldd	r24, Y+33	; 0x21
     a94:	9a a1       	ldd	r25, Y+34	; 0x22
     a96:	a2 2c       	mov	r10, r2
     a98:	b3 2c       	mov	r11, r3
     a9a:	c4 2c       	mov	r12, r4
     a9c:	d5 2c       	mov	r13, r5
     a9e:	e6 2c       	mov	r14, r6
     aa0:	f7 2c       	mov	r15, r7
     aa2:	08 2d       	mov	r16, r8
     aa4:	19 2d       	mov	r17, r9
     aa6:	0e 94 ce 18 	call	0x319c	; 0x319c <__cmpdi2>
     aaa:	09 f0       	breq	.+2      	; 0xaae <power+0x110>
     aac:	08 f4       	brcc	.+2      	; 0xab0 <power+0x112>
     aae:	af cf       	rjmp	.-162    	; 0xa0e <power+0x70>
	nn *= number;
	return nn;
     ab0:	29 81       	ldd	r18, Y+1	; 0x01
     ab2:	3a 81       	ldd	r19, Y+2	; 0x02
     ab4:	4b 81       	ldd	r20, Y+3	; 0x03
     ab6:	5c 81       	ldd	r21, Y+4	; 0x04
     ab8:	6d 81       	ldd	r22, Y+5	; 0x05
     aba:	7e 81       	ldd	r23, Y+6	; 0x06
     abc:	8f 81       	ldd	r24, Y+7	; 0x07
     abe:	98 85       	ldd	r25, Y+8	; 0x08
     ac0:	a2 2e       	mov	r10, r18
     ac2:	b3 2e       	mov	r11, r19
     ac4:	c4 2e       	mov	r12, r20
     ac6:	d5 2e       	mov	r13, r21
     ac8:	e6 2e       	mov	r14, r22
     aca:	f7 2e       	mov	r15, r23
     acc:	08 2f       	mov	r16, r24
     ace:	19 2f       	mov	r17, r25
}
     ad0:	2a 2d       	mov	r18, r10
     ad2:	3b 2d       	mov	r19, r11
     ad4:	4c 2d       	mov	r20, r12
     ad6:	5d 2d       	mov	r21, r13
     ad8:	6e 2d       	mov	r22, r14
     ada:	7f 2d       	mov	r23, r15
     adc:	80 2f       	mov	r24, r16
     ade:	91 2f       	mov	r25, r17
     ae0:	a2 96       	adiw	r28, 0x22	; 34
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	f8 94       	cli
     ae6:	de bf       	out	0x3e, r29	; 62
     ae8:	0f be       	out	0x3f, r0	; 63
     aea:	cd bf       	out	0x3d, r28	; 61
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	cf 90       	pop	r12
     afc:	bf 90       	pop	r11
     afe:	af 90       	pop	r10
     b00:	9f 90       	pop	r9
     b02:	8f 90       	pop	r8
     b04:	7f 90       	pop	r7
     b06:	6f 90       	pop	r6
     b08:	5f 90       	pop	r5
     b0a:	4f 90       	pop	r4
     b0c:	3f 90       	pop	r3
     b0e:	2f 90       	pop	r2
     b10:	08 95       	ret

00000b12 <_convert>:

void _convert(u8* str, u64 *number)
{
     b12:	2f 92       	push	r2
     b14:	3f 92       	push	r3
     b16:	4f 92       	push	r4
     b18:	5f 92       	push	r5
     b1a:	6f 92       	push	r6
     b1c:	7f 92       	push	r7
     b1e:	8f 92       	push	r8
     b20:	9f 92       	push	r9
     b22:	af 92       	push	r10
     b24:	bf 92       	push	r11
     b26:	cf 92       	push	r12
     b28:	df 92       	push	r13
     b2a:	ef 92       	push	r14
     b2c:	ff 92       	push	r15
     b2e:	0f 93       	push	r16
     b30:	1f 93       	push	r17
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	cd b7       	in	r28, 0x3d	; 61
     b38:	de b7       	in	r29, 0x3e	; 62
     b3a:	67 97       	sbiw	r28, 0x17	; 23
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
     b46:	9d 83       	std	Y+5, r25	; 0x05
     b48:	8c 83       	std	Y+4, r24	; 0x04
     b4a:	7f 83       	std	Y+7, r23	; 0x07
     b4c:	6e 83       	std	Y+6, r22	; 0x06
	u8 length = strlen(str);
     b4e:	8c 81       	ldd	r24, Y+4	; 0x04
     b50:	9d 81       	ldd	r25, Y+5	; 0x05
     b52:	0e 94 e7 19 	call	0x33ce	; 0x33ce <strlen>
     b56:	8b 83       	std	Y+3, r24	; 0x03
	u8 cnt = 0;
     b58:	19 82       	std	Y+1, r1	; 0x01
	s8 z = 0;
     b5a:	1a 82       	std	Y+2, r1	; 0x02
	if((length == 0 ) || (str[cnt]-48 == 0)) *number = 0;
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	88 23       	and	r24, r24
     b60:	59 f0       	breq	.+22     	; 0xb78 <_convert+0x66>
     b62:	89 81       	ldd	r24, Y+1	; 0x01
     b64:	88 2f       	mov	r24, r24
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	2c 81       	ldd	r18, Y+4	; 0x04
     b6a:	3d 81       	ldd	r19, Y+5	; 0x05
     b6c:	82 0f       	add	r24, r18
     b6e:	93 1f       	adc	r25, r19
     b70:	fc 01       	movw	r30, r24
     b72:	80 81       	ld	r24, Z
     b74:	80 33       	cpi	r24, 0x30	; 48
     b76:	99 f4       	brne	.+38     	; 0xb9e <_convert+0x8c>
     b78:	8e 81       	ldd	r24, Y+6	; 0x06
     b7a:	9f 81       	ldd	r25, Y+7	; 0x07
     b7c:	fc 01       	movw	r30, r24
     b7e:	10 82       	st	Z, r1
     b80:	fc 01       	movw	r30, r24
     b82:	11 82       	std	Z+1, r1	; 0x01
     b84:	fc 01       	movw	r30, r24
     b86:	12 82       	std	Z+2, r1	; 0x02
     b88:	fc 01       	movw	r30, r24
     b8a:	13 82       	std	Z+3, r1	; 0x03
     b8c:	fc 01       	movw	r30, r24
     b8e:	14 82       	std	Z+4, r1	; 0x04
     b90:	fc 01       	movw	r30, r24
     b92:	15 82       	std	Z+5, r1	; 0x05
     b94:	fc 01       	movw	r30, r24
     b96:	16 82       	std	Z+6, r1	; 0x06
     b98:	fc 01       	movw	r30, r24
     b9a:	17 82       	std	Z+7, r1	; 0x07
     b9c:	aa c0       	rjmp	.+340    	; 0xcf2 <_convert+0x1e0>
	else
	{
		for( z = (length - 1) ; z > -1 ; z--)
     b9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ba0:	81 50       	subi	r24, 0x01	; 1
     ba2:	8a 83       	std	Y+2, r24	; 0x02
     ba4:	a2 c0       	rjmp	.+324    	; 0xcea <_convert+0x1d8>
		{
			*number += ( ((u64) (str[cnt]-48) ) * power(10, z) );
     ba6:	89 81       	ldd	r24, Y+1	; 0x01
     ba8:	88 2f       	mov	r24, r24
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	2c 81       	ldd	r18, Y+4	; 0x04
     bae:	3d 81       	ldd	r19, Y+5	; 0x05
     bb0:	82 0f       	add	r24, r18
     bb2:	93 1f       	adc	r25, r19
     bb4:	fc 01       	movw	r30, r24
     bb6:	80 81       	ld	r24, Z
     bb8:	88 2f       	mov	r24, r24
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	c0 97       	sbiw	r24, 0x30	; 48
     bbe:	99 87       	std	Y+9, r25	; 0x09
     bc0:	88 87       	std	Y+8, r24	; 0x08
     bc2:	89 2f       	mov	r24, r25
     bc4:	88 0f       	add	r24, r24
     bc6:	88 0b       	sbc	r24, r24
     bc8:	8a 87       	std	Y+10, r24	; 0x0a
     bca:	8b 87       	std	Y+11, r24	; 0x0b
     bcc:	8c 87       	std	Y+12, r24	; 0x0c
     bce:	8d 87       	std	Y+13, r24	; 0x0d
     bd0:	8e 87       	std	Y+14, r24	; 0x0e
     bd2:	8f 87       	std	Y+15, r24	; 0x0f
     bd4:	8a 81       	ldd	r24, Y+2	; 0x02
     bd6:	88 8b       	std	Y+16, r24	; 0x10
     bd8:	88 0f       	add	r24, r24
     bda:	88 0b       	sbc	r24, r24
     bdc:	89 8b       	std	Y+17, r24	; 0x11
     bde:	8a 8b       	std	Y+18, r24	; 0x12
     be0:	8b 8b       	std	Y+19, r24	; 0x13
     be2:	8c 8b       	std	Y+20, r24	; 0x14
     be4:	8d 8b       	std	Y+21, r24	; 0x15
     be6:	8e 8b       	std	Y+22, r24	; 0x16
     be8:	8f 8b       	std	Y+23, r24	; 0x17
     bea:	a8 88       	ldd	r10, Y+16	; 0x10
     bec:	b9 88       	ldd	r11, Y+17	; 0x11
     bee:	ca 88       	ldd	r12, Y+18	; 0x12
     bf0:	db 88       	ldd	r13, Y+19	; 0x13
     bf2:	ec 88       	ldd	r14, Y+20	; 0x14
     bf4:	fd 88       	ldd	r15, Y+21	; 0x15
     bf6:	0e 89       	ldd	r16, Y+22	; 0x16
     bf8:	1f 89       	ldd	r17, Y+23	; 0x17
     bfa:	2a e0       	ldi	r18, 0x0A	; 10
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	50 e0       	ldi	r21, 0x00	; 0
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	0e 94 cf 04 	call	0x99e	; 0x99e <power>
     c0e:	22 2e       	mov	r2, r18
     c10:	33 2e       	mov	r3, r19
     c12:	44 2e       	mov	r4, r20
     c14:	55 2e       	mov	r5, r21
     c16:	66 2e       	mov	r6, r22
     c18:	77 2e       	mov	r7, r23
     c1a:	88 2e       	mov	r8, r24
     c1c:	99 2e       	mov	r9, r25
     c1e:	a2 2c       	mov	r10, r2
     c20:	b3 2c       	mov	r11, r3
     c22:	c4 2c       	mov	r12, r4
     c24:	d5 2c       	mov	r13, r5
     c26:	e6 2c       	mov	r14, r6
     c28:	f7 2c       	mov	r15, r7
     c2a:	08 2d       	mov	r16, r8
     c2c:	19 2d       	mov	r17, r9
     c2e:	28 85       	ldd	r18, Y+8	; 0x08
     c30:	39 85       	ldd	r19, Y+9	; 0x09
     c32:	4a 85       	ldd	r20, Y+10	; 0x0a
     c34:	5b 85       	ldd	r21, Y+11	; 0x0b
     c36:	6c 85       	ldd	r22, Y+12	; 0x0c
     c38:	7d 85       	ldd	r23, Y+13	; 0x0d
     c3a:	8e 85       	ldd	r24, Y+14	; 0x0e
     c3c:	9f 85       	ldd	r25, Y+15	; 0x0f
     c3e:	0e 94 8c 17 	call	0x2f18	; 0x2f18 <__muldi3>
     c42:	a2 2e       	mov	r10, r18
     c44:	b3 2e       	mov	r11, r19
     c46:	c4 2e       	mov	r12, r20
     c48:	d5 2e       	mov	r13, r21
     c4a:	e6 2e       	mov	r14, r22
     c4c:	f7 2e       	mov	r15, r23
     c4e:	08 2f       	mov	r16, r24
     c50:	19 2f       	mov	r17, r25
     c52:	2a 2c       	mov	r2, r10
     c54:	3b 2c       	mov	r3, r11
     c56:	4c 2c       	mov	r4, r12
     c58:	5d 2c       	mov	r5, r13
     c5a:	6e 2c       	mov	r6, r14
     c5c:	7f 2c       	mov	r7, r15
     c5e:	80 2e       	mov	r8, r16
     c60:	91 2e       	mov	r9, r17
     c62:	8e 81       	ldd	r24, Y+6	; 0x06
     c64:	9f 81       	ldd	r25, Y+7	; 0x07
     c66:	fc 01       	movw	r30, r24
     c68:	a0 80       	ld	r10, Z
     c6a:	fc 01       	movw	r30, r24
     c6c:	b1 80       	ldd	r11, Z+1	; 0x01
     c6e:	fc 01       	movw	r30, r24
     c70:	c2 80       	ldd	r12, Z+2	; 0x02
     c72:	fc 01       	movw	r30, r24
     c74:	d3 80       	ldd	r13, Z+3	; 0x03
     c76:	fc 01       	movw	r30, r24
     c78:	e4 80       	ldd	r14, Z+4	; 0x04
     c7a:	fc 01       	movw	r30, r24
     c7c:	f5 80       	ldd	r15, Z+5	; 0x05
     c7e:	fc 01       	movw	r30, r24
     c80:	06 81       	ldd	r16, Z+6	; 0x06
     c82:	fc 01       	movw	r30, r24
     c84:	17 81       	ldd	r17, Z+7	; 0x07
     c86:	2a 2d       	mov	r18, r10
     c88:	3b 2d       	mov	r19, r11
     c8a:	4c 2d       	mov	r20, r12
     c8c:	5d 2d       	mov	r21, r13
     c8e:	6e 2d       	mov	r22, r14
     c90:	7f 2d       	mov	r23, r15
     c92:	80 2f       	mov	r24, r16
     c94:	91 2f       	mov	r25, r17
     c96:	a2 2c       	mov	r10, r2
     c98:	b3 2c       	mov	r11, r3
     c9a:	c4 2c       	mov	r12, r4
     c9c:	d5 2c       	mov	r13, r5
     c9e:	e6 2c       	mov	r14, r6
     ca0:	f7 2c       	mov	r15, r7
     ca2:	08 2d       	mov	r16, r8
     ca4:	19 2d       	mov	r17, r9
     ca6:	0e 94 bc 18 	call	0x3178	; 0x3178 <__adddi3>
     caa:	a2 2e       	mov	r10, r18
     cac:	b3 2e       	mov	r11, r19
     cae:	c4 2e       	mov	r12, r20
     cb0:	d5 2e       	mov	r13, r21
     cb2:	e6 2e       	mov	r14, r22
     cb4:	f7 2e       	mov	r15, r23
     cb6:	08 2f       	mov	r16, r24
     cb8:	19 2f       	mov	r17, r25
     cba:	8e 81       	ldd	r24, Y+6	; 0x06
     cbc:	9f 81       	ldd	r25, Y+7	; 0x07
     cbe:	fc 01       	movw	r30, r24
     cc0:	a0 82       	st	Z, r10
     cc2:	fc 01       	movw	r30, r24
     cc4:	b1 82       	std	Z+1, r11	; 0x01
     cc6:	fc 01       	movw	r30, r24
     cc8:	c2 82       	std	Z+2, r12	; 0x02
     cca:	fc 01       	movw	r30, r24
     ccc:	d3 82       	std	Z+3, r13	; 0x03
     cce:	fc 01       	movw	r30, r24
     cd0:	e4 82       	std	Z+4, r14	; 0x04
     cd2:	fc 01       	movw	r30, r24
     cd4:	f5 82       	std	Z+5, r15	; 0x05
     cd6:	fc 01       	movw	r30, r24
     cd8:	06 83       	std	Z+6, r16	; 0x06
     cda:	fc 01       	movw	r30, r24
     cdc:	17 83       	std	Z+7, r17	; 0x07
			cnt++;
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	8f 5f       	subi	r24, 0xFF	; 255
     ce2:	89 83       	std	Y+1, r24	; 0x01
	u8 cnt = 0;
	s8 z = 0;
	if((length == 0 ) || (str[cnt]-48 == 0)) *number = 0;
	else
	{
		for( z = (length - 1) ; z > -1 ; z--)
     ce4:	8a 81       	ldd	r24, Y+2	; 0x02
     ce6:	81 50       	subi	r24, 0x01	; 1
     ce8:	8a 83       	std	Y+2, r24	; 0x02
     cea:	8a 81       	ldd	r24, Y+2	; 0x02
     cec:	88 23       	and	r24, r24
     cee:	0c f0       	brlt	.+2      	; 0xcf2 <_convert+0x1e0>
     cf0:	5a cf       	rjmp	.-332    	; 0xba6 <_convert+0x94>
		{
			*number += ( ((u64) (str[cnt]-48) ) * power(10, z) );
			cnt++;
		}
	}
}
     cf2:	00 00       	nop
     cf4:	67 96       	adiw	r28, 0x17	; 23
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	f8 94       	cli
     cfa:	de bf       	out	0x3e, r29	; 62
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	cd bf       	out	0x3d, r28	; 61
     d00:	df 91       	pop	r29
     d02:	cf 91       	pop	r28
     d04:	1f 91       	pop	r17
     d06:	0f 91       	pop	r16
     d08:	ff 90       	pop	r15
     d0a:	ef 90       	pop	r14
     d0c:	df 90       	pop	r13
     d0e:	cf 90       	pop	r12
     d10:	bf 90       	pop	r11
     d12:	af 90       	pop	r10
     d14:	9f 90       	pop	r9
     d16:	8f 90       	pop	r8
     d18:	7f 90       	pop	r7
     d1a:	6f 90       	pop	r6
     d1c:	5f 90       	pop	r5
     d1e:	4f 90       	pop	r4
     d20:	3f 90       	pop	r3
     d22:	2f 90       	pop	r2
     d24:	08 95       	ret

00000d26 <convertToString>:

void convertToString(s64 Number, u8 *String)
{
     d26:	2f 92       	push	r2
     d28:	3f 92       	push	r3
     d2a:	4f 92       	push	r4
     d2c:	5f 92       	push	r5
     d2e:	6f 92       	push	r6
     d30:	7f 92       	push	r7
     d32:	8f 92       	push	r8
     d34:	9f 92       	push	r9
     d36:	af 92       	push	r10
     d38:	bf 92       	push	r11
     d3a:	cf 92       	push	r12
     d3c:	df 92       	push	r13
     d3e:	ef 92       	push	r14
     d40:	ff 92       	push	r15
     d42:	0f 93       	push	r16
     d44:	1f 93       	push	r17
     d46:	cf 93       	push	r28
     d48:	df 93       	push	r29
     d4a:	cd b7       	in	r28, 0x3d	; 61
     d4c:	de b7       	in	r29, 0x3e	; 62
     d4e:	a2 97       	sbiw	r28, 0x22	; 34
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	f8 94       	cli
     d54:	de bf       	out	0x3e, r29	; 62
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	cd bf       	out	0x3d, r28	; 61
     d5a:	29 8f       	std	Y+25, r18	; 0x19
     d5c:	3a 8f       	std	Y+26, r19	; 0x1a
     d5e:	4b 8f       	std	Y+27, r20	; 0x1b
     d60:	5c 8f       	std	Y+28, r21	; 0x1c
     d62:	6d 8f       	std	Y+29, r22	; 0x1d
     d64:	7e 8f       	std	Y+30, r23	; 0x1e
     d66:	8f 8f       	std	Y+31, r24	; 0x1f
     d68:	98 a3       	std	Y+32, r25	; 0x20
     d6a:	1a a3       	std	Y+34, r17	; 0x22
     d6c:	09 a3       	std	Y+33, r16	; 0x21
	u8 Arr[20] = {0};
     d6e:	24 e1       	ldi	r18, 0x14	; 20
     d70:	ce 01       	movw	r24, r28
     d72:	03 96       	adiw	r24, 0x03	; 3
     d74:	fc 01       	movw	r30, r24
     d76:	32 2f       	mov	r19, r18
     d78:	11 92       	st	Z+, r1
     d7a:	3a 95       	dec	r19
     d7c:	e9 f7       	brne	.-6      	; 0xd78 <convertToString+0x52>
	u8 Cnt = 0;
     d7e:	19 82       	std	Y+1, r1	; 0x01
	u8 Digit = 0;
     d80:	1a 82       	std	Y+2, r1	; 0x02
	u8 sign[2]= "+\0";
     d82:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     d86:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__DATA_REGION_ORIGIN__+0x1d>
     d8a:	98 8f       	std	Y+24, r25	; 0x18
     d8c:	8f 8b       	std	Y+23, r24	; 0x17
	label:
	while ((Number != 0) && (Number > 0))
     d8e:	6b c0       	rjmp	.+214    	; 0xe66 <convertToString+0x140>
	{
		Digit             = (u64)Number % 10;
     d90:	29 8c       	ldd	r2, Y+25	; 0x19
     d92:	3a 8c       	ldd	r3, Y+26	; 0x1a
     d94:	4b 8c       	ldd	r4, Y+27	; 0x1b
     d96:	5c 8c       	ldd	r5, Y+28	; 0x1c
     d98:	6d 8c       	ldd	r6, Y+29	; 0x1d
     d9a:	7e 8c       	ldd	r7, Y+30	; 0x1e
     d9c:	8f 8c       	ldd	r8, Y+31	; 0x1f
     d9e:	98 a0       	ldd	r9, Y+32	; 0x20
     da0:	0f 2e       	mov	r0, r31
     da2:	fa e0       	ldi	r31, 0x0A	; 10
     da4:	af 2e       	mov	r10, r31
     da6:	f0 2d       	mov	r31, r0
     da8:	b1 2c       	mov	r11, r1
     daa:	c1 2c       	mov	r12, r1
     dac:	d1 2c       	mov	r13, r1
     dae:	e1 2c       	mov	r14, r1
     db0:	f1 2c       	mov	r15, r1
     db2:	00 e0       	ldi	r16, 0x00	; 0
     db4:	10 e0       	ldi	r17, 0x00	; 0
     db6:	22 2d       	mov	r18, r2
     db8:	33 2d       	mov	r19, r3
     dba:	44 2d       	mov	r20, r4
     dbc:	55 2d       	mov	r21, r5
     dbe:	66 2d       	mov	r22, r6
     dc0:	77 2d       	mov	r23, r7
     dc2:	88 2d       	mov	r24, r8
     dc4:	99 2d       	mov	r25, r9
     dc6:	0e 94 16 18 	call	0x302c	; 0x302c <__umoddi3>
     dca:	a2 2e       	mov	r10, r18
     dcc:	b3 2e       	mov	r11, r19
     dce:	c4 2e       	mov	r12, r20
     dd0:	d5 2e       	mov	r13, r21
     dd2:	e6 2e       	mov	r14, r22
     dd4:	f7 2e       	mov	r15, r23
     dd6:	08 2f       	mov	r16, r24
     dd8:	19 2f       	mov	r17, r25
     dda:	2a 2d       	mov	r18, r10
     ddc:	3b 2d       	mov	r19, r11
     dde:	4c 2d       	mov	r20, r12
     de0:	5d 2d       	mov	r21, r13
     de2:	6e 2d       	mov	r22, r14
     de4:	7f 2d       	mov	r23, r15
     de6:	80 2f       	mov	r24, r16
     de8:	91 2f       	mov	r25, r17
     dea:	2a 83       	std	Y+2, r18	; 0x02
		Arr[Cnt]          = Digit +48;
     dec:	89 81       	ldd	r24, Y+1	; 0x01
     dee:	88 2f       	mov	r24, r24
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	2a 81       	ldd	r18, Y+2	; 0x02
     df4:	40 e3       	ldi	r20, 0x30	; 48
     df6:	42 0f       	add	r20, r18
     df8:	9e 01       	movw	r18, r28
     dfa:	2d 5f       	subi	r18, 0xFD	; 253
     dfc:	3f 4f       	sbci	r19, 0xFF	; 255
     dfe:	82 0f       	add	r24, r18
     e00:	93 1f       	adc	r25, r19
     e02:	fc 01       	movw	r30, r24
     e04:	40 83       	st	Z, r20
		Cnt ++;
     e06:	89 81       	ldd	r24, Y+1	; 0x01
     e08:	8f 5f       	subi	r24, 0xFF	; 255
     e0a:	89 83       	std	Y+1, r24	; 0x01
		Number            = (u64)(Number / 10);
     e0c:	29 8c       	ldd	r2, Y+25	; 0x19
     e0e:	3a 8c       	ldd	r3, Y+26	; 0x1a
     e10:	4b 8c       	ldd	r4, Y+27	; 0x1b
     e12:	5c 8c       	ldd	r5, Y+28	; 0x1c
     e14:	6d 8c       	ldd	r6, Y+29	; 0x1d
     e16:	7e 8c       	ldd	r7, Y+30	; 0x1e
     e18:	8f 8c       	ldd	r8, Y+31	; 0x1f
     e1a:	98 a0       	ldd	r9, Y+32	; 0x20
     e1c:	0f 2e       	mov	r0, r31
     e1e:	fa e0       	ldi	r31, 0x0A	; 10
     e20:	af 2e       	mov	r10, r31
     e22:	f0 2d       	mov	r31, r0
     e24:	b1 2c       	mov	r11, r1
     e26:	c1 2c       	mov	r12, r1
     e28:	d1 2c       	mov	r13, r1
     e2a:	e1 2c       	mov	r14, r1
     e2c:	f1 2c       	mov	r15, r1
     e2e:	00 e0       	ldi	r16, 0x00	; 0
     e30:	10 e0       	ldi	r17, 0x00	; 0
     e32:	22 2d       	mov	r18, r2
     e34:	33 2d       	mov	r19, r3
     e36:	44 2d       	mov	r20, r4
     e38:	55 2d       	mov	r21, r5
     e3a:	66 2d       	mov	r22, r6
     e3c:	77 2d       	mov	r23, r7
     e3e:	88 2d       	mov	r24, r8
     e40:	99 2d       	mov	r25, r9
     e42:	0e 94 e7 17 	call	0x2fce	; 0x2fce <__divdi3>
     e46:	a2 2e       	mov	r10, r18
     e48:	b3 2e       	mov	r11, r19
     e4a:	c4 2e       	mov	r12, r20
     e4c:	d5 2e       	mov	r13, r21
     e4e:	e6 2e       	mov	r14, r22
     e50:	f7 2e       	mov	r15, r23
     e52:	08 2f       	mov	r16, r24
     e54:	19 2f       	mov	r17, r25
     e56:	a9 8e       	std	Y+25, r10	; 0x19
     e58:	ba 8e       	std	Y+26, r11	; 0x1a
     e5a:	cb 8e       	std	Y+27, r12	; 0x1b
     e5c:	dc 8e       	std	Y+28, r13	; 0x1c
     e5e:	ed 8e       	std	Y+29, r14	; 0x1d
     e60:	fe 8e       	std	Y+30, r15	; 0x1e
     e62:	0f 8f       	std	Y+31, r16	; 0x1f
     e64:	18 a3       	std	Y+32, r17	; 0x20
	u8 Arr[20] = {0};
	u8 Cnt = 0;
	u8 Digit = 0;
	u8 sign[2]= "+\0";
	label:
	while ((Number != 0) && (Number > 0))
     e66:	a9 8c       	ldd	r10, Y+25	; 0x19
     e68:	ba 8c       	ldd	r11, Y+26	; 0x1a
     e6a:	cb 8c       	ldd	r12, Y+27	; 0x1b
     e6c:	dc 8c       	ldd	r13, Y+28	; 0x1c
     e6e:	ed 8c       	ldd	r14, Y+29	; 0x1d
     e70:	fe 8c       	ldd	r15, Y+30	; 0x1e
     e72:	0f 8d       	ldd	r16, Y+31	; 0x1f
     e74:	18 a1       	ldd	r17, Y+32	; 0x20
     e76:	2a 2d       	mov	r18, r10
     e78:	3b 2d       	mov	r19, r11
     e7a:	4c 2d       	mov	r20, r12
     e7c:	5d 2d       	mov	r21, r13
     e7e:	6e 2d       	mov	r22, r14
     e80:	7f 2d       	mov	r23, r15
     e82:	80 2f       	mov	r24, r16
     e84:	91 2f       	mov	r25, r17
     e86:	a0 e0       	ldi	r26, 0x00	; 0
     e88:	0e 94 d7 18 	call	0x31ae	; 0x31ae <__cmpdi2_s8>
     e8c:	b1 f0       	breq	.+44     	; 0xeba <convertToString+0x194>
     e8e:	a9 8c       	ldd	r10, Y+25	; 0x19
     e90:	ba 8c       	ldd	r11, Y+26	; 0x1a
     e92:	cb 8c       	ldd	r12, Y+27	; 0x1b
     e94:	dc 8c       	ldd	r13, Y+28	; 0x1c
     e96:	ed 8c       	ldd	r14, Y+29	; 0x1d
     e98:	fe 8c       	ldd	r15, Y+30	; 0x1e
     e9a:	0f 8d       	ldd	r16, Y+31	; 0x1f
     e9c:	18 a1       	ldd	r17, Y+32	; 0x20
     e9e:	2a 2d       	mov	r18, r10
     ea0:	3b 2d       	mov	r19, r11
     ea2:	4c 2d       	mov	r20, r12
     ea4:	5d 2d       	mov	r21, r13
     ea6:	6e 2d       	mov	r22, r14
     ea8:	7f 2d       	mov	r23, r15
     eaa:	80 2f       	mov	r24, r16
     eac:	91 2f       	mov	r25, r17
     eae:	a0 e0       	ldi	r26, 0x00	; 0
     eb0:	0e 94 d7 18 	call	0x31ae	; 0x31ae <__cmpdi2_s8>
     eb4:	11 f0       	breq	.+4      	; 0xeba <convertToString+0x194>
     eb6:	0c f0       	brlt	.+2      	; 0xeba <convertToString+0x194>
     eb8:	6b cf       	rjmp	.-298    	; 0xd90 <convertToString+0x6a>
		Digit             = (u64)Number % 10;
		Arr[Cnt]          = Digit +48;
		Cnt ++;
		Number            = (u64)(Number / 10);
	}
	if(Number < 0)
     eba:	a9 8c       	ldd	r10, Y+25	; 0x19
     ebc:	ba 8c       	ldd	r11, Y+26	; 0x1a
     ebe:	cb 8c       	ldd	r12, Y+27	; 0x1b
     ec0:	dc 8c       	ldd	r13, Y+28	; 0x1c
     ec2:	ed 8c       	ldd	r14, Y+29	; 0x1d
     ec4:	fe 8c       	ldd	r15, Y+30	; 0x1e
     ec6:	0f 8d       	ldd	r16, Y+31	; 0x1f
     ec8:	18 a1       	ldd	r17, Y+32	; 0x20
     eca:	2a 2d       	mov	r18, r10
     ecc:	3b 2d       	mov	r19, r11
     ece:	4c 2d       	mov	r20, r12
     ed0:	5d 2d       	mov	r21, r13
     ed2:	6e 2d       	mov	r22, r14
     ed4:	7f 2d       	mov	r23, r15
     ed6:	80 2f       	mov	r24, r16
     ed8:	91 2f       	mov	r25, r17
     eda:	a0 e0       	ldi	r26, 0x00	; 0
     edc:	0e 94 d7 18 	call	0x31ae	; 0x31ae <__cmpdi2_s8>
     ee0:	c4 f5       	brge	.+112    	; 0xf52 <convertToString+0x22c>
	{
		memset(sign, 0, 2);
     ee2:	ce 01       	movw	r24, r28
     ee4:	47 96       	adiw	r24, 0x17	; 23
     ee6:	42 e0       	ldi	r20, 0x02	; 2
     ee8:	50 e0       	ldi	r21, 0x00	; 0
     eea:	60 e0       	ldi	r22, 0x00	; 0
     eec:	70 e0       	ldi	r23, 0x00	; 0
     eee:	0e 94 d5 19 	call	0x33aa	; 0x33aa <memset>
		strcat(sign, "-\0");
     ef2:	ce 01       	movw	r24, r28
     ef4:	47 96       	adiw	r24, 0x17	; 23
     ef6:	9c 01       	movw	r18, r24
     ef8:	f9 01       	movw	r30, r18
     efa:	01 90       	ld	r0, Z+
     efc:	00 20       	and	r0, r0
     efe:	e9 f7       	brne	.-6      	; 0xefa <convertToString+0x1d4>
     f00:	cf 01       	movw	r24, r30
     f02:	01 97       	sbiw	r24, 0x01	; 1
     f04:	82 1b       	sub	r24, r18
     f06:	93 0b       	sbc	r25, r19
     f08:	9e 01       	movw	r18, r28
     f0a:	29 5e       	subi	r18, 0xE9	; 233
     f0c:	3f 4f       	sbci	r19, 0xFF	; 255
     f0e:	82 0f       	add	r24, r18
     f10:	93 1f       	adc	r25, r19
     f12:	2d e2       	ldi	r18, 0x2D	; 45
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	fc 01       	movw	r30, r24
     f18:	31 83       	std	Z+1, r19	; 0x01
     f1a:	20 83       	st	Z, r18
		Number *= -1;
     f1c:	29 8d       	ldd	r18, Y+25	; 0x19
     f1e:	3a 8d       	ldd	r19, Y+26	; 0x1a
     f20:	4b 8d       	ldd	r20, Y+27	; 0x1b
     f22:	5c 8d       	ldd	r21, Y+28	; 0x1c
     f24:	6d 8d       	ldd	r22, Y+29	; 0x1d
     f26:	7e 8d       	ldd	r23, Y+30	; 0x1e
     f28:	8f 8d       	ldd	r24, Y+31	; 0x1f
     f2a:	98 a1       	ldd	r25, Y+32	; 0x20
     f2c:	0e 94 75 18 	call	0x30ea	; 0x30ea <__negdi2>
     f30:	a2 2e       	mov	r10, r18
     f32:	b3 2e       	mov	r11, r19
     f34:	c4 2e       	mov	r12, r20
     f36:	d5 2e       	mov	r13, r21
     f38:	e6 2e       	mov	r14, r22
     f3a:	f7 2e       	mov	r15, r23
     f3c:	08 2f       	mov	r16, r24
     f3e:	19 2f       	mov	r17, r25
     f40:	a9 8e       	std	Y+25, r10	; 0x19
     f42:	ba 8e       	std	Y+26, r11	; 0x1a
     f44:	cb 8e       	std	Y+27, r12	; 0x1b
     f46:	dc 8e       	std	Y+28, r13	; 0x1c
     f48:	ed 8e       	std	Y+29, r14	; 0x1d
     f4a:	fe 8e       	std	Y+30, r15	; 0x1e
     f4c:	0f 8f       	std	Y+31, r16	; 0x1f
     f4e:	18 a3       	std	Y+32, r17	; 0x20
		goto label;
     f50:	1e cf       	rjmp	.-452    	; 0xd8e <convertToString+0x68>
	}
	if (sign[0] == '+')
     f52:	8f 89       	ldd	r24, Y+23	; 0x17
     f54:	8b 32       	cpi	r24, 0x2B	; 43
     f56:	29 f4       	brne	.+10     	; 0xf62 <convertToString+0x23c>
	{
		strrev(Arr);
     f58:	ce 01       	movw	r24, r28
     f5a:	03 96       	adiw	r24, 0x03	; 3
     f5c:	0e 94 fb 19 	call	0x33f6	; 0x33f6 <strrev>
     f60:	0c c0       	rjmp	.+24     	; 0xf7a <convertToString+0x254>
	}
	else
	{
		strcat(Arr, sign);
     f62:	9e 01       	movw	r18, r28
     f64:	29 5e       	subi	r18, 0xE9	; 233
     f66:	3f 4f       	sbci	r19, 0xFF	; 255
     f68:	ce 01       	movw	r24, r28
     f6a:	03 96       	adiw	r24, 0x03	; 3
     f6c:	b9 01       	movw	r22, r18
     f6e:	0e 94 dc 19 	call	0x33b8	; 0x33b8 <strcat>
		strrev(Arr);
     f72:	ce 01       	movw	r24, r28
     f74:	03 96       	adiw	r24, 0x03	; 3
     f76:	0e 94 fb 19 	call	0x33f6	; 0x33f6 <strrev>
	}
	strcat(String, Arr);
     f7a:	9e 01       	movw	r18, r28
     f7c:	2d 5f       	subi	r18, 0xFD	; 253
     f7e:	3f 4f       	sbci	r19, 0xFF	; 255
     f80:	89 a1       	ldd	r24, Y+33	; 0x21
     f82:	9a a1       	ldd	r25, Y+34	; 0x22
     f84:	b9 01       	movw	r22, r18
     f86:	0e 94 dc 19 	call	0x33b8	; 0x33b8 <strcat>
}
     f8a:	00 00       	nop
     f8c:	a2 96       	adiw	r28, 0x22	; 34
     f8e:	0f b6       	in	r0, 0x3f	; 63
     f90:	f8 94       	cli
     f92:	de bf       	out	0x3e, r29	; 62
     f94:	0f be       	out	0x3f, r0	; 63
     f96:	cd bf       	out	0x3d, r28	; 61
     f98:	df 91       	pop	r29
     f9a:	cf 91       	pop	r28
     f9c:	1f 91       	pop	r17
     f9e:	0f 91       	pop	r16
     fa0:	ff 90       	pop	r15
     fa2:	ef 90       	pop	r14
     fa4:	df 90       	pop	r13
     fa6:	cf 90       	pop	r12
     fa8:	bf 90       	pop	r11
     faa:	af 90       	pop	r10
     fac:	9f 90       	pop	r9
     fae:	8f 90       	pop	r8
     fb0:	7f 90       	pop	r7
     fb2:	6f 90       	pop	r6
     fb4:	5f 90       	pop	r5
     fb6:	4f 90       	pop	r4
     fb8:	3f 90       	pop	r3
     fba:	2f 90       	pop	r2
     fbc:	08 95       	ret

00000fbe <H_Keypad_Init>:
 */ 

#include "Keypad.h"

void H_Keypad_Init(void)
{
     fbe:	cf 93       	push	r28
     fc0:	df 93       	push	r29
     fc2:	cd b7       	in	r28, 0x3d	; 61
     fc4:	de b7       	in	r29, 0x3e	; 62
	M_Dio_PinMode(KEYPAD_R0_PIN, OUTPUT);
     fc6:	61 e0       	ldi	r22, 0x01	; 1
     fc8:	84 e1       	ldi	r24, 0x14	; 20
     fca:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R1_PIN, OUTPUT);
     fce:	61 e0       	ldi	r22, 0x01	; 1
     fd0:	85 e1       	ldi	r24, 0x15	; 21
     fd2:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R2_PIN, OUTPUT);
     fd6:	61 e0       	ldi	r22, 0x01	; 1
     fd8:	86 e1       	ldi	r24, 0x16	; 22
     fda:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_R3_PIN, OUTPUT);
     fde:	61 e0       	ldi	r22, 0x01	; 1
     fe0:	87 e1       	ldi	r24, 0x17	; 23
     fe2:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	
	M_Dio_PinMode(KEYPAD_C0_PIN, INPUT);
     fe6:	62 e0       	ldi	r22, 0x02	; 2
     fe8:	88 e1       	ldi	r24, 0x18	; 24
     fea:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C1_PIN, INPUT);
     fee:	62 e0       	ldi	r22, 0x02	; 2
     ff0:	89 e1       	ldi	r24, 0x19	; 25
     ff2:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C2_PIN, INPUT);
     ff6:	62 e0       	ldi	r22, 0x02	; 2
     ff8:	8a e1       	ldi	r24, 0x1A	; 26
     ffa:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	M_Dio_PinMode(KEYPAD_C3_PIN, INPUT);
     ffe:	62 e0       	ldi	r22, 0x02	; 2
    1000:	8b e1       	ldi	r24, 0x1B	; 27
    1002:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
	
	M_Dio_PinPullUpRes(KEYPAD_C0_PIN, ENABLE);
    1006:	61 e0       	ldi	r22, 0x01	; 1
    1008:	88 e1       	ldi	r24, 0x18	; 24
    100a:	0e 94 26 11 	call	0x224c	; 0x224c <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C1_PIN, ENABLE);
    100e:	61 e0       	ldi	r22, 0x01	; 1
    1010:	89 e1       	ldi	r24, 0x19	; 25
    1012:	0e 94 26 11 	call	0x224c	; 0x224c <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C2_PIN, ENABLE);
    1016:	61 e0       	ldi	r22, 0x01	; 1
    1018:	8a e1       	ldi	r24, 0x1A	; 26
    101a:	0e 94 26 11 	call	0x224c	; 0x224c <M_Dio_PinPullUpRes>
	M_Dio_PinPullUpRes(KEYPAD_C3_PIN, ENABLE);\
    101e:	61 e0       	ldi	r22, 0x01	; 1
    1020:	8b e1       	ldi	r24, 0x1B	; 27
    1022:	0e 94 26 11 	call	0x224c	; 0x224c <M_Dio_PinPullUpRes>
	
	M_Dio_PinWrite(KEYPAD_R0_PIN, HIGH);
    1026:	61 e0       	ldi	r22, 0x01	; 1
    1028:	84 e1       	ldi	r24, 0x14	; 20
    102a:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R1_PIN, HIGH);
    102e:	61 e0       	ldi	r22, 0x01	; 1
    1030:	85 e1       	ldi	r24, 0x15	; 21
    1032:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R2_PIN, HIGH);
    1036:	61 e0       	ldi	r22, 0x01	; 1
    1038:	86 e1       	ldi	r24, 0x16	; 22
    103a:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
	M_Dio_PinWrite(KEYPAD_R3_PIN, HIGH);
    103e:	61 e0       	ldi	r22, 0x01	; 1
    1040:	87 e1       	ldi	r24, 0x17	; 23
    1042:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
}
    1046:	00 00       	nop
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	08 95       	ret

0000104e <H_Keypad_Read>:

u8   H_Keypad_Read(void)
{
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	a2 97       	sbiw	r28, 0x22	; 34
    1058:	0f b6       	in	r0, 0x3f	; 63
    105a:	f8 94       	cli
    105c:	de bf       	out	0x3e, r29	; 62
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	cd bf       	out	0x3d, r28	; 61
	u8 Keypad[4][4] = 
    1062:	80 e1       	ldi	r24, 0x10	; 16
    1064:	ef e7       	ldi	r30, 0x7F	; 127
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	de 01       	movw	r26, r28
    106a:	53 96       	adiw	r26, 0x13	; 19
    106c:	01 90       	ld	r0, Z+
    106e:	0d 92       	st	X+, r0
    1070:	8a 95       	dec	r24
    1072:	e1 f7       	brne	.-8      	; 0x106c <H_Keypad_Read+0x1e>
		{'4', '5', '6', '*'},
		{'1', '2', '3', '-'},
		{'C', '0', '=', '+'}
	};
	
	u8 local_Row_cnt = 0;
    1074:	19 82       	std	Y+1, r1	; 0x01
	u8 local_Column_cnt = 0;
    1076:	1a 82       	std	Y+2, r1	; 0x02
	u8 local_u8_value = '\0';
    1078:	1b 82       	std	Y+3, r1	; 0x03
	u8 local_u8_Reading = KEYPAD_RELEASED;
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	8c 83       	std	Y+4, r24	; 0x04
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
    107e:	84 e1       	ldi	r24, 0x14	; 20
    1080:	89 83       	std	Y+1, r24	; 0x01
    1082:	b3 c0       	rjmp	.+358    	; 0x11ea <H_Keypad_Read+0x19c>
	{
		M_Dio_PinWrite(local_Row_cnt, LOW);
    1084:	62 e0       	ldi	r22, 0x02	; 2
    1086:	89 81       	ldd	r24, Y+1	; 0x01
    1088:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
		
		for (local_Column_cnt = KEYPAD_C0_PIN; local_Column_cnt <= KEYPAD_C3_PIN; local_Column_cnt++)
    108c:	88 e1       	ldi	r24, 0x18	; 24
    108e:	8a 83       	std	Y+2, r24	; 0x02
    1090:	a1 c0       	rjmp	.+322    	; 0x11d4 <H_Keypad_Read+0x186>
		{
			local_u8_Reading = M_Dio_PinRead(local_Column_cnt);
    1092:	8a 81       	ldd	r24, Y+2	; 0x02
    1094:	0e 94 a6 10 	call	0x214c	; 0x214c <M_Dio_PinRead>
    1098:	8c 83       	std	Y+4, r24	; 0x04
			if(local_u8_Reading == KEYPAD_PRESSED)
    109a:	8c 81       	ldd	r24, Y+4	; 0x04
    109c:	88 23       	and	r24, r24
    109e:	09 f0       	breq	.+2      	; 0x10a2 <H_Keypad_Read+0x54>
    10a0:	96 c0       	rjmp	.+300    	; 0x11ce <H_Keypad_Read+0x180>
    10a2:	80 e0       	ldi	r24, 0x00	; 0
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	a0 e2       	ldi	r26, 0x20	; 32
    10a8:	b1 e4       	ldi	r27, 0x41	; 65
    10aa:	8d 83       	std	Y+5, r24	; 0x05
    10ac:	9e 83       	std	Y+6, r25	; 0x06
    10ae:	af 83       	std	Y+7, r26	; 0x07
    10b0:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	4a e7       	ldi	r20, 0x7A	; 122
    10b8:	55 e4       	ldi	r21, 0x45	; 69
    10ba:	6d 81       	ldd	r22, Y+5	; 0x05
    10bc:	7e 81       	ldd	r23, Y+6	; 0x06
    10be:	8f 81       	ldd	r24, Y+7	; 0x07
    10c0:	98 85       	ldd	r25, Y+8	; 0x08
    10c2:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    10c6:	dc 01       	movw	r26, r24
    10c8:	cb 01       	movw	r24, r22
    10ca:	89 87       	std	Y+9, r24	; 0x09
    10cc:	9a 87       	std	Y+10, r25	; 0x0a
    10ce:	ab 87       	std	Y+11, r26	; 0x0b
    10d0:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
    10d2:	20 e0       	ldi	r18, 0x00	; 0
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	40 e8       	ldi	r20, 0x80	; 128
    10d8:	5f e3       	ldi	r21, 0x3F	; 63
    10da:	69 85       	ldd	r22, Y+9	; 0x09
    10dc:	7a 85       	ldd	r23, Y+10	; 0x0a
    10de:	8b 85       	ldd	r24, Y+11	; 0x0b
    10e0:	9c 85       	ldd	r25, Y+12	; 0x0c
    10e2:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    10e6:	88 23       	and	r24, r24
    10e8:	2c f4       	brge	.+10     	; 0x10f4 <H_Keypad_Read+0xa6>
		__ticks = 1;
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	9e 87       	std	Y+14, r25	; 0x0e
    10f0:	8d 87       	std	Y+13, r24	; 0x0d
    10f2:	3f c0       	rjmp	.+126    	; 0x1172 <H_Keypad_Read+0x124>
	else if (__tmp > 65535)
    10f4:	20 e0       	ldi	r18, 0x00	; 0
    10f6:	3f ef       	ldi	r19, 0xFF	; 255
    10f8:	4f e7       	ldi	r20, 0x7F	; 127
    10fa:	57 e4       	ldi	r21, 0x47	; 71
    10fc:	69 85       	ldd	r22, Y+9	; 0x09
    10fe:	7a 85       	ldd	r23, Y+10	; 0x0a
    1100:	8b 85       	ldd	r24, Y+11	; 0x0b
    1102:	9c 85       	ldd	r25, Y+12	; 0x0c
    1104:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1108:	18 16       	cp	r1, r24
    110a:	4c f5       	brge	.+82     	; 0x115e <H_Keypad_Read+0x110>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    110c:	20 e0       	ldi	r18, 0x00	; 0
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	40 e2       	ldi	r20, 0x20	; 32
    1112:	51 e4       	ldi	r21, 0x41	; 65
    1114:	6d 81       	ldd	r22, Y+5	; 0x05
    1116:	7e 81       	ldd	r23, Y+6	; 0x06
    1118:	8f 81       	ldd	r24, Y+7	; 0x07
    111a:	98 85       	ldd	r25, Y+8	; 0x08
    111c:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1120:	dc 01       	movw	r26, r24
    1122:	cb 01       	movw	r24, r22
    1124:	bc 01       	movw	r22, r24
    1126:	cd 01       	movw	r24, r26
    1128:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    112c:	dc 01       	movw	r26, r24
    112e:	cb 01       	movw	r24, r22
    1130:	9e 87       	std	Y+14, r25	; 0x0e
    1132:	8d 87       	std	Y+13, r24	; 0x0d
    1134:	0f c0       	rjmp	.+30     	; 0x1154 <H_Keypad_Read+0x106>
    1136:	80 e9       	ldi	r24, 0x90	; 144
    1138:	91 e0       	ldi	r25, 0x01	; 1
    113a:	98 8b       	std	Y+16, r25	; 0x10
    113c:	8f 87       	std	Y+15, r24	; 0x0f
    113e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1140:	98 89       	ldd	r25, Y+16	; 0x10
    1142:	01 97       	sbiw	r24, 0x01	; 1
    1144:	f1 f7       	brne	.-4      	; 0x1142 <H_Keypad_Read+0xf4>
    1146:	98 8b       	std	Y+16, r25	; 0x10
    1148:	8f 87       	std	Y+15, r24	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    114a:	8d 85       	ldd	r24, Y+13	; 0x0d
    114c:	9e 85       	ldd	r25, Y+14	; 0x0e
    114e:	01 97       	sbiw	r24, 0x01	; 1
    1150:	9e 87       	std	Y+14, r25	; 0x0e
    1152:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1154:	8d 85       	ldd	r24, Y+13	; 0x0d
    1156:	9e 85       	ldd	r25, Y+14	; 0x0e
    1158:	89 2b       	or	r24, r25
    115a:	69 f7       	brne	.-38     	; 0x1136 <H_Keypad_Read+0xe8>
    115c:	14 c0       	rjmp	.+40     	; 0x1186 <H_Keypad_Read+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    115e:	69 85       	ldd	r22, Y+9	; 0x09
    1160:	7a 85       	ldd	r23, Y+10	; 0x0a
    1162:	8b 85       	ldd	r24, Y+11	; 0x0b
    1164:	9c 85       	ldd	r25, Y+12	; 0x0c
    1166:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    116a:	dc 01       	movw	r26, r24
    116c:	cb 01       	movw	r24, r22
    116e:	9e 87       	std	Y+14, r25	; 0x0e
    1170:	8d 87       	std	Y+13, r24	; 0x0d
    1172:	8d 85       	ldd	r24, Y+13	; 0x0d
    1174:	9e 85       	ldd	r25, Y+14	; 0x0e
    1176:	9a 8b       	std	Y+18, r25	; 0x12
    1178:	89 8b       	std	Y+17, r24	; 0x11
    117a:	89 89       	ldd	r24, Y+17	; 0x11
    117c:	9a 89       	ldd	r25, Y+18	; 0x12
    117e:	01 97       	sbiw	r24, 0x01	; 1
    1180:	f1 f7       	brne	.-4      	; 0x117e <H_Keypad_Read+0x130>
    1182:	9a 8b       	std	Y+18, r25	; 0x12
    1184:	89 8b       	std	Y+17, r24	; 0x11
			{
				_delay_ms(10);
				if ( M_Dio_PinRead(local_Column_cnt) == KEYPAD_PRESSED)
    1186:	8a 81       	ldd	r24, Y+2	; 0x02
    1188:	0e 94 a6 10 	call	0x214c	; 0x214c <M_Dio_PinRead>
    118c:	88 23       	and	r24, r24
    118e:	f9 f4       	brne	.+62     	; 0x11ce <H_Keypad_Read+0x180>
				{
					
					while (M_Dio_PinRead(local_Column_cnt) == KEYPAD_PRESSED);
    1190:	00 00       	nop
    1192:	8a 81       	ldd	r24, Y+2	; 0x02
    1194:	0e 94 a6 10 	call	0x214c	; 0x214c <M_Dio_PinRead>
    1198:	88 23       	and	r24, r24
    119a:	d9 f3       	breq	.-10     	; 0x1192 <H_Keypad_Read+0x144>
					local_u8_value = Keypad[local_Row_cnt - KEYPAD_R0_PIN ][local_Column_cnt - KEYPAD_C0_PIN];
    119c:	89 81       	ldd	r24, Y+1	; 0x01
    119e:	88 2f       	mov	r24, r24
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	9c 01       	movw	r18, r24
    11a4:	24 51       	subi	r18, 0x14	; 20
    11a6:	31 09       	sbc	r19, r1
    11a8:	8a 81       	ldd	r24, Y+2	; 0x02
    11aa:	88 2f       	mov	r24, r24
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	48 97       	sbiw	r24, 0x18	; 24
    11b0:	22 0f       	add	r18, r18
    11b2:	33 1f       	adc	r19, r19
    11b4:	22 0f       	add	r18, r18
    11b6:	33 1f       	adc	r19, r19
    11b8:	ae 01       	movw	r20, r28
    11ba:	4f 5f       	subi	r20, 0xFF	; 255
    11bc:	5f 4f       	sbci	r21, 0xFF	; 255
    11be:	24 0f       	add	r18, r20
    11c0:	35 1f       	adc	r19, r21
    11c2:	82 0f       	add	r24, r18
    11c4:	93 1f       	adc	r25, r19
    11c6:	42 96       	adiw	r24, 0x12	; 18
    11c8:	fc 01       	movw	r30, r24
    11ca:	80 81       	ld	r24, Z
    11cc:	8b 83       	std	Y+3, r24	; 0x03
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
	{
		M_Dio_PinWrite(local_Row_cnt, LOW);
		
		for (local_Column_cnt = KEYPAD_C0_PIN; local_Column_cnt <= KEYPAD_C3_PIN; local_Column_cnt++)
    11ce:	8a 81       	ldd	r24, Y+2	; 0x02
    11d0:	8f 5f       	subi	r24, 0xFF	; 255
    11d2:	8a 83       	std	Y+2, r24	; 0x02
    11d4:	8a 81       	ldd	r24, Y+2	; 0x02
    11d6:	8c 31       	cpi	r24, 0x1C	; 28
    11d8:	08 f4       	brcc	.+2      	; 0x11dc <H_Keypad_Read+0x18e>
    11da:	5b cf       	rjmp	.-330    	; 0x1092 <H_Keypad_Read+0x44>
				
				}
			}
		}
		
		M_Dio_PinWrite(local_Row_cnt, HIGH);
    11dc:	61 e0       	ldi	r22, 0x01	; 1
    11de:	89 81       	ldd	r24, Y+1	; 0x01
    11e0:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
	u8 local_Row_cnt = 0;
	u8 local_Column_cnt = 0;
	u8 local_u8_value = '\0';
	u8 local_u8_Reading = KEYPAD_RELEASED;
	
	for(local_Row_cnt = KEYPAD_R0_PIN; local_Row_cnt <= KEYPAD_R3_PIN; local_Row_cnt++)
    11e4:	89 81       	ldd	r24, Y+1	; 0x01
    11e6:	8f 5f       	subi	r24, 0xFF	; 255
    11e8:	89 83       	std	Y+1, r24	; 0x01
    11ea:	89 81       	ldd	r24, Y+1	; 0x01
    11ec:	88 31       	cpi	r24, 0x18	; 24
    11ee:	08 f4       	brcc	.+2      	; 0x11f2 <H_Keypad_Read+0x1a4>
    11f0:	49 cf       	rjmp	.-366    	; 0x1084 <H_Keypad_Read+0x36>
		}
		
		M_Dio_PinWrite(local_Row_cnt, HIGH);
	}
	
	return local_u8_value;
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	a2 96       	adiw	r28, 0x22	; 34
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	df 91       	pop	r29
    1202:	cf 91       	pop	r28
    1204:	08 95       	ret

00001206 <H_Lcd_Init>:
}

void H_Lcd_ShiftRight(void)
{
	H_Lcd_WriteCommand(LCD_SHIFT_RIGHT);
}
    1206:	cf 93       	push	r28
    1208:	df 93       	push	r29
    120a:	cd b7       	in	r28, 0x3d	; 61
    120c:	de b7       	in	r29, 0x3e	; 62
    120e:	2e 97       	sbiw	r28, 0x0e	; 14
    1210:	0f b6       	in	r0, 0x3f	; 63
    1212:	f8 94       	cli
    1214:	de bf       	out	0x3e, r29	; 62
    1216:	0f be       	out	0x3f, r0	; 63
    1218:	cd bf       	out	0x3d, r28	; 61
    121a:	61 e0       	ldi	r22, 0x01	; 1
    121c:	8e e0       	ldi	r24, 0x0E	; 14
    121e:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    1222:	61 e0       	ldi	r22, 0x01	; 1
    1224:	8f e0       	ldi	r24, 0x0F	; 15
    1226:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    122a:	61 e0       	ldi	r22, 0x01	; 1
    122c:	80 e1       	ldi	r24, 0x10	; 16
    122e:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    1232:	61 e0       	ldi	r22, 0x01	; 1
    1234:	81 e1       	ldi	r24, 0x11	; 17
    1236:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    123a:	61 e0       	ldi	r22, 0x01	; 1
    123c:	8f e1       	ldi	r24, 0x1F	; 31
    123e:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    1242:	61 e0       	ldi	r22, 0x01	; 1
    1244:	8e e1       	ldi	r24, 0x1E	; 30
    1246:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    124a:	61 e0       	ldi	r22, 0x01	; 1
    124c:	81 e2       	ldi	r24, 0x21	; 33
    124e:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <M_Dio_PinMode>
    1252:	62 e0       	ldi	r22, 0x02	; 2
    1254:	81 e2       	ldi	r24, 0x21	; 33
    1256:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    125a:	80 e0       	ldi	r24, 0x00	; 0
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	a8 ec       	ldi	r26, 0xC8	; 200
    1260:	b2 e4       	ldi	r27, 0x42	; 66
    1262:	89 83       	std	Y+1, r24	; 0x01
    1264:	9a 83       	std	Y+2, r25	; 0x02
    1266:	ab 83       	std	Y+3, r26	; 0x03
    1268:	bc 83       	std	Y+4, r27	; 0x04
    126a:	20 e0       	ldi	r18, 0x00	; 0
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	4a e7       	ldi	r20, 0x7A	; 122
    1270:	55 e4       	ldi	r21, 0x45	; 69
    1272:	69 81       	ldd	r22, Y+1	; 0x01
    1274:	7a 81       	ldd	r23, Y+2	; 0x02
    1276:	8b 81       	ldd	r24, Y+3	; 0x03
    1278:	9c 81       	ldd	r25, Y+4	; 0x04
    127a:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    127e:	dc 01       	movw	r26, r24
    1280:	cb 01       	movw	r24, r22
    1282:	8d 83       	std	Y+5, r24	; 0x05
    1284:	9e 83       	std	Y+6, r25	; 0x06
    1286:	af 83       	std	Y+7, r26	; 0x07
    1288:	b8 87       	std	Y+8, r27	; 0x08
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	40 e8       	ldi	r20, 0x80	; 128
    1290:	5f e3       	ldi	r21, 0x3F	; 63
    1292:	6d 81       	ldd	r22, Y+5	; 0x05
    1294:	7e 81       	ldd	r23, Y+6	; 0x06
    1296:	8f 81       	ldd	r24, Y+7	; 0x07
    1298:	98 85       	ldd	r25, Y+8	; 0x08
    129a:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    129e:	88 23       	and	r24, r24
    12a0:	2c f4       	brge	.+10     	; 0x12ac <H_Lcd_Init+0xa6>
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	9a 87       	std	Y+10, r25	; 0x0a
    12a8:	89 87       	std	Y+9, r24	; 0x09
    12aa:	3f c0       	rjmp	.+126    	; 0x132a <H_Lcd_Init+0x124>
    12ac:	20 e0       	ldi	r18, 0x00	; 0
    12ae:	3f ef       	ldi	r19, 0xFF	; 255
    12b0:	4f e7       	ldi	r20, 0x7F	; 127
    12b2:	57 e4       	ldi	r21, 0x47	; 71
    12b4:	6d 81       	ldd	r22, Y+5	; 0x05
    12b6:	7e 81       	ldd	r23, Y+6	; 0x06
    12b8:	8f 81       	ldd	r24, Y+7	; 0x07
    12ba:	98 85       	ldd	r25, Y+8	; 0x08
    12bc:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    12c0:	18 16       	cp	r1, r24
    12c2:	4c f5       	brge	.+82     	; 0x1316 <H_Lcd_Init+0x110>
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	40 e2       	ldi	r20, 0x20	; 32
    12ca:	51 e4       	ldi	r21, 0x41	; 65
    12cc:	69 81       	ldd	r22, Y+1	; 0x01
    12ce:	7a 81       	ldd	r23, Y+2	; 0x02
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	9c 81       	ldd	r25, Y+4	; 0x04
    12d4:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    12d8:	dc 01       	movw	r26, r24
    12da:	cb 01       	movw	r24, r22
    12dc:	bc 01       	movw	r22, r24
    12de:	cd 01       	movw	r24, r26
    12e0:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    12e4:	dc 01       	movw	r26, r24
    12e6:	cb 01       	movw	r24, r22
    12e8:	9a 87       	std	Y+10, r25	; 0x0a
    12ea:	89 87       	std	Y+9, r24	; 0x09
    12ec:	0f c0       	rjmp	.+30     	; 0x130c <H_Lcd_Init+0x106>
    12ee:	80 e9       	ldi	r24, 0x90	; 144
    12f0:	91 e0       	ldi	r25, 0x01	; 1
    12f2:	9c 87       	std	Y+12, r25	; 0x0c
    12f4:	8b 87       	std	Y+11, r24	; 0x0b
    12f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    12f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fa:	01 97       	sbiw	r24, 0x01	; 1
    12fc:	f1 f7       	brne	.-4      	; 0x12fa <H_Lcd_Init+0xf4>
    12fe:	9c 87       	std	Y+12, r25	; 0x0c
    1300:	8b 87       	std	Y+11, r24	; 0x0b
    1302:	89 85       	ldd	r24, Y+9	; 0x09
    1304:	9a 85       	ldd	r25, Y+10	; 0x0a
    1306:	01 97       	sbiw	r24, 0x01	; 1
    1308:	9a 87       	std	Y+10, r25	; 0x0a
    130a:	89 87       	std	Y+9, r24	; 0x09
    130c:	89 85       	ldd	r24, Y+9	; 0x09
    130e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1310:	89 2b       	or	r24, r25
    1312:	69 f7       	brne	.-38     	; 0x12ee <H_Lcd_Init+0xe8>
    1314:	14 c0       	rjmp	.+40     	; 0x133e <H_Lcd_Init+0x138>
    1316:	6d 81       	ldd	r22, Y+5	; 0x05
    1318:	7e 81       	ldd	r23, Y+6	; 0x06
    131a:	8f 81       	ldd	r24, Y+7	; 0x07
    131c:	98 85       	ldd	r25, Y+8	; 0x08
    131e:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1322:	dc 01       	movw	r26, r24
    1324:	cb 01       	movw	r24, r22
    1326:	9a 87       	std	Y+10, r25	; 0x0a
    1328:	89 87       	std	Y+9, r24	; 0x09
    132a:	89 85       	ldd	r24, Y+9	; 0x09
    132c:	9a 85       	ldd	r25, Y+10	; 0x0a
    132e:	9e 87       	std	Y+14, r25	; 0x0e
    1330:	8d 87       	std	Y+13, r24	; 0x0d
    1332:	8d 85       	ldd	r24, Y+13	; 0x0d
    1334:	9e 85       	ldd	r25, Y+14	; 0x0e
    1336:	01 97       	sbiw	r24, 0x01	; 1
    1338:	f1 f7       	brne	.-4      	; 0x1336 <H_Lcd_Init+0x130>
    133a:	9e 87       	std	Y+14, r25	; 0x0e
    133c:	8d 87       	std	Y+13, r24	; 0x0d
    133e:	83 e3       	ldi	r24, 0x33	; 51
    1340:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1344:	82 e3       	ldi	r24, 0x32	; 50
    1346:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    134a:	88 e2       	ldi	r24, 0x28	; 40
    134c:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1350:	8c e0       	ldi	r24, 0x0C	; 12
    1352:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1356:	81 e0       	ldi	r24, 0x01	; 1
    1358:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    135c:	82 e0       	ldi	r24, 0x02	; 2
    135e:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1362:	00 00       	nop
    1364:	2e 96       	adiw	r28, 0x0e	; 14
    1366:	0f b6       	in	r0, 0x3f	; 63
    1368:	f8 94       	cli
    136a:	de bf       	out	0x3e, r29	; 62
    136c:	0f be       	out	0x3f, r0	; 63
    136e:	cd bf       	out	0x3d, r28	; 61
    1370:	df 91       	pop	r29
    1372:	cf 91       	pop	r28
    1374:	08 95       	ret

00001376 <H_Lcd_WriteCharacter>:
    1376:	cf 93       	push	r28
    1378:	df 93       	push	r29
    137a:	cd b7       	in	r28, 0x3d	; 61
    137c:	de b7       	in	r29, 0x3e	; 62
    137e:	e9 97       	sbiw	r28, 0x39	; 57
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	f8 94       	cli
    1384:	de bf       	out	0x3e, r29	; 62
    1386:	0f be       	out	0x3f, r0	; 63
    1388:	cd bf       	out	0x3d, r28	; 61
    138a:	89 af       	std	Y+57, r24	; 0x39
    138c:	61 e0       	ldi	r22, 0x01	; 1
    138e:	8f e1       	ldi	r24, 0x1F	; 31
    1390:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    1394:	8b e3       	ldi	r24, 0x3B	; 59
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	29 ad       	ldd	r18, Y+57	; 0x39
    139a:	42 2f       	mov	r20, r18
    139c:	40 7f       	andi	r20, 0xF0	; 240
    139e:	2b e3       	ldi	r18, 0x3B	; 59
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	f9 01       	movw	r30, r18
    13a4:	20 81       	ld	r18, Z
    13a6:	2f 70       	andi	r18, 0x0F	; 15
    13a8:	24 2b       	or	r18, r20
    13aa:	fc 01       	movw	r30, r24
    13ac:	20 83       	st	Z, r18
    13ae:	61 e0       	ldi	r22, 0x01	; 1
    13b0:	8e e1       	ldi	r24, 0x1E	; 30
    13b2:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    13b6:	80 e0       	ldi	r24, 0x00	; 0
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	a0 e8       	ldi	r26, 0x80	; 128
    13bc:	bf e3       	ldi	r27, 0x3F	; 63
    13be:	89 83       	std	Y+1, r24	; 0x01
    13c0:	9a 83       	std	Y+2, r25	; 0x02
    13c2:	ab 83       	std	Y+3, r26	; 0x03
    13c4:	bc 83       	std	Y+4, r27	; 0x04
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	4a e7       	ldi	r20, 0x7A	; 122
    13cc:	55 e4       	ldi	r21, 0x45	; 69
    13ce:	69 81       	ldd	r22, Y+1	; 0x01
    13d0:	7a 81       	ldd	r23, Y+2	; 0x02
    13d2:	8b 81       	ldd	r24, Y+3	; 0x03
    13d4:	9c 81       	ldd	r25, Y+4	; 0x04
    13d6:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    13da:	dc 01       	movw	r26, r24
    13dc:	cb 01       	movw	r24, r22
    13de:	8f a7       	std	Y+47, r24	; 0x2f
    13e0:	98 ab       	std	Y+48, r25	; 0x30
    13e2:	a9 ab       	std	Y+49, r26	; 0x31
    13e4:	ba ab       	std	Y+50, r27	; 0x32
    13e6:	20 e0       	ldi	r18, 0x00	; 0
    13e8:	30 e0       	ldi	r19, 0x00	; 0
    13ea:	40 e8       	ldi	r20, 0x80	; 128
    13ec:	5f e3       	ldi	r21, 0x3F	; 63
    13ee:	6f a5       	ldd	r22, Y+47	; 0x2f
    13f0:	78 a9       	ldd	r23, Y+48	; 0x30
    13f2:	89 a9       	ldd	r24, Y+49	; 0x31
    13f4:	9a a9       	ldd	r25, Y+50	; 0x32
    13f6:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    13fa:	88 23       	and	r24, r24
    13fc:	2c f4       	brge	.+10     	; 0x1408 <H_Lcd_WriteCharacter+0x92>
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	9c ab       	std	Y+52, r25	; 0x34
    1404:	8b ab       	std	Y+51, r24	; 0x33
    1406:	3f c0       	rjmp	.+126    	; 0x1486 <H_Lcd_WriteCharacter+0x110>
    1408:	20 e0       	ldi	r18, 0x00	; 0
    140a:	3f ef       	ldi	r19, 0xFF	; 255
    140c:	4f e7       	ldi	r20, 0x7F	; 127
    140e:	57 e4       	ldi	r21, 0x47	; 71
    1410:	6f a5       	ldd	r22, Y+47	; 0x2f
    1412:	78 a9       	ldd	r23, Y+48	; 0x30
    1414:	89 a9       	ldd	r24, Y+49	; 0x31
    1416:	9a a9       	ldd	r25, Y+50	; 0x32
    1418:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    141c:	18 16       	cp	r1, r24
    141e:	4c f5       	brge	.+82     	; 0x1472 <H_Lcd_WriteCharacter+0xfc>
    1420:	20 e0       	ldi	r18, 0x00	; 0
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	40 e2       	ldi	r20, 0x20	; 32
    1426:	51 e4       	ldi	r21, 0x41	; 65
    1428:	69 81       	ldd	r22, Y+1	; 0x01
    142a:	7a 81       	ldd	r23, Y+2	; 0x02
    142c:	8b 81       	ldd	r24, Y+3	; 0x03
    142e:	9c 81       	ldd	r25, Y+4	; 0x04
    1430:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1434:	dc 01       	movw	r26, r24
    1436:	cb 01       	movw	r24, r22
    1438:	bc 01       	movw	r22, r24
    143a:	cd 01       	movw	r24, r26
    143c:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1440:	dc 01       	movw	r26, r24
    1442:	cb 01       	movw	r24, r22
    1444:	9c ab       	std	Y+52, r25	; 0x34
    1446:	8b ab       	std	Y+51, r24	; 0x33
    1448:	0f c0       	rjmp	.+30     	; 0x1468 <H_Lcd_WriteCharacter+0xf2>
    144a:	80 e9       	ldi	r24, 0x90	; 144
    144c:	91 e0       	ldi	r25, 0x01	; 1
    144e:	9e ab       	std	Y+54, r25	; 0x36
    1450:	8d ab       	std	Y+53, r24	; 0x35
    1452:	8d a9       	ldd	r24, Y+53	; 0x35
    1454:	9e a9       	ldd	r25, Y+54	; 0x36
    1456:	01 97       	sbiw	r24, 0x01	; 1
    1458:	f1 f7       	brne	.-4      	; 0x1456 <H_Lcd_WriteCharacter+0xe0>
    145a:	9e ab       	std	Y+54, r25	; 0x36
    145c:	8d ab       	std	Y+53, r24	; 0x35
    145e:	8b a9       	ldd	r24, Y+51	; 0x33
    1460:	9c a9       	ldd	r25, Y+52	; 0x34
    1462:	01 97       	sbiw	r24, 0x01	; 1
    1464:	9c ab       	std	Y+52, r25	; 0x34
    1466:	8b ab       	std	Y+51, r24	; 0x33
    1468:	8b a9       	ldd	r24, Y+51	; 0x33
    146a:	9c a9       	ldd	r25, Y+52	; 0x34
    146c:	89 2b       	or	r24, r25
    146e:	69 f7       	brne	.-38     	; 0x144a <H_Lcd_WriteCharacter+0xd4>
    1470:	14 c0       	rjmp	.+40     	; 0x149a <H_Lcd_WriteCharacter+0x124>
    1472:	6f a5       	ldd	r22, Y+47	; 0x2f
    1474:	78 a9       	ldd	r23, Y+48	; 0x30
    1476:	89 a9       	ldd	r24, Y+49	; 0x31
    1478:	9a a9       	ldd	r25, Y+50	; 0x32
    147a:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    147e:	dc 01       	movw	r26, r24
    1480:	cb 01       	movw	r24, r22
    1482:	9c ab       	std	Y+52, r25	; 0x34
    1484:	8b ab       	std	Y+51, r24	; 0x33
    1486:	8b a9       	ldd	r24, Y+51	; 0x33
    1488:	9c a9       	ldd	r25, Y+52	; 0x34
    148a:	98 af       	std	Y+56, r25	; 0x38
    148c:	8f ab       	std	Y+55, r24	; 0x37
    148e:	8f a9       	ldd	r24, Y+55	; 0x37
    1490:	98 ad       	ldd	r25, Y+56	; 0x38
    1492:	01 97       	sbiw	r24, 0x01	; 1
    1494:	f1 f7       	brne	.-4      	; 0x1492 <H_Lcd_WriteCharacter+0x11c>
    1496:	98 af       	std	Y+56, r25	; 0x38
    1498:	8f ab       	std	Y+55, r24	; 0x37
    149a:	62 e0       	ldi	r22, 0x02	; 2
    149c:	8e e1       	ldi	r24, 0x1E	; 30
    149e:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    14a2:	80 e0       	ldi	r24, 0x00	; 0
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	a0 e8       	ldi	r26, 0x80	; 128
    14a8:	bf e3       	ldi	r27, 0x3F	; 63
    14aa:	8d 83       	std	Y+5, r24	; 0x05
    14ac:	9e 83       	std	Y+6, r25	; 0x06
    14ae:	af 83       	std	Y+7, r26	; 0x07
    14b0:	b8 87       	std	Y+8, r27	; 0x08
    14b2:	20 e0       	ldi	r18, 0x00	; 0
    14b4:	30 e0       	ldi	r19, 0x00	; 0
    14b6:	4a e7       	ldi	r20, 0x7A	; 122
    14b8:	55 e4       	ldi	r21, 0x45	; 69
    14ba:	6d 81       	ldd	r22, Y+5	; 0x05
    14bc:	7e 81       	ldd	r23, Y+6	; 0x06
    14be:	8f 81       	ldd	r24, Y+7	; 0x07
    14c0:	98 85       	ldd	r25, Y+8	; 0x08
    14c2:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    14c6:	dc 01       	movw	r26, r24
    14c8:	cb 01       	movw	r24, r22
    14ca:	8d a3       	std	Y+37, r24	; 0x25
    14cc:	9e a3       	std	Y+38, r25	; 0x26
    14ce:	af a3       	std	Y+39, r26	; 0x27
    14d0:	b8 a7       	std	Y+40, r27	; 0x28
    14d2:	20 e0       	ldi	r18, 0x00	; 0
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	40 e8       	ldi	r20, 0x80	; 128
    14d8:	5f e3       	ldi	r21, 0x3F	; 63
    14da:	6d a1       	ldd	r22, Y+37	; 0x25
    14dc:	7e a1       	ldd	r23, Y+38	; 0x26
    14de:	8f a1       	ldd	r24, Y+39	; 0x27
    14e0:	98 a5       	ldd	r25, Y+40	; 0x28
    14e2:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    14e6:	88 23       	and	r24, r24
    14e8:	2c f4       	brge	.+10     	; 0x14f4 <H_Lcd_WriteCharacter+0x17e>
    14ea:	81 e0       	ldi	r24, 0x01	; 1
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	9a a7       	std	Y+42, r25	; 0x2a
    14f0:	89 a7       	std	Y+41, r24	; 0x29
    14f2:	3f c0       	rjmp	.+126    	; 0x1572 <H_Lcd_WriteCharacter+0x1fc>
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	3f ef       	ldi	r19, 0xFF	; 255
    14f8:	4f e7       	ldi	r20, 0x7F	; 127
    14fa:	57 e4       	ldi	r21, 0x47	; 71
    14fc:	6d a1       	ldd	r22, Y+37	; 0x25
    14fe:	7e a1       	ldd	r23, Y+38	; 0x26
    1500:	8f a1       	ldd	r24, Y+39	; 0x27
    1502:	98 a5       	ldd	r25, Y+40	; 0x28
    1504:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1508:	18 16       	cp	r1, r24
    150a:	4c f5       	brge	.+82     	; 0x155e <H_Lcd_WriteCharacter+0x1e8>
    150c:	20 e0       	ldi	r18, 0x00	; 0
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	40 e2       	ldi	r20, 0x20	; 32
    1512:	51 e4       	ldi	r21, 0x41	; 65
    1514:	6d 81       	ldd	r22, Y+5	; 0x05
    1516:	7e 81       	ldd	r23, Y+6	; 0x06
    1518:	8f 81       	ldd	r24, Y+7	; 0x07
    151a:	98 85       	ldd	r25, Y+8	; 0x08
    151c:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1520:	dc 01       	movw	r26, r24
    1522:	cb 01       	movw	r24, r22
    1524:	bc 01       	movw	r22, r24
    1526:	cd 01       	movw	r24, r26
    1528:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    152c:	dc 01       	movw	r26, r24
    152e:	cb 01       	movw	r24, r22
    1530:	9a a7       	std	Y+42, r25	; 0x2a
    1532:	89 a7       	std	Y+41, r24	; 0x29
    1534:	0f c0       	rjmp	.+30     	; 0x1554 <H_Lcd_WriteCharacter+0x1de>
    1536:	80 e9       	ldi	r24, 0x90	; 144
    1538:	91 e0       	ldi	r25, 0x01	; 1
    153a:	9c a7       	std	Y+44, r25	; 0x2c
    153c:	8b a7       	std	Y+43, r24	; 0x2b
    153e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1540:	9c a5       	ldd	r25, Y+44	; 0x2c
    1542:	01 97       	sbiw	r24, 0x01	; 1
    1544:	f1 f7       	brne	.-4      	; 0x1542 <H_Lcd_WriteCharacter+0x1cc>
    1546:	9c a7       	std	Y+44, r25	; 0x2c
    1548:	8b a7       	std	Y+43, r24	; 0x2b
    154a:	89 a5       	ldd	r24, Y+41	; 0x29
    154c:	9a a5       	ldd	r25, Y+42	; 0x2a
    154e:	01 97       	sbiw	r24, 0x01	; 1
    1550:	9a a7       	std	Y+42, r25	; 0x2a
    1552:	89 a7       	std	Y+41, r24	; 0x29
    1554:	89 a5       	ldd	r24, Y+41	; 0x29
    1556:	9a a5       	ldd	r25, Y+42	; 0x2a
    1558:	89 2b       	or	r24, r25
    155a:	69 f7       	brne	.-38     	; 0x1536 <H_Lcd_WriteCharacter+0x1c0>
    155c:	14 c0       	rjmp	.+40     	; 0x1586 <H_Lcd_WriteCharacter+0x210>
    155e:	6d a1       	ldd	r22, Y+37	; 0x25
    1560:	7e a1       	ldd	r23, Y+38	; 0x26
    1562:	8f a1       	ldd	r24, Y+39	; 0x27
    1564:	98 a5       	ldd	r25, Y+40	; 0x28
    1566:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	9a a7       	std	Y+42, r25	; 0x2a
    1570:	89 a7       	std	Y+41, r24	; 0x29
    1572:	89 a5       	ldd	r24, Y+41	; 0x29
    1574:	9a a5       	ldd	r25, Y+42	; 0x2a
    1576:	9e a7       	std	Y+46, r25	; 0x2e
    1578:	8d a7       	std	Y+45, r24	; 0x2d
    157a:	8d a5       	ldd	r24, Y+45	; 0x2d
    157c:	9e a5       	ldd	r25, Y+46	; 0x2e
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	f1 f7       	brne	.-4      	; 0x157e <H_Lcd_WriteCharacter+0x208>
    1582:	9e a7       	std	Y+46, r25	; 0x2e
    1584:	8d a7       	std	Y+45, r24	; 0x2d
    1586:	8b e3       	ldi	r24, 0x3B	; 59
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	29 ad       	ldd	r18, Y+57	; 0x39
    158c:	22 2f       	mov	r18, r18
    158e:	30 e0       	ldi	r19, 0x00	; 0
    1590:	22 95       	swap	r18
    1592:	32 95       	swap	r19
    1594:	30 7f       	andi	r19, 0xF0	; 240
    1596:	32 27       	eor	r19, r18
    1598:	20 7f       	andi	r18, 0xF0	; 240
    159a:	32 27       	eor	r19, r18
    159c:	42 2f       	mov	r20, r18
    159e:	2b e3       	ldi	r18, 0x3B	; 59
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	f9 01       	movw	r30, r18
    15a4:	20 81       	ld	r18, Z
    15a6:	2f 70       	andi	r18, 0x0F	; 15
    15a8:	24 2b       	or	r18, r20
    15aa:	fc 01       	movw	r30, r24
    15ac:	20 83       	st	Z, r18
    15ae:	61 e0       	ldi	r22, 0x01	; 1
    15b0:	8e e1       	ldi	r24, 0x1E	; 30
    15b2:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	a0 e8       	ldi	r26, 0x80	; 128
    15bc:	bf e3       	ldi	r27, 0x3F	; 63
    15be:	89 87       	std	Y+9, r24	; 0x09
    15c0:	9a 87       	std	Y+10, r25	; 0x0a
    15c2:	ab 87       	std	Y+11, r26	; 0x0b
    15c4:	bc 87       	std	Y+12, r27	; 0x0c
    15c6:	20 e0       	ldi	r18, 0x00	; 0
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	4a e7       	ldi	r20, 0x7A	; 122
    15cc:	55 e4       	ldi	r21, 0x45	; 69
    15ce:	69 85       	ldd	r22, Y+9	; 0x09
    15d0:	7a 85       	ldd	r23, Y+10	; 0x0a
    15d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    15d4:	9c 85       	ldd	r25, Y+12	; 0x0c
    15d6:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    15da:	dc 01       	movw	r26, r24
    15dc:	cb 01       	movw	r24, r22
    15de:	8b 8f       	std	Y+27, r24	; 0x1b
    15e0:	9c 8f       	std	Y+28, r25	; 0x1c
    15e2:	ad 8f       	std	Y+29, r26	; 0x1d
    15e4:	be 8f       	std	Y+30, r27	; 0x1e
    15e6:	20 e0       	ldi	r18, 0x00	; 0
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	40 e8       	ldi	r20, 0x80	; 128
    15ec:	5f e3       	ldi	r21, 0x3F	; 63
    15ee:	6b 8d       	ldd	r22, Y+27	; 0x1b
    15f0:	7c 8d       	ldd	r23, Y+28	; 0x1c
    15f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15f6:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    15fa:	88 23       	and	r24, r24
    15fc:	2c f4       	brge	.+10     	; 0x1608 <H_Lcd_WriteCharacter+0x292>
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	98 a3       	std	Y+32, r25	; 0x20
    1604:	8f 8f       	std	Y+31, r24	; 0x1f
    1606:	3f c0       	rjmp	.+126    	; 0x1686 <H_Lcd_WriteCharacter+0x310>
    1608:	20 e0       	ldi	r18, 0x00	; 0
    160a:	3f ef       	ldi	r19, 0xFF	; 255
    160c:	4f e7       	ldi	r20, 0x7F	; 127
    160e:	57 e4       	ldi	r21, 0x47	; 71
    1610:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1612:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1614:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1616:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1618:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    161c:	18 16       	cp	r1, r24
    161e:	4c f5       	brge	.+82     	; 0x1672 <H_Lcd_WriteCharacter+0x2fc>
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	40 e2       	ldi	r20, 0x20	; 32
    1626:	51 e4       	ldi	r21, 0x41	; 65
    1628:	69 85       	ldd	r22, Y+9	; 0x09
    162a:	7a 85       	ldd	r23, Y+10	; 0x0a
    162c:	8b 85       	ldd	r24, Y+11	; 0x0b
    162e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1630:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1634:	dc 01       	movw	r26, r24
    1636:	cb 01       	movw	r24, r22
    1638:	bc 01       	movw	r22, r24
    163a:	cd 01       	movw	r24, r26
    163c:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1640:	dc 01       	movw	r26, r24
    1642:	cb 01       	movw	r24, r22
    1644:	98 a3       	std	Y+32, r25	; 0x20
    1646:	8f 8f       	std	Y+31, r24	; 0x1f
    1648:	0f c0       	rjmp	.+30     	; 0x1668 <H_Lcd_WriteCharacter+0x2f2>
    164a:	80 e9       	ldi	r24, 0x90	; 144
    164c:	91 e0       	ldi	r25, 0x01	; 1
    164e:	9a a3       	std	Y+34, r25	; 0x22
    1650:	89 a3       	std	Y+33, r24	; 0x21
    1652:	89 a1       	ldd	r24, Y+33	; 0x21
    1654:	9a a1       	ldd	r25, Y+34	; 0x22
    1656:	01 97       	sbiw	r24, 0x01	; 1
    1658:	f1 f7       	brne	.-4      	; 0x1656 <H_Lcd_WriteCharacter+0x2e0>
    165a:	9a a3       	std	Y+34, r25	; 0x22
    165c:	89 a3       	std	Y+33, r24	; 0x21
    165e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1660:	98 a1       	ldd	r25, Y+32	; 0x20
    1662:	01 97       	sbiw	r24, 0x01	; 1
    1664:	98 a3       	std	Y+32, r25	; 0x20
    1666:	8f 8f       	std	Y+31, r24	; 0x1f
    1668:	8f 8d       	ldd	r24, Y+31	; 0x1f
    166a:	98 a1       	ldd	r25, Y+32	; 0x20
    166c:	89 2b       	or	r24, r25
    166e:	69 f7       	brne	.-38     	; 0x164a <H_Lcd_WriteCharacter+0x2d4>
    1670:	14 c0       	rjmp	.+40     	; 0x169a <H_Lcd_WriteCharacter+0x324>
    1672:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1674:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1676:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1678:	9e 8d       	ldd	r25, Y+30	; 0x1e
    167a:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    167e:	dc 01       	movw	r26, r24
    1680:	cb 01       	movw	r24, r22
    1682:	98 a3       	std	Y+32, r25	; 0x20
    1684:	8f 8f       	std	Y+31, r24	; 0x1f
    1686:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1688:	98 a1       	ldd	r25, Y+32	; 0x20
    168a:	9c a3       	std	Y+36, r25	; 0x24
    168c:	8b a3       	std	Y+35, r24	; 0x23
    168e:	8b a1       	ldd	r24, Y+35	; 0x23
    1690:	9c a1       	ldd	r25, Y+36	; 0x24
    1692:	01 97       	sbiw	r24, 0x01	; 1
    1694:	f1 f7       	brne	.-4      	; 0x1692 <H_Lcd_WriteCharacter+0x31c>
    1696:	9c a3       	std	Y+36, r25	; 0x24
    1698:	8b a3       	std	Y+35, r24	; 0x23
    169a:	62 e0       	ldi	r22, 0x02	; 2
    169c:	8e e1       	ldi	r24, 0x1E	; 30
    169e:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    16a2:	80 e0       	ldi	r24, 0x00	; 0
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	a0 ea       	ldi	r26, 0xA0	; 160
    16a8:	b0 e4       	ldi	r27, 0x40	; 64
    16aa:	8d 87       	std	Y+13, r24	; 0x0d
    16ac:	9e 87       	std	Y+14, r25	; 0x0e
    16ae:	af 87       	std	Y+15, r26	; 0x0f
    16b0:	b8 8b       	std	Y+16, r27	; 0x10
    16b2:	20 e0       	ldi	r18, 0x00	; 0
    16b4:	30 e0       	ldi	r19, 0x00	; 0
    16b6:	4a e7       	ldi	r20, 0x7A	; 122
    16b8:	55 e4       	ldi	r21, 0x45	; 69
    16ba:	6d 85       	ldd	r22, Y+13	; 0x0d
    16bc:	7e 85       	ldd	r23, Y+14	; 0x0e
    16be:	8f 85       	ldd	r24, Y+15	; 0x0f
    16c0:	98 89       	ldd	r25, Y+16	; 0x10
    16c2:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    16c6:	dc 01       	movw	r26, r24
    16c8:	cb 01       	movw	r24, r22
    16ca:	89 8b       	std	Y+17, r24	; 0x11
    16cc:	9a 8b       	std	Y+18, r25	; 0x12
    16ce:	ab 8b       	std	Y+19, r26	; 0x13
    16d0:	bc 8b       	std	Y+20, r27	; 0x14
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	40 e8       	ldi	r20, 0x80	; 128
    16d8:	5f e3       	ldi	r21, 0x3F	; 63
    16da:	69 89       	ldd	r22, Y+17	; 0x11
    16dc:	7a 89       	ldd	r23, Y+18	; 0x12
    16de:	8b 89       	ldd	r24, Y+19	; 0x13
    16e0:	9c 89       	ldd	r25, Y+20	; 0x14
    16e2:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    16e6:	88 23       	and	r24, r24
    16e8:	2c f4       	brge	.+10     	; 0x16f4 <H_Lcd_WriteCharacter+0x37e>
    16ea:	81 e0       	ldi	r24, 0x01	; 1
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	9e 8b       	std	Y+22, r25	; 0x16
    16f0:	8d 8b       	std	Y+21, r24	; 0x15
    16f2:	3f c0       	rjmp	.+126    	; 0x1772 <H_Lcd_WriteCharacter+0x3fc>
    16f4:	20 e0       	ldi	r18, 0x00	; 0
    16f6:	3f ef       	ldi	r19, 0xFF	; 255
    16f8:	4f e7       	ldi	r20, 0x7F	; 127
    16fa:	57 e4       	ldi	r21, 0x47	; 71
    16fc:	69 89       	ldd	r22, Y+17	; 0x11
    16fe:	7a 89       	ldd	r23, Y+18	; 0x12
    1700:	8b 89       	ldd	r24, Y+19	; 0x13
    1702:	9c 89       	ldd	r25, Y+20	; 0x14
    1704:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1708:	18 16       	cp	r1, r24
    170a:	4c f5       	brge	.+82     	; 0x175e <H_Lcd_WriteCharacter+0x3e8>
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	40 e2       	ldi	r20, 0x20	; 32
    1712:	51 e4       	ldi	r21, 0x41	; 65
    1714:	6d 85       	ldd	r22, Y+13	; 0x0d
    1716:	7e 85       	ldd	r23, Y+14	; 0x0e
    1718:	8f 85       	ldd	r24, Y+15	; 0x0f
    171a:	98 89       	ldd	r25, Y+16	; 0x10
    171c:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1720:	dc 01       	movw	r26, r24
    1722:	cb 01       	movw	r24, r22
    1724:	bc 01       	movw	r22, r24
    1726:	cd 01       	movw	r24, r26
    1728:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    172c:	dc 01       	movw	r26, r24
    172e:	cb 01       	movw	r24, r22
    1730:	9e 8b       	std	Y+22, r25	; 0x16
    1732:	8d 8b       	std	Y+21, r24	; 0x15
    1734:	0f c0       	rjmp	.+30     	; 0x1754 <H_Lcd_WriteCharacter+0x3de>
    1736:	80 e9       	ldi	r24, 0x90	; 144
    1738:	91 e0       	ldi	r25, 0x01	; 1
    173a:	98 8f       	std	Y+24, r25	; 0x18
    173c:	8f 8b       	std	Y+23, r24	; 0x17
    173e:	8f 89       	ldd	r24, Y+23	; 0x17
    1740:	98 8d       	ldd	r25, Y+24	; 0x18
    1742:	01 97       	sbiw	r24, 0x01	; 1
    1744:	f1 f7       	brne	.-4      	; 0x1742 <H_Lcd_WriteCharacter+0x3cc>
    1746:	98 8f       	std	Y+24, r25	; 0x18
    1748:	8f 8b       	std	Y+23, r24	; 0x17
    174a:	8d 89       	ldd	r24, Y+21	; 0x15
    174c:	9e 89       	ldd	r25, Y+22	; 0x16
    174e:	01 97       	sbiw	r24, 0x01	; 1
    1750:	9e 8b       	std	Y+22, r25	; 0x16
    1752:	8d 8b       	std	Y+21, r24	; 0x15
    1754:	8d 89       	ldd	r24, Y+21	; 0x15
    1756:	9e 89       	ldd	r25, Y+22	; 0x16
    1758:	89 2b       	or	r24, r25
    175a:	69 f7       	brne	.-38     	; 0x1736 <H_Lcd_WriteCharacter+0x3c0>
    175c:	14 c0       	rjmp	.+40     	; 0x1786 <H_Lcd_WriteCharacter+0x410>
    175e:	69 89       	ldd	r22, Y+17	; 0x11
    1760:	7a 89       	ldd	r23, Y+18	; 0x12
    1762:	8b 89       	ldd	r24, Y+19	; 0x13
    1764:	9c 89       	ldd	r25, Y+20	; 0x14
    1766:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    176a:	dc 01       	movw	r26, r24
    176c:	cb 01       	movw	r24, r22
    176e:	9e 8b       	std	Y+22, r25	; 0x16
    1770:	8d 8b       	std	Y+21, r24	; 0x15
    1772:	8d 89       	ldd	r24, Y+21	; 0x15
    1774:	9e 89       	ldd	r25, Y+22	; 0x16
    1776:	9a 8f       	std	Y+26, r25	; 0x1a
    1778:	89 8f       	std	Y+25, r24	; 0x19
    177a:	89 8d       	ldd	r24, Y+25	; 0x19
    177c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    177e:	01 97       	sbiw	r24, 0x01	; 1
    1780:	f1 f7       	brne	.-4      	; 0x177e <H_Lcd_WriteCharacter+0x408>
    1782:	9a 8f       	std	Y+26, r25	; 0x1a
    1784:	89 8f       	std	Y+25, r24	; 0x19
    1786:	00 00       	nop
    1788:	e9 96       	adiw	r28, 0x39	; 57
    178a:	0f b6       	in	r0, 0x3f	; 63
    178c:	f8 94       	cli
    178e:	de bf       	out	0x3e, r29	; 62
    1790:	0f be       	out	0x3f, r0	; 63
    1792:	cd bf       	out	0x3d, r28	; 61
    1794:	df 91       	pop	r29
    1796:	cf 91       	pop	r28
    1798:	08 95       	ret

0000179a <H_Lcd_WriteCommand>:
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
    179e:	cd b7       	in	r28, 0x3d	; 61
    17a0:	de b7       	in	r29, 0x3e	; 62
    17a2:	e9 97       	sbiw	r28, 0x39	; 57
    17a4:	0f b6       	in	r0, 0x3f	; 63
    17a6:	f8 94       	cli
    17a8:	de bf       	out	0x3e, r29	; 62
    17aa:	0f be       	out	0x3f, r0	; 63
    17ac:	cd bf       	out	0x3d, r28	; 61
    17ae:	89 af       	std	Y+57, r24	; 0x39
    17b0:	62 e0       	ldi	r22, 0x02	; 2
    17b2:	8f e1       	ldi	r24, 0x1F	; 31
    17b4:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    17b8:	8b e3       	ldi	r24, 0x3B	; 59
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	29 ad       	ldd	r18, Y+57	; 0x39
    17be:	42 2f       	mov	r20, r18
    17c0:	40 7f       	andi	r20, 0xF0	; 240
    17c2:	2b e3       	ldi	r18, 0x3B	; 59
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	f9 01       	movw	r30, r18
    17c8:	20 81       	ld	r18, Z
    17ca:	2f 70       	andi	r18, 0x0F	; 15
    17cc:	24 2b       	or	r18, r20
    17ce:	fc 01       	movw	r30, r24
    17d0:	20 83       	st	Z, r18
    17d2:	61 e0       	ldi	r22, 0x01	; 1
    17d4:	8e e1       	ldi	r24, 0x1E	; 30
    17d6:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    17da:	80 e0       	ldi	r24, 0x00	; 0
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	a0 e8       	ldi	r26, 0x80	; 128
    17e0:	bf e3       	ldi	r27, 0x3F	; 63
    17e2:	89 83       	std	Y+1, r24	; 0x01
    17e4:	9a 83       	std	Y+2, r25	; 0x02
    17e6:	ab 83       	std	Y+3, r26	; 0x03
    17e8:	bc 83       	std	Y+4, r27	; 0x04
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	4a e7       	ldi	r20, 0x7A	; 122
    17f0:	55 e4       	ldi	r21, 0x45	; 69
    17f2:	69 81       	ldd	r22, Y+1	; 0x01
    17f4:	7a 81       	ldd	r23, Y+2	; 0x02
    17f6:	8b 81       	ldd	r24, Y+3	; 0x03
    17f8:	9c 81       	ldd	r25, Y+4	; 0x04
    17fa:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	8f a7       	std	Y+47, r24	; 0x2f
    1804:	98 ab       	std	Y+48, r25	; 0x30
    1806:	a9 ab       	std	Y+49, r26	; 0x31
    1808:	ba ab       	std	Y+50, r27	; 0x32
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	40 e8       	ldi	r20, 0x80	; 128
    1810:	5f e3       	ldi	r21, 0x3F	; 63
    1812:	6f a5       	ldd	r22, Y+47	; 0x2f
    1814:	78 a9       	ldd	r23, Y+48	; 0x30
    1816:	89 a9       	ldd	r24, Y+49	; 0x31
    1818:	9a a9       	ldd	r25, Y+50	; 0x32
    181a:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    181e:	88 23       	and	r24, r24
    1820:	2c f4       	brge	.+10     	; 0x182c <H_Lcd_WriteCommand+0x92>
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	9c ab       	std	Y+52, r25	; 0x34
    1828:	8b ab       	std	Y+51, r24	; 0x33
    182a:	3f c0       	rjmp	.+126    	; 0x18aa <H_Lcd_WriteCommand+0x110>
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	3f ef       	ldi	r19, 0xFF	; 255
    1830:	4f e7       	ldi	r20, 0x7F	; 127
    1832:	57 e4       	ldi	r21, 0x47	; 71
    1834:	6f a5       	ldd	r22, Y+47	; 0x2f
    1836:	78 a9       	ldd	r23, Y+48	; 0x30
    1838:	89 a9       	ldd	r24, Y+49	; 0x31
    183a:	9a a9       	ldd	r25, Y+50	; 0x32
    183c:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1840:	18 16       	cp	r1, r24
    1842:	4c f5       	brge	.+82     	; 0x1896 <H_Lcd_WriteCommand+0xfc>
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	30 e0       	ldi	r19, 0x00	; 0
    1848:	40 e2       	ldi	r20, 0x20	; 32
    184a:	51 e4       	ldi	r21, 0x41	; 65
    184c:	69 81       	ldd	r22, Y+1	; 0x01
    184e:	7a 81       	ldd	r23, Y+2	; 0x02
    1850:	8b 81       	ldd	r24, Y+3	; 0x03
    1852:	9c 81       	ldd	r25, Y+4	; 0x04
    1854:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1858:	dc 01       	movw	r26, r24
    185a:	cb 01       	movw	r24, r22
    185c:	bc 01       	movw	r22, r24
    185e:	cd 01       	movw	r24, r26
    1860:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1864:	dc 01       	movw	r26, r24
    1866:	cb 01       	movw	r24, r22
    1868:	9c ab       	std	Y+52, r25	; 0x34
    186a:	8b ab       	std	Y+51, r24	; 0x33
    186c:	0f c0       	rjmp	.+30     	; 0x188c <H_Lcd_WriteCommand+0xf2>
    186e:	80 e9       	ldi	r24, 0x90	; 144
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	9e ab       	std	Y+54, r25	; 0x36
    1874:	8d ab       	std	Y+53, r24	; 0x35
    1876:	8d a9       	ldd	r24, Y+53	; 0x35
    1878:	9e a9       	ldd	r25, Y+54	; 0x36
    187a:	01 97       	sbiw	r24, 0x01	; 1
    187c:	f1 f7       	brne	.-4      	; 0x187a <H_Lcd_WriteCommand+0xe0>
    187e:	9e ab       	std	Y+54, r25	; 0x36
    1880:	8d ab       	std	Y+53, r24	; 0x35
    1882:	8b a9       	ldd	r24, Y+51	; 0x33
    1884:	9c a9       	ldd	r25, Y+52	; 0x34
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	9c ab       	std	Y+52, r25	; 0x34
    188a:	8b ab       	std	Y+51, r24	; 0x33
    188c:	8b a9       	ldd	r24, Y+51	; 0x33
    188e:	9c a9       	ldd	r25, Y+52	; 0x34
    1890:	89 2b       	or	r24, r25
    1892:	69 f7       	brne	.-38     	; 0x186e <H_Lcd_WriteCommand+0xd4>
    1894:	14 c0       	rjmp	.+40     	; 0x18be <H_Lcd_WriteCommand+0x124>
    1896:	6f a5       	ldd	r22, Y+47	; 0x2f
    1898:	78 a9       	ldd	r23, Y+48	; 0x30
    189a:	89 a9       	ldd	r24, Y+49	; 0x31
    189c:	9a a9       	ldd	r25, Y+50	; 0x32
    189e:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    18a2:	dc 01       	movw	r26, r24
    18a4:	cb 01       	movw	r24, r22
    18a6:	9c ab       	std	Y+52, r25	; 0x34
    18a8:	8b ab       	std	Y+51, r24	; 0x33
    18aa:	8b a9       	ldd	r24, Y+51	; 0x33
    18ac:	9c a9       	ldd	r25, Y+52	; 0x34
    18ae:	98 af       	std	Y+56, r25	; 0x38
    18b0:	8f ab       	std	Y+55, r24	; 0x37
    18b2:	8f a9       	ldd	r24, Y+55	; 0x37
    18b4:	98 ad       	ldd	r25, Y+56	; 0x38
    18b6:	01 97       	sbiw	r24, 0x01	; 1
    18b8:	f1 f7       	brne	.-4      	; 0x18b6 <H_Lcd_WriteCommand+0x11c>
    18ba:	98 af       	std	Y+56, r25	; 0x38
    18bc:	8f ab       	std	Y+55, r24	; 0x37
    18be:	62 e0       	ldi	r22, 0x02	; 2
    18c0:	8e e1       	ldi	r24, 0x1E	; 30
    18c2:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    18c6:	80 e0       	ldi	r24, 0x00	; 0
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	a0 e8       	ldi	r26, 0x80	; 128
    18cc:	bf e3       	ldi	r27, 0x3F	; 63
    18ce:	8d 83       	std	Y+5, r24	; 0x05
    18d0:	9e 83       	std	Y+6, r25	; 0x06
    18d2:	af 83       	std	Y+7, r26	; 0x07
    18d4:	b8 87       	std	Y+8, r27	; 0x08
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	4a e7       	ldi	r20, 0x7A	; 122
    18dc:	55 e4       	ldi	r21, 0x45	; 69
    18de:	6d 81       	ldd	r22, Y+5	; 0x05
    18e0:	7e 81       	ldd	r23, Y+6	; 0x06
    18e2:	8f 81       	ldd	r24, Y+7	; 0x07
    18e4:	98 85       	ldd	r25, Y+8	; 0x08
    18e6:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    18ea:	dc 01       	movw	r26, r24
    18ec:	cb 01       	movw	r24, r22
    18ee:	8d a3       	std	Y+37, r24	; 0x25
    18f0:	9e a3       	std	Y+38, r25	; 0x26
    18f2:	af a3       	std	Y+39, r26	; 0x27
    18f4:	b8 a7       	std	Y+40, r27	; 0x28
    18f6:	20 e0       	ldi	r18, 0x00	; 0
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	40 e8       	ldi	r20, 0x80	; 128
    18fc:	5f e3       	ldi	r21, 0x3F	; 63
    18fe:	6d a1       	ldd	r22, Y+37	; 0x25
    1900:	7e a1       	ldd	r23, Y+38	; 0x26
    1902:	8f a1       	ldd	r24, Y+39	; 0x27
    1904:	98 a5       	ldd	r25, Y+40	; 0x28
    1906:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    190a:	88 23       	and	r24, r24
    190c:	2c f4       	brge	.+10     	; 0x1918 <H_Lcd_WriteCommand+0x17e>
    190e:	81 e0       	ldi	r24, 0x01	; 1
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	9a a7       	std	Y+42, r25	; 0x2a
    1914:	89 a7       	std	Y+41, r24	; 0x29
    1916:	3f c0       	rjmp	.+126    	; 0x1996 <H_Lcd_WriteCommand+0x1fc>
    1918:	20 e0       	ldi	r18, 0x00	; 0
    191a:	3f ef       	ldi	r19, 0xFF	; 255
    191c:	4f e7       	ldi	r20, 0x7F	; 127
    191e:	57 e4       	ldi	r21, 0x47	; 71
    1920:	6d a1       	ldd	r22, Y+37	; 0x25
    1922:	7e a1       	ldd	r23, Y+38	; 0x26
    1924:	8f a1       	ldd	r24, Y+39	; 0x27
    1926:	98 a5       	ldd	r25, Y+40	; 0x28
    1928:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    192c:	18 16       	cp	r1, r24
    192e:	4c f5       	brge	.+82     	; 0x1982 <H_Lcd_WriteCommand+0x1e8>
    1930:	20 e0       	ldi	r18, 0x00	; 0
    1932:	30 e0       	ldi	r19, 0x00	; 0
    1934:	40 e2       	ldi	r20, 0x20	; 32
    1936:	51 e4       	ldi	r21, 0x41	; 65
    1938:	6d 81       	ldd	r22, Y+5	; 0x05
    193a:	7e 81       	ldd	r23, Y+6	; 0x06
    193c:	8f 81       	ldd	r24, Y+7	; 0x07
    193e:	98 85       	ldd	r25, Y+8	; 0x08
    1940:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	bc 01       	movw	r22, r24
    194a:	cd 01       	movw	r24, r26
    194c:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1950:	dc 01       	movw	r26, r24
    1952:	cb 01       	movw	r24, r22
    1954:	9a a7       	std	Y+42, r25	; 0x2a
    1956:	89 a7       	std	Y+41, r24	; 0x29
    1958:	0f c0       	rjmp	.+30     	; 0x1978 <H_Lcd_WriteCommand+0x1de>
    195a:	80 e9       	ldi	r24, 0x90	; 144
    195c:	91 e0       	ldi	r25, 0x01	; 1
    195e:	9c a7       	std	Y+44, r25	; 0x2c
    1960:	8b a7       	std	Y+43, r24	; 0x2b
    1962:	8b a5       	ldd	r24, Y+43	; 0x2b
    1964:	9c a5       	ldd	r25, Y+44	; 0x2c
    1966:	01 97       	sbiw	r24, 0x01	; 1
    1968:	f1 f7       	brne	.-4      	; 0x1966 <H_Lcd_WriteCommand+0x1cc>
    196a:	9c a7       	std	Y+44, r25	; 0x2c
    196c:	8b a7       	std	Y+43, r24	; 0x2b
    196e:	89 a5       	ldd	r24, Y+41	; 0x29
    1970:	9a a5       	ldd	r25, Y+42	; 0x2a
    1972:	01 97       	sbiw	r24, 0x01	; 1
    1974:	9a a7       	std	Y+42, r25	; 0x2a
    1976:	89 a7       	std	Y+41, r24	; 0x29
    1978:	89 a5       	ldd	r24, Y+41	; 0x29
    197a:	9a a5       	ldd	r25, Y+42	; 0x2a
    197c:	89 2b       	or	r24, r25
    197e:	69 f7       	brne	.-38     	; 0x195a <H_Lcd_WriteCommand+0x1c0>
    1980:	14 c0       	rjmp	.+40     	; 0x19aa <H_Lcd_WriteCommand+0x210>
    1982:	6d a1       	ldd	r22, Y+37	; 0x25
    1984:	7e a1       	ldd	r23, Y+38	; 0x26
    1986:	8f a1       	ldd	r24, Y+39	; 0x27
    1988:	98 a5       	ldd	r25, Y+40	; 0x28
    198a:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    198e:	dc 01       	movw	r26, r24
    1990:	cb 01       	movw	r24, r22
    1992:	9a a7       	std	Y+42, r25	; 0x2a
    1994:	89 a7       	std	Y+41, r24	; 0x29
    1996:	89 a5       	ldd	r24, Y+41	; 0x29
    1998:	9a a5       	ldd	r25, Y+42	; 0x2a
    199a:	9e a7       	std	Y+46, r25	; 0x2e
    199c:	8d a7       	std	Y+45, r24	; 0x2d
    199e:	8d a5       	ldd	r24, Y+45	; 0x2d
    19a0:	9e a5       	ldd	r25, Y+46	; 0x2e
    19a2:	01 97       	sbiw	r24, 0x01	; 1
    19a4:	f1 f7       	brne	.-4      	; 0x19a2 <H_Lcd_WriteCommand+0x208>
    19a6:	9e a7       	std	Y+46, r25	; 0x2e
    19a8:	8d a7       	std	Y+45, r24	; 0x2d
    19aa:	8b e3       	ldi	r24, 0x3B	; 59
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	29 ad       	ldd	r18, Y+57	; 0x39
    19b0:	22 2f       	mov	r18, r18
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	22 95       	swap	r18
    19b6:	32 95       	swap	r19
    19b8:	30 7f       	andi	r19, 0xF0	; 240
    19ba:	32 27       	eor	r19, r18
    19bc:	20 7f       	andi	r18, 0xF0	; 240
    19be:	32 27       	eor	r19, r18
    19c0:	42 2f       	mov	r20, r18
    19c2:	2b e3       	ldi	r18, 0x3B	; 59
    19c4:	30 e0       	ldi	r19, 0x00	; 0
    19c6:	f9 01       	movw	r30, r18
    19c8:	20 81       	ld	r18, Z
    19ca:	2f 70       	andi	r18, 0x0F	; 15
    19cc:	24 2b       	or	r18, r20
    19ce:	fc 01       	movw	r30, r24
    19d0:	20 83       	st	Z, r18
    19d2:	61 e0       	ldi	r22, 0x01	; 1
    19d4:	8e e1       	ldi	r24, 0x1E	; 30
    19d6:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	a0 e8       	ldi	r26, 0x80	; 128
    19e0:	bf e3       	ldi	r27, 0x3F	; 63
    19e2:	89 87       	std	Y+9, r24	; 0x09
    19e4:	9a 87       	std	Y+10, r25	; 0x0a
    19e6:	ab 87       	std	Y+11, r26	; 0x0b
    19e8:	bc 87       	std	Y+12, r27	; 0x0c
    19ea:	20 e0       	ldi	r18, 0x00	; 0
    19ec:	30 e0       	ldi	r19, 0x00	; 0
    19ee:	4a e7       	ldi	r20, 0x7A	; 122
    19f0:	55 e4       	ldi	r21, 0x45	; 69
    19f2:	69 85       	ldd	r22, Y+9	; 0x09
    19f4:	7a 85       	ldd	r23, Y+10	; 0x0a
    19f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    19f8:	9c 85       	ldd	r25, Y+12	; 0x0c
    19fa:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    19fe:	dc 01       	movw	r26, r24
    1a00:	cb 01       	movw	r24, r22
    1a02:	8b 8f       	std	Y+27, r24	; 0x1b
    1a04:	9c 8f       	std	Y+28, r25	; 0x1c
    1a06:	ad 8f       	std	Y+29, r26	; 0x1d
    1a08:	be 8f       	std	Y+30, r27	; 0x1e
    1a0a:	20 e0       	ldi	r18, 0x00	; 0
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	40 e8       	ldi	r20, 0x80	; 128
    1a10:	5f e3       	ldi	r21, 0x3F	; 63
    1a12:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a14:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a16:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a18:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a1a:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    1a1e:	88 23       	and	r24, r24
    1a20:	2c f4       	brge	.+10     	; 0x1a2c <H_Lcd_WriteCommand+0x292>
    1a22:	81 e0       	ldi	r24, 0x01	; 1
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	98 a3       	std	Y+32, r25	; 0x20
    1a28:	8f 8f       	std	Y+31, r24	; 0x1f
    1a2a:	3f c0       	rjmp	.+126    	; 0x1aaa <H_Lcd_WriteCommand+0x310>
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	3f ef       	ldi	r19, 0xFF	; 255
    1a30:	4f e7       	ldi	r20, 0x7F	; 127
    1a32:	57 e4       	ldi	r21, 0x47	; 71
    1a34:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a36:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a38:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a3a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a3c:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1a40:	18 16       	cp	r1, r24
    1a42:	4c f5       	brge	.+82     	; 0x1a96 <H_Lcd_WriteCommand+0x2fc>
    1a44:	20 e0       	ldi	r18, 0x00	; 0
    1a46:	30 e0       	ldi	r19, 0x00	; 0
    1a48:	40 e2       	ldi	r20, 0x20	; 32
    1a4a:	51 e4       	ldi	r21, 0x41	; 65
    1a4c:	69 85       	ldd	r22, Y+9	; 0x09
    1a4e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1a50:	8b 85       	ldd	r24, Y+11	; 0x0b
    1a52:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a54:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1a58:	dc 01       	movw	r26, r24
    1a5a:	cb 01       	movw	r24, r22
    1a5c:	bc 01       	movw	r22, r24
    1a5e:	cd 01       	movw	r24, r26
    1a60:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1a64:	dc 01       	movw	r26, r24
    1a66:	cb 01       	movw	r24, r22
    1a68:	98 a3       	std	Y+32, r25	; 0x20
    1a6a:	8f 8f       	std	Y+31, r24	; 0x1f
    1a6c:	0f c0       	rjmp	.+30     	; 0x1a8c <H_Lcd_WriteCommand+0x2f2>
    1a6e:	80 e9       	ldi	r24, 0x90	; 144
    1a70:	91 e0       	ldi	r25, 0x01	; 1
    1a72:	9a a3       	std	Y+34, r25	; 0x22
    1a74:	89 a3       	std	Y+33, r24	; 0x21
    1a76:	89 a1       	ldd	r24, Y+33	; 0x21
    1a78:	9a a1       	ldd	r25, Y+34	; 0x22
    1a7a:	01 97       	sbiw	r24, 0x01	; 1
    1a7c:	f1 f7       	brne	.-4      	; 0x1a7a <H_Lcd_WriteCommand+0x2e0>
    1a7e:	9a a3       	std	Y+34, r25	; 0x22
    1a80:	89 a3       	std	Y+33, r24	; 0x21
    1a82:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a84:	98 a1       	ldd	r25, Y+32	; 0x20
    1a86:	01 97       	sbiw	r24, 0x01	; 1
    1a88:	98 a3       	std	Y+32, r25	; 0x20
    1a8a:	8f 8f       	std	Y+31, r24	; 0x1f
    1a8c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a8e:	98 a1       	ldd	r25, Y+32	; 0x20
    1a90:	89 2b       	or	r24, r25
    1a92:	69 f7       	brne	.-38     	; 0x1a6e <H_Lcd_WriteCommand+0x2d4>
    1a94:	14 c0       	rjmp	.+40     	; 0x1abe <H_Lcd_WriteCommand+0x324>
    1a96:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1a98:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1a9a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a9c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a9e:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1aa2:	dc 01       	movw	r26, r24
    1aa4:	cb 01       	movw	r24, r22
    1aa6:	98 a3       	std	Y+32, r25	; 0x20
    1aa8:	8f 8f       	std	Y+31, r24	; 0x1f
    1aaa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1aac:	98 a1       	ldd	r25, Y+32	; 0x20
    1aae:	9c a3       	std	Y+36, r25	; 0x24
    1ab0:	8b a3       	std	Y+35, r24	; 0x23
    1ab2:	8b a1       	ldd	r24, Y+35	; 0x23
    1ab4:	9c a1       	ldd	r25, Y+36	; 0x24
    1ab6:	01 97       	sbiw	r24, 0x01	; 1
    1ab8:	f1 f7       	brne	.-4      	; 0x1ab6 <H_Lcd_WriteCommand+0x31c>
    1aba:	9c a3       	std	Y+36, r25	; 0x24
    1abc:	8b a3       	std	Y+35, r24	; 0x23
    1abe:	62 e0       	ldi	r22, 0x02	; 2
    1ac0:	8e e1       	ldi	r24, 0x1E	; 30
    1ac2:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <M_Dio_PinWrite>
    1ac6:	80 e0       	ldi	r24, 0x00	; 0
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	a0 ea       	ldi	r26, 0xA0	; 160
    1acc:	b0 e4       	ldi	r27, 0x40	; 64
    1ace:	8d 87       	std	Y+13, r24	; 0x0d
    1ad0:	9e 87       	std	Y+14, r25	; 0x0e
    1ad2:	af 87       	std	Y+15, r26	; 0x0f
    1ad4:	b8 8b       	std	Y+16, r27	; 0x10
    1ad6:	20 e0       	ldi	r18, 0x00	; 0
    1ad8:	30 e0       	ldi	r19, 0x00	; 0
    1ada:	4a e7       	ldi	r20, 0x7A	; 122
    1adc:	55 e4       	ldi	r21, 0x45	; 69
    1ade:	6d 85       	ldd	r22, Y+13	; 0x0d
    1ae0:	7e 85       	ldd	r23, Y+14	; 0x0e
    1ae2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ae4:	98 89       	ldd	r25, Y+16	; 0x10
    1ae6:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1aea:	dc 01       	movw	r26, r24
    1aec:	cb 01       	movw	r24, r22
    1aee:	89 8b       	std	Y+17, r24	; 0x11
    1af0:	9a 8b       	std	Y+18, r25	; 0x12
    1af2:	ab 8b       	std	Y+19, r26	; 0x13
    1af4:	bc 8b       	std	Y+20, r27	; 0x14
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	30 e0       	ldi	r19, 0x00	; 0
    1afa:	40 e8       	ldi	r20, 0x80	; 128
    1afc:	5f e3       	ldi	r21, 0x3F	; 63
    1afe:	69 89       	ldd	r22, Y+17	; 0x11
    1b00:	7a 89       	ldd	r23, Y+18	; 0x12
    1b02:	8b 89       	ldd	r24, Y+19	; 0x13
    1b04:	9c 89       	ldd	r25, Y+20	; 0x14
    1b06:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    1b0a:	88 23       	and	r24, r24
    1b0c:	2c f4       	brge	.+10     	; 0x1b18 <H_Lcd_WriteCommand+0x37e>
    1b0e:	81 e0       	ldi	r24, 0x01	; 1
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	9e 8b       	std	Y+22, r25	; 0x16
    1b14:	8d 8b       	std	Y+21, r24	; 0x15
    1b16:	3f c0       	rjmp	.+126    	; 0x1b96 <H_Lcd_WriteCommand+0x3fc>
    1b18:	20 e0       	ldi	r18, 0x00	; 0
    1b1a:	3f ef       	ldi	r19, 0xFF	; 255
    1b1c:	4f e7       	ldi	r20, 0x7F	; 127
    1b1e:	57 e4       	ldi	r21, 0x47	; 71
    1b20:	69 89       	ldd	r22, Y+17	; 0x11
    1b22:	7a 89       	ldd	r23, Y+18	; 0x12
    1b24:	8b 89       	ldd	r24, Y+19	; 0x13
    1b26:	9c 89       	ldd	r25, Y+20	; 0x14
    1b28:	0e 94 9d 13 	call	0x273a	; 0x273a <__gesf2>
    1b2c:	18 16       	cp	r1, r24
    1b2e:	4c f5       	brge	.+82     	; 0x1b82 <H_Lcd_WriteCommand+0x3e8>
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	30 e0       	ldi	r19, 0x00	; 0
    1b34:	40 e2       	ldi	r20, 0x20	; 32
    1b36:	51 e4       	ldi	r21, 0x41	; 65
    1b38:	6d 85       	ldd	r22, Y+13	; 0x0d
    1b3a:	7e 85       	ldd	r23, Y+14	; 0x0e
    1b3c:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b3e:	98 89       	ldd	r25, Y+16	; 0x10
    1b40:	0e 94 a2 13 	call	0x2744	; 0x2744 <__mulsf3>
    1b44:	dc 01       	movw	r26, r24
    1b46:	cb 01       	movw	r24, r22
    1b48:	bc 01       	movw	r22, r24
    1b4a:	cd 01       	movw	r24, r26
    1b4c:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1b50:	dc 01       	movw	r26, r24
    1b52:	cb 01       	movw	r24, r22
    1b54:	9e 8b       	std	Y+22, r25	; 0x16
    1b56:	8d 8b       	std	Y+21, r24	; 0x15
    1b58:	0f c0       	rjmp	.+30     	; 0x1b78 <H_Lcd_WriteCommand+0x3de>
    1b5a:	80 e9       	ldi	r24, 0x90	; 144
    1b5c:	91 e0       	ldi	r25, 0x01	; 1
    1b5e:	98 8f       	std	Y+24, r25	; 0x18
    1b60:	8f 8b       	std	Y+23, r24	; 0x17
    1b62:	8f 89       	ldd	r24, Y+23	; 0x17
    1b64:	98 8d       	ldd	r25, Y+24	; 0x18
    1b66:	01 97       	sbiw	r24, 0x01	; 1
    1b68:	f1 f7       	brne	.-4      	; 0x1b66 <H_Lcd_WriteCommand+0x3cc>
    1b6a:	98 8f       	std	Y+24, r25	; 0x18
    1b6c:	8f 8b       	std	Y+23, r24	; 0x17
    1b6e:	8d 89       	ldd	r24, Y+21	; 0x15
    1b70:	9e 89       	ldd	r25, Y+22	; 0x16
    1b72:	01 97       	sbiw	r24, 0x01	; 1
    1b74:	9e 8b       	std	Y+22, r25	; 0x16
    1b76:	8d 8b       	std	Y+21, r24	; 0x15
    1b78:	8d 89       	ldd	r24, Y+21	; 0x15
    1b7a:	9e 89       	ldd	r25, Y+22	; 0x16
    1b7c:	89 2b       	or	r24, r25
    1b7e:	69 f7       	brne	.-38     	; 0x1b5a <H_Lcd_WriteCommand+0x3c0>
    1b80:	14 c0       	rjmp	.+40     	; 0x1baa <H_Lcd_WriteCommand+0x410>
    1b82:	69 89       	ldd	r22, Y+17	; 0x11
    1b84:	7a 89       	ldd	r23, Y+18	; 0x12
    1b86:	8b 89       	ldd	r24, Y+19	; 0x13
    1b88:	9c 89       	ldd	r25, Y+20	; 0x14
    1b8a:	0e 94 a5 12 	call	0x254a	; 0x254a <__fixunssfsi>
    1b8e:	dc 01       	movw	r26, r24
    1b90:	cb 01       	movw	r24, r22
    1b92:	9e 8b       	std	Y+22, r25	; 0x16
    1b94:	8d 8b       	std	Y+21, r24	; 0x15
    1b96:	8d 89       	ldd	r24, Y+21	; 0x15
    1b98:	9e 89       	ldd	r25, Y+22	; 0x16
    1b9a:	9a 8f       	std	Y+26, r25	; 0x1a
    1b9c:	89 8f       	std	Y+25, r24	; 0x19
    1b9e:	89 8d       	ldd	r24, Y+25	; 0x19
    1ba0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    1ba2:	01 97       	sbiw	r24, 0x01	; 1
    1ba4:	f1 f7       	brne	.-4      	; 0x1ba2 <H_Lcd_WriteCommand+0x408>
    1ba6:	9a 8f       	std	Y+26, r25	; 0x1a
    1ba8:	89 8f       	std	Y+25, r24	; 0x19
    1baa:	00 00       	nop
    1bac:	e9 96       	adiw	r28, 0x39	; 57
    1bae:	0f b6       	in	r0, 0x3f	; 63
    1bb0:	f8 94       	cli
    1bb2:	de bf       	out	0x3e, r29	; 62
    1bb4:	0f be       	out	0x3f, r0	; 63
    1bb6:	cd bf       	out	0x3d, r28	; 61
    1bb8:	df 91       	pop	r29
    1bba:	cf 91       	pop	r28
    1bbc:	08 95       	ret

00001bbe <H_Lcd_WriteString>:
    1bbe:	cf 93       	push	r28
    1bc0:	df 93       	push	r29
    1bc2:	00 d0       	rcall	.+0      	; 0x1bc4 <H_Lcd_WriteString+0x6>
    1bc4:	1f 92       	push	r1
    1bc6:	cd b7       	in	r28, 0x3d	; 61
    1bc8:	de b7       	in	r29, 0x3e	; 62
    1bca:	9b 83       	std	Y+3, r25	; 0x03
    1bcc:	8a 83       	std	Y+2, r24	; 0x02
    1bce:	19 82       	std	Y+1, r1	; 0x01
    1bd0:	0e c0       	rjmp	.+28     	; 0x1bee <H_Lcd_WriteString+0x30>
    1bd2:	89 81       	ldd	r24, Y+1	; 0x01
    1bd4:	88 2f       	mov	r24, r24
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	2a 81       	ldd	r18, Y+2	; 0x02
    1bda:	3b 81       	ldd	r19, Y+3	; 0x03
    1bdc:	82 0f       	add	r24, r18
    1bde:	93 1f       	adc	r25, r19
    1be0:	fc 01       	movw	r30, r24
    1be2:	80 81       	ld	r24, Z
    1be4:	0e 94 bb 09 	call	0x1376	; 0x1376 <H_Lcd_WriteCharacter>
    1be8:	89 81       	ldd	r24, Y+1	; 0x01
    1bea:	8f 5f       	subi	r24, 0xFF	; 255
    1bec:	89 83       	std	Y+1, r24	; 0x01
    1bee:	89 81       	ldd	r24, Y+1	; 0x01
    1bf0:	88 2f       	mov	r24, r24
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	2a 81       	ldd	r18, Y+2	; 0x02
    1bf6:	3b 81       	ldd	r19, Y+3	; 0x03
    1bf8:	82 0f       	add	r24, r18
    1bfa:	93 1f       	adc	r25, r19
    1bfc:	fc 01       	movw	r30, r24
    1bfe:	80 81       	ld	r24, Z
    1c00:	88 2f       	mov	r24, r24
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	89 2b       	or	r24, r25
    1c06:	29 f7       	brne	.-54     	; 0x1bd2 <H_Lcd_WriteString+0x14>
    1c08:	00 00       	nop
    1c0a:	0f 90       	pop	r0
    1c0c:	0f 90       	pop	r0
    1c0e:	0f 90       	pop	r0
    1c10:	df 91       	pop	r29
    1c12:	cf 91       	pop	r28
    1c14:	08 95       	ret

00001c16 <H_Lcd_WriteNumberflt>:
    1c16:	cf 93       	push	r28
    1c18:	df 93       	push	r29
    1c1a:	cd b7       	in	r28, 0x3d	; 61
    1c1c:	de b7       	in	r29, 0x3e	; 62
    1c1e:	ae 97       	sbiw	r28, 0x2e	; 46
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	f8 94       	cli
    1c24:	de bf       	out	0x3e, r29	; 62
    1c26:	0f be       	out	0x3f, r0	; 63
    1c28:	cd bf       	out	0x3d, r28	; 61
    1c2a:	6b a7       	std	Y+43, r22	; 0x2b
    1c2c:	7c a7       	std	Y+44, r23	; 0x2c
    1c2e:	8d a7       	std	Y+45, r24	; 0x2d
    1c30:	9e a7       	std	Y+46, r25	; 0x2e
    1c32:	24 e1       	ldi	r18, 0x14	; 20
    1c34:	ce 01       	movw	r24, r28
    1c36:	03 96       	adiw	r24, 0x03	; 3
    1c38:	fc 01       	movw	r30, r24
    1c3a:	32 2f       	mov	r19, r18
    1c3c:	11 92       	st	Z+, r1
    1c3e:	3a 95       	dec	r19
    1c40:	e9 f7       	brne	.-6      	; 0x1c3c <H_Lcd_WriteNumberflt+0x26>
    1c42:	19 82       	std	Y+1, r1	; 0x01
    1c44:	1a 82       	std	Y+2, r1	; 0x02
    1c46:	20 e0       	ldi	r18, 0x00	; 0
    1c48:	30 e0       	ldi	r19, 0x00	; 0
    1c4a:	a9 01       	movw	r20, r18
    1c4c:	6b a5       	ldd	r22, Y+43	; 0x2b
    1c4e:	7c a5       	ldd	r23, Y+44	; 0x2c
    1c50:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c52:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c54:	0e 94 2e 12 	call	0x245c	; 0x245c <__cmpsf2>
    1c58:	88 23       	and	r24, r24
    1c5a:	21 f4       	brne	.+8      	; 0x1c64 <H_Lcd_WriteNumberflt+0x4e>
    1c5c:	80 e3       	ldi	r24, 0x30	; 48
    1c5e:	0e 94 bb 09 	call	0x1376	; 0x1376 <H_Lcd_WriteCharacter>
    1c62:	22 c0       	rjmp	.+68     	; 0x1ca8 <H_Lcd_WriteNumberflt+0x92>
    1c64:	8e a5       	ldd	r24, Y+46	; 0x2e
    1c66:	8f 93       	push	r24
    1c68:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c6a:	8f 93       	push	r24
    1c6c:	8c a5       	ldd	r24, Y+44	; 0x2c
    1c6e:	8f 93       	push	r24
    1c70:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c72:	8f 93       	push	r24
    1c74:	8f e8       	ldi	r24, 0x8F	; 143
    1c76:	90 e0       	ldi	r25, 0x00	; 0
    1c78:	89 2f       	mov	r24, r25
    1c7a:	8f 93       	push	r24
    1c7c:	8f e8       	ldi	r24, 0x8F	; 143
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	8f 93       	push	r24
    1c82:	ce 01       	movw	r24, r28
    1c84:	47 96       	adiw	r24, 0x17	; 23
    1c86:	29 2f       	mov	r18, r25
    1c88:	2f 93       	push	r18
    1c8a:	8f 93       	push	r24
    1c8c:	0e 94 47 1a 	call	0x348e	; 0x348e <sprintf>
    1c90:	8d b7       	in	r24, 0x3d	; 61
    1c92:	9e b7       	in	r25, 0x3e	; 62
    1c94:	08 96       	adiw	r24, 0x08	; 8
    1c96:	0f b6       	in	r0, 0x3f	; 63
    1c98:	f8 94       	cli
    1c9a:	de bf       	out	0x3e, r29	; 62
    1c9c:	0f be       	out	0x3f, r0	; 63
    1c9e:	cd bf       	out	0x3d, r28	; 61
    1ca0:	ce 01       	movw	r24, r28
    1ca2:	47 96       	adiw	r24, 0x17	; 23
    1ca4:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <H_Lcd_WriteString>
    1ca8:	00 00       	nop
    1caa:	ae 96       	adiw	r28, 0x2e	; 46
    1cac:	0f b6       	in	r0, 0x3f	; 63
    1cae:	f8 94       	cli
    1cb0:	de bf       	out	0x3e, r29	; 62
    1cb2:	0f be       	out	0x3f, r0	; 63
    1cb4:	cd bf       	out	0x3d, r28	; 61
    1cb6:	df 91       	pop	r29
    1cb8:	cf 91       	pop	r28
    1cba:	08 95       	ret

00001cbc <H_Lcd_Clr>:
    1cbc:	cf 93       	push	r28
    1cbe:	df 93       	push	r29
    1cc0:	cd b7       	in	r28, 0x3d	; 61
    1cc2:	de b7       	in	r29, 0x3e	; 62
    1cc4:	81 e0       	ldi	r24, 0x01	; 1
    1cc6:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1cca:	00 00       	nop
    1ccc:	df 91       	pop	r29
    1cce:	cf 91       	pop	r28
    1cd0:	08 95       	ret

00001cd2 <H_Lcd_GoTo>:
    1cd2:	cf 93       	push	r28
    1cd4:	df 93       	push	r29
    1cd6:	00 d0       	rcall	.+0      	; 0x1cd8 <H_Lcd_GoTo+0x6>
    1cd8:	00 d0       	rcall	.+0      	; 0x1cda <H_Lcd_GoTo+0x8>
    1cda:	cd b7       	in	r28, 0x3d	; 61
    1cdc:	de b7       	in	r29, 0x3e	; 62
    1cde:	8b 83       	std	Y+3, r24	; 0x03
    1ce0:	6c 83       	std	Y+4, r22	; 0x04
    1ce2:	80 e8       	ldi	r24, 0x80	; 128
    1ce4:	89 83       	std	Y+1, r24	; 0x01
    1ce6:	80 ec       	ldi	r24, 0xC0	; 192
    1ce8:	8a 83       	std	Y+2, r24	; 0x02
    1cea:	8b 81       	ldd	r24, Y+3	; 0x03
    1cec:	88 2f       	mov	r24, r24
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	9e 01       	movw	r18, r28
    1cf2:	2f 5f       	subi	r18, 0xFF	; 255
    1cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf6:	82 0f       	add	r24, r18
    1cf8:	93 1f       	adc	r25, r19
    1cfa:	fc 01       	movw	r30, r24
    1cfc:	90 81       	ld	r25, Z
    1cfe:	8c 81       	ldd	r24, Y+4	; 0x04
    1d00:	89 0f       	add	r24, r25
    1d02:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
    1d06:	00 00       	nop
    1d08:	0f 90       	pop	r0
    1d0a:	0f 90       	pop	r0
    1d0c:	0f 90       	pop	r0
    1d0e:	0f 90       	pop	r0
    1d10:	df 91       	pop	r29
    1d12:	cf 91       	pop	r28
    1d14:	08 95       	ret

00001d16 <H_Lcd_ShiftLeft>:

void H_Lcd_ShiftLeft(void)
{
    1d16:	cf 93       	push	r28
    1d18:	df 93       	push	r29
    1d1a:	cd b7       	in	r28, 0x3d	; 61
    1d1c:	de b7       	in	r29, 0x3e	; 62
	H_Lcd_WriteCommand(LCD_SHIFT_LEFT);
    1d1e:	88 e1       	ldi	r24, 0x18	; 24
    1d20:	0e 94 cd 0b 	call	0x179a	; 0x179a <H_Lcd_WriteCommand>
}
    1d24:	00 00       	nop
    1d26:	df 91       	pop	r29
    1d28:	cf 91       	pop	r28
    1d2a:	08 95       	ret

00001d2c <M_Dio_PinMode>:
		case 2: TogBit(_PORTB,Local_u8_Pin); break;
		case 3: TogBit(_PORTC,Local_u8_Pin); break;
		case 4: TogBit(_PORTD,Local_u8_Pin); break;
		default:                            break;	
	}
}
    1d2c:	cf 93       	push	r28
    1d2e:	df 93       	push	r29
    1d30:	00 d0       	rcall	.+0      	; 0x1d32 <M_Dio_PinMode+0x6>
    1d32:	00 d0       	rcall	.+0      	; 0x1d34 <M_Dio_PinMode+0x8>
    1d34:	cd b7       	in	r28, 0x3d	; 61
    1d36:	de b7       	in	r29, 0x3e	; 62
    1d38:	8b 83       	std	Y+3, r24	; 0x03
    1d3a:	6c 83       	std	Y+4, r22	; 0x04
    1d3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1d3e:	8d ec       	ldi	r24, 0xCD	; 205
    1d40:	98 9f       	mul	r25, r24
    1d42:	81 2d       	mov	r24, r1
    1d44:	11 24       	eor	r1, r1
    1d46:	86 95       	lsr	r24
    1d48:	86 95       	lsr	r24
    1d4a:	86 95       	lsr	r24
    1d4c:	88 0f       	add	r24, r24
    1d4e:	28 2f       	mov	r18, r24
    1d50:	22 0f       	add	r18, r18
    1d52:	22 0f       	add	r18, r18
    1d54:	82 0f       	add	r24, r18
    1d56:	29 2f       	mov	r18, r25
    1d58:	28 1b       	sub	r18, r24
    1d5a:	82 2f       	mov	r24, r18
    1d5c:	89 83       	std	Y+1, r24	; 0x01
    1d5e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d60:	8d ec       	ldi	r24, 0xCD	; 205
    1d62:	98 9f       	mul	r25, r24
    1d64:	81 2d       	mov	r24, r1
    1d66:	11 24       	eor	r1, r1
    1d68:	86 95       	lsr	r24
    1d6a:	86 95       	lsr	r24
    1d6c:	86 95       	lsr	r24
    1d6e:	8a 83       	std	Y+2, r24	; 0x02
    1d70:	8c 81       	ldd	r24, Y+4	; 0x04
    1d72:	88 2f       	mov	r24, r24
    1d74:	90 e0       	ldi	r25, 0x00	; 0
    1d76:	81 30       	cpi	r24, 0x01	; 1
    1d78:	91 05       	cpc	r25, r1
    1d7a:	21 f0       	breq	.+8      	; 0x1d84 <M_Dio_PinMode+0x58>
    1d7c:	02 97       	sbiw	r24, 0x02	; 2
    1d7e:	09 f4       	brne	.+2      	; 0x1d82 <M_Dio_PinMode+0x56>
    1d80:	69 c0       	rjmp	.+210    	; 0x1e54 <M_Dio_PinMode+0x128>
    1d82:	d4 c0       	rjmp	.+424    	; 0x1f2c <M_Dio_PinMode+0x200>
    1d84:	8a 81       	ldd	r24, Y+2	; 0x02
    1d86:	88 2f       	mov	r24, r24
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	82 30       	cpi	r24, 0x02	; 2
    1d8c:	91 05       	cpc	r25, r1
    1d8e:	11 f1       	breq	.+68     	; 0x1dd4 <M_Dio_PinMode+0xa8>
    1d90:	83 30       	cpi	r24, 0x03	; 3
    1d92:	91 05       	cpc	r25, r1
    1d94:	1c f4       	brge	.+6      	; 0x1d9c <M_Dio_PinMode+0x70>
    1d96:	01 97       	sbiw	r24, 0x01	; 1
    1d98:	41 f0       	breq	.+16     	; 0x1daa <M_Dio_PinMode+0x7e>
    1d9a:	5b c0       	rjmp	.+182    	; 0x1e52 <M_Dio_PinMode+0x126>
    1d9c:	83 30       	cpi	r24, 0x03	; 3
    1d9e:	91 05       	cpc	r25, r1
    1da0:	71 f1       	breq	.+92     	; 0x1dfe <M_Dio_PinMode+0xd2>
    1da2:	04 97       	sbiw	r24, 0x04	; 4
    1da4:	09 f4       	brne	.+2      	; 0x1da8 <M_Dio_PinMode+0x7c>
    1da6:	40 c0       	rjmp	.+128    	; 0x1e28 <M_Dio_PinMode+0xfc>
    1da8:	54 c0       	rjmp	.+168    	; 0x1e52 <M_Dio_PinMode+0x126>
    1daa:	8a e3       	ldi	r24, 0x3A	; 58
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	2a e3       	ldi	r18, 0x3A	; 58
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	f9 01       	movw	r30, r18
    1db4:	20 81       	ld	r18, Z
    1db6:	62 2f       	mov	r22, r18
    1db8:	29 81       	ldd	r18, Y+1	; 0x01
    1dba:	42 2f       	mov	r20, r18
    1dbc:	50 e0       	ldi	r21, 0x00	; 0
    1dbe:	21 e0       	ldi	r18, 0x01	; 1
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	02 c0       	rjmp	.+4      	; 0x1dc8 <M_Dio_PinMode+0x9c>
    1dc4:	22 0f       	add	r18, r18
    1dc6:	33 1f       	adc	r19, r19
    1dc8:	4a 95       	dec	r20
    1dca:	e2 f7       	brpl	.-8      	; 0x1dc4 <M_Dio_PinMode+0x98>
    1dcc:	26 2b       	or	r18, r22
    1dce:	fc 01       	movw	r30, r24
    1dd0:	20 83       	st	Z, r18
    1dd2:	3f c0       	rjmp	.+126    	; 0x1e52 <M_Dio_PinMode+0x126>
    1dd4:	87 e3       	ldi	r24, 0x37	; 55
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	27 e3       	ldi	r18, 0x37	; 55
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	f9 01       	movw	r30, r18
    1dde:	20 81       	ld	r18, Z
    1de0:	62 2f       	mov	r22, r18
    1de2:	29 81       	ldd	r18, Y+1	; 0x01
    1de4:	42 2f       	mov	r20, r18
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	21 e0       	ldi	r18, 0x01	; 1
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	02 c0       	rjmp	.+4      	; 0x1df2 <M_Dio_PinMode+0xc6>
    1dee:	22 0f       	add	r18, r18
    1df0:	33 1f       	adc	r19, r19
    1df2:	4a 95       	dec	r20
    1df4:	e2 f7       	brpl	.-8      	; 0x1dee <M_Dio_PinMode+0xc2>
    1df6:	26 2b       	or	r18, r22
    1df8:	fc 01       	movw	r30, r24
    1dfa:	20 83       	st	Z, r18
    1dfc:	2a c0       	rjmp	.+84     	; 0x1e52 <M_Dio_PinMode+0x126>
    1dfe:	84 e3       	ldi	r24, 0x34	; 52
    1e00:	90 e0       	ldi	r25, 0x00	; 0
    1e02:	24 e3       	ldi	r18, 0x34	; 52
    1e04:	30 e0       	ldi	r19, 0x00	; 0
    1e06:	f9 01       	movw	r30, r18
    1e08:	20 81       	ld	r18, Z
    1e0a:	62 2f       	mov	r22, r18
    1e0c:	29 81       	ldd	r18, Y+1	; 0x01
    1e0e:	42 2f       	mov	r20, r18
    1e10:	50 e0       	ldi	r21, 0x00	; 0
    1e12:	21 e0       	ldi	r18, 0x01	; 1
    1e14:	30 e0       	ldi	r19, 0x00	; 0
    1e16:	02 c0       	rjmp	.+4      	; 0x1e1c <M_Dio_PinMode+0xf0>
    1e18:	22 0f       	add	r18, r18
    1e1a:	33 1f       	adc	r19, r19
    1e1c:	4a 95       	dec	r20
    1e1e:	e2 f7       	brpl	.-8      	; 0x1e18 <M_Dio_PinMode+0xec>
    1e20:	26 2b       	or	r18, r22
    1e22:	fc 01       	movw	r30, r24
    1e24:	20 83       	st	Z, r18
    1e26:	15 c0       	rjmp	.+42     	; 0x1e52 <M_Dio_PinMode+0x126>
    1e28:	81 e3       	ldi	r24, 0x31	; 49
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	21 e3       	ldi	r18, 0x31	; 49
    1e2e:	30 e0       	ldi	r19, 0x00	; 0
    1e30:	f9 01       	movw	r30, r18
    1e32:	20 81       	ld	r18, Z
    1e34:	62 2f       	mov	r22, r18
    1e36:	29 81       	ldd	r18, Y+1	; 0x01
    1e38:	42 2f       	mov	r20, r18
    1e3a:	50 e0       	ldi	r21, 0x00	; 0
    1e3c:	21 e0       	ldi	r18, 0x01	; 1
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	02 c0       	rjmp	.+4      	; 0x1e46 <M_Dio_PinMode+0x11a>
    1e42:	22 0f       	add	r18, r18
    1e44:	33 1f       	adc	r19, r19
    1e46:	4a 95       	dec	r20
    1e48:	e2 f7       	brpl	.-8      	; 0x1e42 <M_Dio_PinMode+0x116>
    1e4a:	26 2b       	or	r18, r22
    1e4c:	fc 01       	movw	r30, r24
    1e4e:	20 83       	st	Z, r18
    1e50:	00 00       	nop
    1e52:	6c c0       	rjmp	.+216    	; 0x1f2c <M_Dio_PinMode+0x200>
    1e54:	8a 81       	ldd	r24, Y+2	; 0x02
    1e56:	88 2f       	mov	r24, r24
    1e58:	90 e0       	ldi	r25, 0x00	; 0
    1e5a:	82 30       	cpi	r24, 0x02	; 2
    1e5c:	91 05       	cpc	r25, r1
    1e5e:	19 f1       	breq	.+70     	; 0x1ea6 <M_Dio_PinMode+0x17a>
    1e60:	83 30       	cpi	r24, 0x03	; 3
    1e62:	91 05       	cpc	r25, r1
    1e64:	1c f4       	brge	.+6      	; 0x1e6c <M_Dio_PinMode+0x140>
    1e66:	01 97       	sbiw	r24, 0x01	; 1
    1e68:	41 f0       	breq	.+16     	; 0x1e7a <M_Dio_PinMode+0x14e>
    1e6a:	5f c0       	rjmp	.+190    	; 0x1f2a <M_Dio_PinMode+0x1fe>
    1e6c:	83 30       	cpi	r24, 0x03	; 3
    1e6e:	91 05       	cpc	r25, r1
    1e70:	81 f1       	breq	.+96     	; 0x1ed2 <M_Dio_PinMode+0x1a6>
    1e72:	04 97       	sbiw	r24, 0x04	; 4
    1e74:	09 f4       	brne	.+2      	; 0x1e78 <M_Dio_PinMode+0x14c>
    1e76:	43 c0       	rjmp	.+134    	; 0x1efe <M_Dio_PinMode+0x1d2>
    1e78:	58 c0       	rjmp	.+176    	; 0x1f2a <M_Dio_PinMode+0x1fe>
    1e7a:	8a e3       	ldi	r24, 0x3A	; 58
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	2a e3       	ldi	r18, 0x3A	; 58
    1e80:	30 e0       	ldi	r19, 0x00	; 0
    1e82:	f9 01       	movw	r30, r18
    1e84:	20 81       	ld	r18, Z
    1e86:	62 2f       	mov	r22, r18
    1e88:	29 81       	ldd	r18, Y+1	; 0x01
    1e8a:	42 2f       	mov	r20, r18
    1e8c:	50 e0       	ldi	r21, 0x00	; 0
    1e8e:	21 e0       	ldi	r18, 0x01	; 1
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	02 c0       	rjmp	.+4      	; 0x1e98 <M_Dio_PinMode+0x16c>
    1e94:	22 0f       	add	r18, r18
    1e96:	33 1f       	adc	r19, r19
    1e98:	4a 95       	dec	r20
    1e9a:	e2 f7       	brpl	.-8      	; 0x1e94 <M_Dio_PinMode+0x168>
    1e9c:	20 95       	com	r18
    1e9e:	26 23       	and	r18, r22
    1ea0:	fc 01       	movw	r30, r24
    1ea2:	20 83       	st	Z, r18
    1ea4:	42 c0       	rjmp	.+132    	; 0x1f2a <M_Dio_PinMode+0x1fe>
    1ea6:	87 e3       	ldi	r24, 0x37	; 55
    1ea8:	90 e0       	ldi	r25, 0x00	; 0
    1eaa:	27 e3       	ldi	r18, 0x37	; 55
    1eac:	30 e0       	ldi	r19, 0x00	; 0
    1eae:	f9 01       	movw	r30, r18
    1eb0:	20 81       	ld	r18, Z
    1eb2:	62 2f       	mov	r22, r18
    1eb4:	29 81       	ldd	r18, Y+1	; 0x01
    1eb6:	42 2f       	mov	r20, r18
    1eb8:	50 e0       	ldi	r21, 0x00	; 0
    1eba:	21 e0       	ldi	r18, 0x01	; 1
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	02 c0       	rjmp	.+4      	; 0x1ec4 <M_Dio_PinMode+0x198>
    1ec0:	22 0f       	add	r18, r18
    1ec2:	33 1f       	adc	r19, r19
    1ec4:	4a 95       	dec	r20
    1ec6:	e2 f7       	brpl	.-8      	; 0x1ec0 <M_Dio_PinMode+0x194>
    1ec8:	20 95       	com	r18
    1eca:	26 23       	and	r18, r22
    1ecc:	fc 01       	movw	r30, r24
    1ece:	20 83       	st	Z, r18
    1ed0:	2c c0       	rjmp	.+88     	; 0x1f2a <M_Dio_PinMode+0x1fe>
    1ed2:	84 e3       	ldi	r24, 0x34	; 52
    1ed4:	90 e0       	ldi	r25, 0x00	; 0
    1ed6:	24 e3       	ldi	r18, 0x34	; 52
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	f9 01       	movw	r30, r18
    1edc:	20 81       	ld	r18, Z
    1ede:	62 2f       	mov	r22, r18
    1ee0:	29 81       	ldd	r18, Y+1	; 0x01
    1ee2:	42 2f       	mov	r20, r18
    1ee4:	50 e0       	ldi	r21, 0x00	; 0
    1ee6:	21 e0       	ldi	r18, 0x01	; 1
    1ee8:	30 e0       	ldi	r19, 0x00	; 0
    1eea:	02 c0       	rjmp	.+4      	; 0x1ef0 <M_Dio_PinMode+0x1c4>
    1eec:	22 0f       	add	r18, r18
    1eee:	33 1f       	adc	r19, r19
    1ef0:	4a 95       	dec	r20
    1ef2:	e2 f7       	brpl	.-8      	; 0x1eec <M_Dio_PinMode+0x1c0>
    1ef4:	20 95       	com	r18
    1ef6:	26 23       	and	r18, r22
    1ef8:	fc 01       	movw	r30, r24
    1efa:	20 83       	st	Z, r18
    1efc:	16 c0       	rjmp	.+44     	; 0x1f2a <M_Dio_PinMode+0x1fe>
    1efe:	81 e3       	ldi	r24, 0x31	; 49
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	21 e3       	ldi	r18, 0x31	; 49
    1f04:	30 e0       	ldi	r19, 0x00	; 0
    1f06:	f9 01       	movw	r30, r18
    1f08:	20 81       	ld	r18, Z
    1f0a:	62 2f       	mov	r22, r18
    1f0c:	29 81       	ldd	r18, Y+1	; 0x01
    1f0e:	42 2f       	mov	r20, r18
    1f10:	50 e0       	ldi	r21, 0x00	; 0
    1f12:	21 e0       	ldi	r18, 0x01	; 1
    1f14:	30 e0       	ldi	r19, 0x00	; 0
    1f16:	02 c0       	rjmp	.+4      	; 0x1f1c <M_Dio_PinMode+0x1f0>
    1f18:	22 0f       	add	r18, r18
    1f1a:	33 1f       	adc	r19, r19
    1f1c:	4a 95       	dec	r20
    1f1e:	e2 f7       	brpl	.-8      	; 0x1f18 <M_Dio_PinMode+0x1ec>
    1f20:	20 95       	com	r18
    1f22:	26 23       	and	r18, r22
    1f24:	fc 01       	movw	r30, r24
    1f26:	20 83       	st	Z, r18
    1f28:	00 00       	nop
    1f2a:	00 00       	nop
    1f2c:	00 00       	nop
    1f2e:	0f 90       	pop	r0
    1f30:	0f 90       	pop	r0
    1f32:	0f 90       	pop	r0
    1f34:	0f 90       	pop	r0
    1f36:	df 91       	pop	r29
    1f38:	cf 91       	pop	r28
    1f3a:	08 95       	ret

00001f3c <M_Dio_PinWrite>:
    1f3c:	cf 93       	push	r28
    1f3e:	df 93       	push	r29
    1f40:	00 d0       	rcall	.+0      	; 0x1f42 <M_Dio_PinWrite+0x6>
    1f42:	00 d0       	rcall	.+0      	; 0x1f44 <M_Dio_PinWrite+0x8>
    1f44:	cd b7       	in	r28, 0x3d	; 61
    1f46:	de b7       	in	r29, 0x3e	; 62
    1f48:	8b 83       	std	Y+3, r24	; 0x03
    1f4a:	6c 83       	std	Y+4, r22	; 0x04
    1f4c:	9b 81       	ldd	r25, Y+3	; 0x03
    1f4e:	8d ec       	ldi	r24, 0xCD	; 205
    1f50:	98 9f       	mul	r25, r24
    1f52:	81 2d       	mov	r24, r1
    1f54:	11 24       	eor	r1, r1
    1f56:	86 95       	lsr	r24
    1f58:	86 95       	lsr	r24
    1f5a:	86 95       	lsr	r24
    1f5c:	88 0f       	add	r24, r24
    1f5e:	28 2f       	mov	r18, r24
    1f60:	22 0f       	add	r18, r18
    1f62:	22 0f       	add	r18, r18
    1f64:	82 0f       	add	r24, r18
    1f66:	29 2f       	mov	r18, r25
    1f68:	28 1b       	sub	r18, r24
    1f6a:	82 2f       	mov	r24, r18
    1f6c:	89 83       	std	Y+1, r24	; 0x01
    1f6e:	9b 81       	ldd	r25, Y+3	; 0x03
    1f70:	8d ec       	ldi	r24, 0xCD	; 205
    1f72:	98 9f       	mul	r25, r24
    1f74:	81 2d       	mov	r24, r1
    1f76:	11 24       	eor	r1, r1
    1f78:	86 95       	lsr	r24
    1f7a:	86 95       	lsr	r24
    1f7c:	86 95       	lsr	r24
    1f7e:	8a 83       	std	Y+2, r24	; 0x02
    1f80:	8c 81       	ldd	r24, Y+4	; 0x04
    1f82:	88 2f       	mov	r24, r24
    1f84:	90 e0       	ldi	r25, 0x00	; 0
    1f86:	81 30       	cpi	r24, 0x01	; 1
    1f88:	91 05       	cpc	r25, r1
    1f8a:	21 f0       	breq	.+8      	; 0x1f94 <M_Dio_PinWrite+0x58>
    1f8c:	02 97       	sbiw	r24, 0x02	; 2
    1f8e:	09 f4       	brne	.+2      	; 0x1f92 <M_Dio_PinWrite+0x56>
    1f90:	69 c0       	rjmp	.+210    	; 0x2064 <M_Dio_PinWrite+0x128>
    1f92:	d4 c0       	rjmp	.+424    	; 0x213c <M_Dio_PinWrite+0x200>
    1f94:	8a 81       	ldd	r24, Y+2	; 0x02
    1f96:	88 2f       	mov	r24, r24
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	82 30       	cpi	r24, 0x02	; 2
    1f9c:	91 05       	cpc	r25, r1
    1f9e:	11 f1       	breq	.+68     	; 0x1fe4 <M_Dio_PinWrite+0xa8>
    1fa0:	83 30       	cpi	r24, 0x03	; 3
    1fa2:	91 05       	cpc	r25, r1
    1fa4:	1c f4       	brge	.+6      	; 0x1fac <M_Dio_PinWrite+0x70>
    1fa6:	01 97       	sbiw	r24, 0x01	; 1
    1fa8:	41 f0       	breq	.+16     	; 0x1fba <M_Dio_PinWrite+0x7e>
    1faa:	5b c0       	rjmp	.+182    	; 0x2062 <M_Dio_PinWrite+0x126>
    1fac:	83 30       	cpi	r24, 0x03	; 3
    1fae:	91 05       	cpc	r25, r1
    1fb0:	71 f1       	breq	.+92     	; 0x200e <M_Dio_PinWrite+0xd2>
    1fb2:	04 97       	sbiw	r24, 0x04	; 4
    1fb4:	09 f4       	brne	.+2      	; 0x1fb8 <M_Dio_PinWrite+0x7c>
    1fb6:	40 c0       	rjmp	.+128    	; 0x2038 <M_Dio_PinWrite+0xfc>
    1fb8:	54 c0       	rjmp	.+168    	; 0x2062 <M_Dio_PinWrite+0x126>
    1fba:	8b e3       	ldi	r24, 0x3B	; 59
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	2b e3       	ldi	r18, 0x3B	; 59
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	f9 01       	movw	r30, r18
    1fc4:	20 81       	ld	r18, Z
    1fc6:	62 2f       	mov	r22, r18
    1fc8:	29 81       	ldd	r18, Y+1	; 0x01
    1fca:	42 2f       	mov	r20, r18
    1fcc:	50 e0       	ldi	r21, 0x00	; 0
    1fce:	21 e0       	ldi	r18, 0x01	; 1
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	02 c0       	rjmp	.+4      	; 0x1fd8 <M_Dio_PinWrite+0x9c>
    1fd4:	22 0f       	add	r18, r18
    1fd6:	33 1f       	adc	r19, r19
    1fd8:	4a 95       	dec	r20
    1fda:	e2 f7       	brpl	.-8      	; 0x1fd4 <M_Dio_PinWrite+0x98>
    1fdc:	26 2b       	or	r18, r22
    1fde:	fc 01       	movw	r30, r24
    1fe0:	20 83       	st	Z, r18
    1fe2:	3f c0       	rjmp	.+126    	; 0x2062 <M_Dio_PinWrite+0x126>
    1fe4:	88 e3       	ldi	r24, 0x38	; 56
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	28 e3       	ldi	r18, 0x38	; 56
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	f9 01       	movw	r30, r18
    1fee:	20 81       	ld	r18, Z
    1ff0:	62 2f       	mov	r22, r18
    1ff2:	29 81       	ldd	r18, Y+1	; 0x01
    1ff4:	42 2f       	mov	r20, r18
    1ff6:	50 e0       	ldi	r21, 0x00	; 0
    1ff8:	21 e0       	ldi	r18, 0x01	; 1
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	02 c0       	rjmp	.+4      	; 0x2002 <M_Dio_PinWrite+0xc6>
    1ffe:	22 0f       	add	r18, r18
    2000:	33 1f       	adc	r19, r19
    2002:	4a 95       	dec	r20
    2004:	e2 f7       	brpl	.-8      	; 0x1ffe <M_Dio_PinWrite+0xc2>
    2006:	26 2b       	or	r18, r22
    2008:	fc 01       	movw	r30, r24
    200a:	20 83       	st	Z, r18
    200c:	2a c0       	rjmp	.+84     	; 0x2062 <M_Dio_PinWrite+0x126>
    200e:	85 e3       	ldi	r24, 0x35	; 53
    2010:	90 e0       	ldi	r25, 0x00	; 0
    2012:	25 e3       	ldi	r18, 0x35	; 53
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	f9 01       	movw	r30, r18
    2018:	20 81       	ld	r18, Z
    201a:	62 2f       	mov	r22, r18
    201c:	29 81       	ldd	r18, Y+1	; 0x01
    201e:	42 2f       	mov	r20, r18
    2020:	50 e0       	ldi	r21, 0x00	; 0
    2022:	21 e0       	ldi	r18, 0x01	; 1
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	02 c0       	rjmp	.+4      	; 0x202c <M_Dio_PinWrite+0xf0>
    2028:	22 0f       	add	r18, r18
    202a:	33 1f       	adc	r19, r19
    202c:	4a 95       	dec	r20
    202e:	e2 f7       	brpl	.-8      	; 0x2028 <M_Dio_PinWrite+0xec>
    2030:	26 2b       	or	r18, r22
    2032:	fc 01       	movw	r30, r24
    2034:	20 83       	st	Z, r18
    2036:	15 c0       	rjmp	.+42     	; 0x2062 <M_Dio_PinWrite+0x126>
    2038:	82 e3       	ldi	r24, 0x32	; 50
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	22 e3       	ldi	r18, 0x32	; 50
    203e:	30 e0       	ldi	r19, 0x00	; 0
    2040:	f9 01       	movw	r30, r18
    2042:	20 81       	ld	r18, Z
    2044:	62 2f       	mov	r22, r18
    2046:	29 81       	ldd	r18, Y+1	; 0x01
    2048:	42 2f       	mov	r20, r18
    204a:	50 e0       	ldi	r21, 0x00	; 0
    204c:	21 e0       	ldi	r18, 0x01	; 1
    204e:	30 e0       	ldi	r19, 0x00	; 0
    2050:	02 c0       	rjmp	.+4      	; 0x2056 <M_Dio_PinWrite+0x11a>
    2052:	22 0f       	add	r18, r18
    2054:	33 1f       	adc	r19, r19
    2056:	4a 95       	dec	r20
    2058:	e2 f7       	brpl	.-8      	; 0x2052 <M_Dio_PinWrite+0x116>
    205a:	26 2b       	or	r18, r22
    205c:	fc 01       	movw	r30, r24
    205e:	20 83       	st	Z, r18
    2060:	00 00       	nop
    2062:	6c c0       	rjmp	.+216    	; 0x213c <M_Dio_PinWrite+0x200>
    2064:	8a 81       	ldd	r24, Y+2	; 0x02
    2066:	88 2f       	mov	r24, r24
    2068:	90 e0       	ldi	r25, 0x00	; 0
    206a:	82 30       	cpi	r24, 0x02	; 2
    206c:	91 05       	cpc	r25, r1
    206e:	19 f1       	breq	.+70     	; 0x20b6 <M_Dio_PinWrite+0x17a>
    2070:	83 30       	cpi	r24, 0x03	; 3
    2072:	91 05       	cpc	r25, r1
    2074:	1c f4       	brge	.+6      	; 0x207c <M_Dio_PinWrite+0x140>
    2076:	01 97       	sbiw	r24, 0x01	; 1
    2078:	41 f0       	breq	.+16     	; 0x208a <M_Dio_PinWrite+0x14e>
    207a:	5f c0       	rjmp	.+190    	; 0x213a <M_Dio_PinWrite+0x1fe>
    207c:	83 30       	cpi	r24, 0x03	; 3
    207e:	91 05       	cpc	r25, r1
    2080:	81 f1       	breq	.+96     	; 0x20e2 <M_Dio_PinWrite+0x1a6>
    2082:	04 97       	sbiw	r24, 0x04	; 4
    2084:	09 f4       	brne	.+2      	; 0x2088 <M_Dio_PinWrite+0x14c>
    2086:	43 c0       	rjmp	.+134    	; 0x210e <M_Dio_PinWrite+0x1d2>
    2088:	58 c0       	rjmp	.+176    	; 0x213a <M_Dio_PinWrite+0x1fe>
    208a:	8b e3       	ldi	r24, 0x3B	; 59
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	2b e3       	ldi	r18, 0x3B	; 59
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	f9 01       	movw	r30, r18
    2094:	20 81       	ld	r18, Z
    2096:	62 2f       	mov	r22, r18
    2098:	29 81       	ldd	r18, Y+1	; 0x01
    209a:	42 2f       	mov	r20, r18
    209c:	50 e0       	ldi	r21, 0x00	; 0
    209e:	21 e0       	ldi	r18, 0x01	; 1
    20a0:	30 e0       	ldi	r19, 0x00	; 0
    20a2:	02 c0       	rjmp	.+4      	; 0x20a8 <M_Dio_PinWrite+0x16c>
    20a4:	22 0f       	add	r18, r18
    20a6:	33 1f       	adc	r19, r19
    20a8:	4a 95       	dec	r20
    20aa:	e2 f7       	brpl	.-8      	; 0x20a4 <M_Dio_PinWrite+0x168>
    20ac:	20 95       	com	r18
    20ae:	26 23       	and	r18, r22
    20b0:	fc 01       	movw	r30, r24
    20b2:	20 83       	st	Z, r18
    20b4:	42 c0       	rjmp	.+132    	; 0x213a <M_Dio_PinWrite+0x1fe>
    20b6:	88 e3       	ldi	r24, 0x38	; 56
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	28 e3       	ldi	r18, 0x38	; 56
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	f9 01       	movw	r30, r18
    20c0:	20 81       	ld	r18, Z
    20c2:	62 2f       	mov	r22, r18
    20c4:	29 81       	ldd	r18, Y+1	; 0x01
    20c6:	42 2f       	mov	r20, r18
    20c8:	50 e0       	ldi	r21, 0x00	; 0
    20ca:	21 e0       	ldi	r18, 0x01	; 1
    20cc:	30 e0       	ldi	r19, 0x00	; 0
    20ce:	02 c0       	rjmp	.+4      	; 0x20d4 <M_Dio_PinWrite+0x198>
    20d0:	22 0f       	add	r18, r18
    20d2:	33 1f       	adc	r19, r19
    20d4:	4a 95       	dec	r20
    20d6:	e2 f7       	brpl	.-8      	; 0x20d0 <M_Dio_PinWrite+0x194>
    20d8:	20 95       	com	r18
    20da:	26 23       	and	r18, r22
    20dc:	fc 01       	movw	r30, r24
    20de:	20 83       	st	Z, r18
    20e0:	2c c0       	rjmp	.+88     	; 0x213a <M_Dio_PinWrite+0x1fe>
    20e2:	85 e3       	ldi	r24, 0x35	; 53
    20e4:	90 e0       	ldi	r25, 0x00	; 0
    20e6:	25 e3       	ldi	r18, 0x35	; 53
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	f9 01       	movw	r30, r18
    20ec:	20 81       	ld	r18, Z
    20ee:	62 2f       	mov	r22, r18
    20f0:	29 81       	ldd	r18, Y+1	; 0x01
    20f2:	42 2f       	mov	r20, r18
    20f4:	50 e0       	ldi	r21, 0x00	; 0
    20f6:	21 e0       	ldi	r18, 0x01	; 1
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	02 c0       	rjmp	.+4      	; 0x2100 <M_Dio_PinWrite+0x1c4>
    20fc:	22 0f       	add	r18, r18
    20fe:	33 1f       	adc	r19, r19
    2100:	4a 95       	dec	r20
    2102:	e2 f7       	brpl	.-8      	; 0x20fc <M_Dio_PinWrite+0x1c0>
    2104:	20 95       	com	r18
    2106:	26 23       	and	r18, r22
    2108:	fc 01       	movw	r30, r24
    210a:	20 83       	st	Z, r18
    210c:	16 c0       	rjmp	.+44     	; 0x213a <M_Dio_PinWrite+0x1fe>
    210e:	82 e3       	ldi	r24, 0x32	; 50
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	22 e3       	ldi	r18, 0x32	; 50
    2114:	30 e0       	ldi	r19, 0x00	; 0
    2116:	f9 01       	movw	r30, r18
    2118:	20 81       	ld	r18, Z
    211a:	62 2f       	mov	r22, r18
    211c:	29 81       	ldd	r18, Y+1	; 0x01
    211e:	42 2f       	mov	r20, r18
    2120:	50 e0       	ldi	r21, 0x00	; 0
    2122:	21 e0       	ldi	r18, 0x01	; 1
    2124:	30 e0       	ldi	r19, 0x00	; 0
    2126:	02 c0       	rjmp	.+4      	; 0x212c <M_Dio_PinWrite+0x1f0>
    2128:	22 0f       	add	r18, r18
    212a:	33 1f       	adc	r19, r19
    212c:	4a 95       	dec	r20
    212e:	e2 f7       	brpl	.-8      	; 0x2128 <M_Dio_PinWrite+0x1ec>
    2130:	20 95       	com	r18
    2132:	26 23       	and	r18, r22
    2134:	fc 01       	movw	r30, r24
    2136:	20 83       	st	Z, r18
    2138:	00 00       	nop
    213a:	00 00       	nop
    213c:	00 00       	nop
    213e:	0f 90       	pop	r0
    2140:	0f 90       	pop	r0
    2142:	0f 90       	pop	r0
    2144:	0f 90       	pop	r0
    2146:	df 91       	pop	r29
    2148:	cf 91       	pop	r28
    214a:	08 95       	ret

0000214c <M_Dio_PinRead>:

u8   M_Dio_PinRead(u8 Local_u8_Num)
{
    214c:	cf 93       	push	r28
    214e:	df 93       	push	r29
    2150:	00 d0       	rcall	.+0      	; 0x2152 <M_Dio_PinRead+0x6>
    2152:	00 d0       	rcall	.+0      	; 0x2154 <M_Dio_PinRead+0x8>
    2154:	cd b7       	in	r28, 0x3d	; 61
    2156:	de b7       	in	r29, 0x3e	; 62
    2158:	8c 83       	std	Y+4, r24	; 0x04
	u8 Local_u8_Pin  = Local_u8_Num % 10;
    215a:	9c 81       	ldd	r25, Y+4	; 0x04
    215c:	8d ec       	ldi	r24, 0xCD	; 205
    215e:	98 9f       	mul	r25, r24
    2160:	81 2d       	mov	r24, r1
    2162:	11 24       	eor	r1, r1
    2164:	86 95       	lsr	r24
    2166:	86 95       	lsr	r24
    2168:	86 95       	lsr	r24
    216a:	88 0f       	add	r24, r24
    216c:	28 2f       	mov	r18, r24
    216e:	22 0f       	add	r18, r18
    2170:	22 0f       	add	r18, r18
    2172:	82 0f       	add	r24, r18
    2174:	29 2f       	mov	r18, r25
    2176:	28 1b       	sub	r18, r24
    2178:	82 2f       	mov	r24, r18
    217a:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8_Port = Local_u8_Num / 10;
    217c:	9c 81       	ldd	r25, Y+4	; 0x04
    217e:	8d ec       	ldi	r24, 0xCD	; 205
    2180:	98 9f       	mul	r25, r24
    2182:	81 2d       	mov	r24, r1
    2184:	11 24       	eor	r1, r1
    2186:	86 95       	lsr	r24
    2188:	86 95       	lsr	r24
    218a:	86 95       	lsr	r24
    218c:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8_PinReading = 0;
    218e:	19 82       	std	Y+1, r1	; 0x01
	switch(Local_u8_Port)
    2190:	8b 81       	ldd	r24, Y+3	; 0x03
    2192:	88 2f       	mov	r24, r24
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	82 30       	cpi	r24, 0x02	; 2
    2198:	91 05       	cpc	r25, r1
    219a:	e9 f0       	breq	.+58     	; 0x21d6 <M_Dio_PinRead+0x8a>
    219c:	83 30       	cpi	r24, 0x03	; 3
    219e:	91 05       	cpc	r25, r1
    21a0:	1c f4       	brge	.+6      	; 0x21a8 <M_Dio_PinRead+0x5c>
    21a2:	01 97       	sbiw	r24, 0x01	; 1
    21a4:	39 f0       	breq	.+14     	; 0x21b4 <M_Dio_PinRead+0x68>
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
		default:                                                 break;
    21a6:	4a c0       	rjmp	.+148    	; 0x223c <M_Dio_PinRead+0xf0>
u8   M_Dio_PinRead(u8 Local_u8_Num)
{
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	u8 Local_u8_PinReading = 0;
	switch(Local_u8_Port)
    21a8:	83 30       	cpi	r24, 0x03	; 3
    21aa:	91 05       	cpc	r25, r1
    21ac:	29 f1       	breq	.+74     	; 0x21f8 <M_Dio_PinRead+0xac>
    21ae:	04 97       	sbiw	r24, 0x04	; 4
    21b0:	a1 f1       	breq	.+104    	; 0x221a <M_Dio_PinRead+0xce>
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
		default:                                                 break;
    21b2:	44 c0       	rjmp	.+136    	; 0x223c <M_Dio_PinRead+0xf0>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	u8 Local_u8_PinReading = 0;
	switch(Local_u8_Port)
	{ 
		case 1: Local_u8_PinReading = GetBit(_PINA,Local_u8_Pin); break;
    21b4:	89 e3       	ldi	r24, 0x39	; 57
    21b6:	90 e0       	ldi	r25, 0x00	; 0
    21b8:	fc 01       	movw	r30, r24
    21ba:	80 81       	ld	r24, Z
    21bc:	88 2f       	mov	r24, r24
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	2a 81       	ldd	r18, Y+2	; 0x02
    21c2:	22 2f       	mov	r18, r18
    21c4:	30 e0       	ldi	r19, 0x00	; 0
    21c6:	02 c0       	rjmp	.+4      	; 0x21cc <M_Dio_PinRead+0x80>
    21c8:	95 95       	asr	r25
    21ca:	87 95       	ror	r24
    21cc:	2a 95       	dec	r18
    21ce:	e2 f7       	brpl	.-8      	; 0x21c8 <M_Dio_PinRead+0x7c>
    21d0:	81 70       	andi	r24, 0x01	; 1
    21d2:	89 83       	std	Y+1, r24	; 0x01
    21d4:	33 c0       	rjmp	.+102    	; 0x223c <M_Dio_PinRead+0xf0>
		case 2: Local_u8_PinReading = GetBit(_PINB,Local_u8_Pin); break;
    21d6:	86 e3       	ldi	r24, 0x36	; 54
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	fc 01       	movw	r30, r24
    21dc:	80 81       	ld	r24, Z
    21de:	88 2f       	mov	r24, r24
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	2a 81       	ldd	r18, Y+2	; 0x02
    21e4:	22 2f       	mov	r18, r18
    21e6:	30 e0       	ldi	r19, 0x00	; 0
    21e8:	02 c0       	rjmp	.+4      	; 0x21ee <M_Dio_PinRead+0xa2>
    21ea:	95 95       	asr	r25
    21ec:	87 95       	ror	r24
    21ee:	2a 95       	dec	r18
    21f0:	e2 f7       	brpl	.-8      	; 0x21ea <M_Dio_PinRead+0x9e>
    21f2:	81 70       	andi	r24, 0x01	; 1
    21f4:	89 83       	std	Y+1, r24	; 0x01
    21f6:	22 c0       	rjmp	.+68     	; 0x223c <M_Dio_PinRead+0xf0>
		case 3: Local_u8_PinReading = GetBit(_PINC,Local_u8_Pin); break;
    21f8:	83 e3       	ldi	r24, 0x33	; 51
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	fc 01       	movw	r30, r24
    21fe:	80 81       	ld	r24, Z
    2200:	88 2f       	mov	r24, r24
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	2a 81       	ldd	r18, Y+2	; 0x02
    2206:	22 2f       	mov	r18, r18
    2208:	30 e0       	ldi	r19, 0x00	; 0
    220a:	02 c0       	rjmp	.+4      	; 0x2210 <M_Dio_PinRead+0xc4>
    220c:	95 95       	asr	r25
    220e:	87 95       	ror	r24
    2210:	2a 95       	dec	r18
    2212:	e2 f7       	brpl	.-8      	; 0x220c <M_Dio_PinRead+0xc0>
    2214:	81 70       	andi	r24, 0x01	; 1
    2216:	89 83       	std	Y+1, r24	; 0x01
    2218:	11 c0       	rjmp	.+34     	; 0x223c <M_Dio_PinRead+0xf0>
		case 4: Local_u8_PinReading = GetBit(_PIND,Local_u8_Pin); break;
    221a:	80 e3       	ldi	r24, 0x30	; 48
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	fc 01       	movw	r30, r24
    2220:	80 81       	ld	r24, Z
    2222:	88 2f       	mov	r24, r24
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	2a 81       	ldd	r18, Y+2	; 0x02
    2228:	22 2f       	mov	r18, r18
    222a:	30 e0       	ldi	r19, 0x00	; 0
    222c:	02 c0       	rjmp	.+4      	; 0x2232 <M_Dio_PinRead+0xe6>
    222e:	95 95       	asr	r25
    2230:	87 95       	ror	r24
    2232:	2a 95       	dec	r18
    2234:	e2 f7       	brpl	.-8      	; 0x222e <M_Dio_PinRead+0xe2>
    2236:	81 70       	andi	r24, 0x01	; 1
    2238:	89 83       	std	Y+1, r24	; 0x01
    223a:	00 00       	nop
		default:                                                 break;
		
	}
	return Local_u8_PinReading;
    223c:	89 81       	ldd	r24, Y+1	; 0x01
}
    223e:	0f 90       	pop	r0
    2240:	0f 90       	pop	r0
    2242:	0f 90       	pop	r0
    2244:	0f 90       	pop	r0
    2246:	df 91       	pop	r29
    2248:	cf 91       	pop	r28
    224a:	08 95       	ret

0000224c <M_Dio_PinPullUpRes>:

void M_Dio_PinPullUpRes(u8 Local_u8_Num,u8 Local_u8_Mode)
{
    224c:	cf 93       	push	r28
    224e:	df 93       	push	r29
    2250:	00 d0       	rcall	.+0      	; 0x2252 <M_Dio_PinPullUpRes+0x6>
    2252:	00 d0       	rcall	.+0      	; 0x2254 <M_Dio_PinPullUpRes+0x8>
    2254:	cd b7       	in	r28, 0x3d	; 61
    2256:	de b7       	in	r29, 0x3e	; 62
    2258:	8b 83       	std	Y+3, r24	; 0x03
    225a:	6c 83       	std	Y+4, r22	; 0x04
	u8 Local_u8_Pin  = Local_u8_Num % 10;
    225c:	9b 81       	ldd	r25, Y+3	; 0x03
    225e:	8d ec       	ldi	r24, 0xCD	; 205
    2260:	98 9f       	mul	r25, r24
    2262:	81 2d       	mov	r24, r1
    2264:	11 24       	eor	r1, r1
    2266:	86 95       	lsr	r24
    2268:	86 95       	lsr	r24
    226a:	86 95       	lsr	r24
    226c:	88 0f       	add	r24, r24
    226e:	28 2f       	mov	r18, r24
    2270:	22 0f       	add	r18, r18
    2272:	22 0f       	add	r18, r18
    2274:	82 0f       	add	r24, r18
    2276:	29 2f       	mov	r18, r25
    2278:	28 1b       	sub	r18, r24
    227a:	82 2f       	mov	r24, r18
    227c:	89 83       	std	Y+1, r24	; 0x01
	u8 Local_u8_Port = Local_u8_Num / 10;
    227e:	9b 81       	ldd	r25, Y+3	; 0x03
    2280:	8d ec       	ldi	r24, 0xCD	; 205
    2282:	98 9f       	mul	r25, r24
    2284:	81 2d       	mov	r24, r1
    2286:	11 24       	eor	r1, r1
    2288:	86 95       	lsr	r24
    228a:	86 95       	lsr	r24
    228c:	86 95       	lsr	r24
    228e:	8a 83       	std	Y+2, r24	; 0x02
	switch(Local_u8_Mode)
    2290:	8c 81       	ldd	r24, Y+4	; 0x04
    2292:	88 2f       	mov	r24, r24
    2294:	90 e0       	ldi	r25, 0x00	; 0
    2296:	81 30       	cpi	r24, 0x01	; 1
    2298:	91 05       	cpc	r25, r1
    229a:	21 f0       	breq	.+8      	; 0x22a4 <M_Dio_PinPullUpRes+0x58>
    229c:	02 97       	sbiw	r24, 0x02	; 2
    229e:	09 f4       	brne	.+2      	; 0x22a2 <M_Dio_PinPullUpRes+0x56>
    22a0:	69 c0       	rjmp	.+210    	; 0x2374 <M_Dio_PinPullUpRes+0x128>
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
		}
		break;
		default:
		break;
    22a2:	d4 c0       	rjmp	.+424    	; 0x244c <M_Dio_PinPullUpRes+0x200>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
    22a4:	8a 81       	ldd	r24, Y+2	; 0x02
    22a6:	88 2f       	mov	r24, r24
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	82 30       	cpi	r24, 0x02	; 2
    22ac:	91 05       	cpc	r25, r1
    22ae:	11 f1       	breq	.+68     	; 0x22f4 <M_Dio_PinPullUpRes+0xa8>
    22b0:	83 30       	cpi	r24, 0x03	; 3
    22b2:	91 05       	cpc	r25, r1
    22b4:	1c f4       	brge	.+6      	; 0x22bc <M_Dio_PinPullUpRes+0x70>
    22b6:	01 97       	sbiw	r24, 0x01	; 1
    22b8:	41 f0       	breq	.+16     	; 0x22ca <M_Dio_PinPullUpRes+0x7e>
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    22ba:	5b c0       	rjmp	.+182    	; 0x2372 <M_Dio_PinPullUpRes+0x126>
	u8 Local_u8_Pin  = Local_u8_Num % 10;
	u8 Local_u8_Port = Local_u8_Num / 10;
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
    22bc:	83 30       	cpi	r24, 0x03	; 3
    22be:	91 05       	cpc	r25, r1
    22c0:	71 f1       	breq	.+92     	; 0x231e <M_Dio_PinPullUpRes+0xd2>
    22c2:	04 97       	sbiw	r24, 0x04	; 4
    22c4:	09 f4       	brne	.+2      	; 0x22c8 <M_Dio_PinPullUpRes+0x7c>
    22c6:	40 c0       	rjmp	.+128    	; 0x2348 <M_Dio_PinPullUpRes+0xfc>
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    22c8:	54 c0       	rjmp	.+168    	; 0x2372 <M_Dio_PinPullUpRes+0x126>
	switch(Local_u8_Mode)
	{
		case ENABLE:
		switch(Local_u8_Port)
		{
			case 1: SetBit(_PORTA,Local_u8_Pin); break;
    22ca:	8b e3       	ldi	r24, 0x3B	; 59
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	2b e3       	ldi	r18, 0x3B	; 59
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	f9 01       	movw	r30, r18
    22d4:	20 81       	ld	r18, Z
    22d6:	62 2f       	mov	r22, r18
    22d8:	29 81       	ldd	r18, Y+1	; 0x01
    22da:	42 2f       	mov	r20, r18
    22dc:	50 e0       	ldi	r21, 0x00	; 0
    22de:	21 e0       	ldi	r18, 0x01	; 1
    22e0:	30 e0       	ldi	r19, 0x00	; 0
    22e2:	02 c0       	rjmp	.+4      	; 0x22e8 <M_Dio_PinPullUpRes+0x9c>
    22e4:	22 0f       	add	r18, r18
    22e6:	33 1f       	adc	r19, r19
    22e8:	4a 95       	dec	r20
    22ea:	e2 f7       	brpl	.-8      	; 0x22e4 <M_Dio_PinPullUpRes+0x98>
    22ec:	26 2b       	or	r18, r22
    22ee:	fc 01       	movw	r30, r24
    22f0:	20 83       	st	Z, r18
    22f2:	3f c0       	rjmp	.+126    	; 0x2372 <M_Dio_PinPullUpRes+0x126>
			case 2: SetBit(_PORTB,Local_u8_Pin); break;
    22f4:	88 e3       	ldi	r24, 0x38	; 56
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	28 e3       	ldi	r18, 0x38	; 56
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	f9 01       	movw	r30, r18
    22fe:	20 81       	ld	r18, Z
    2300:	62 2f       	mov	r22, r18
    2302:	29 81       	ldd	r18, Y+1	; 0x01
    2304:	42 2f       	mov	r20, r18
    2306:	50 e0       	ldi	r21, 0x00	; 0
    2308:	21 e0       	ldi	r18, 0x01	; 1
    230a:	30 e0       	ldi	r19, 0x00	; 0
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <M_Dio_PinPullUpRes+0xc6>
    230e:	22 0f       	add	r18, r18
    2310:	33 1f       	adc	r19, r19
    2312:	4a 95       	dec	r20
    2314:	e2 f7       	brpl	.-8      	; 0x230e <M_Dio_PinPullUpRes+0xc2>
    2316:	26 2b       	or	r18, r22
    2318:	fc 01       	movw	r30, r24
    231a:	20 83       	st	Z, r18
    231c:	2a c0       	rjmp	.+84     	; 0x2372 <M_Dio_PinPullUpRes+0x126>
			case 3: SetBit(_PORTC,Local_u8_Pin); break;
    231e:	85 e3       	ldi	r24, 0x35	; 53
    2320:	90 e0       	ldi	r25, 0x00	; 0
    2322:	25 e3       	ldi	r18, 0x35	; 53
    2324:	30 e0       	ldi	r19, 0x00	; 0
    2326:	f9 01       	movw	r30, r18
    2328:	20 81       	ld	r18, Z
    232a:	62 2f       	mov	r22, r18
    232c:	29 81       	ldd	r18, Y+1	; 0x01
    232e:	42 2f       	mov	r20, r18
    2330:	50 e0       	ldi	r21, 0x00	; 0
    2332:	21 e0       	ldi	r18, 0x01	; 1
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	02 c0       	rjmp	.+4      	; 0x233c <M_Dio_PinPullUpRes+0xf0>
    2338:	22 0f       	add	r18, r18
    233a:	33 1f       	adc	r19, r19
    233c:	4a 95       	dec	r20
    233e:	e2 f7       	brpl	.-8      	; 0x2338 <M_Dio_PinPullUpRes+0xec>
    2340:	26 2b       	or	r18, r22
    2342:	fc 01       	movw	r30, r24
    2344:	20 83       	st	Z, r18
    2346:	15 c0       	rjmp	.+42     	; 0x2372 <M_Dio_PinPullUpRes+0x126>
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
    2348:	82 e3       	ldi	r24, 0x32	; 50
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	22 e3       	ldi	r18, 0x32	; 50
    234e:	30 e0       	ldi	r19, 0x00	; 0
    2350:	f9 01       	movw	r30, r18
    2352:	20 81       	ld	r18, Z
    2354:	62 2f       	mov	r22, r18
    2356:	29 81       	ldd	r18, Y+1	; 0x01
    2358:	42 2f       	mov	r20, r18
    235a:	50 e0       	ldi	r21, 0x00	; 0
    235c:	21 e0       	ldi	r18, 0x01	; 1
    235e:	30 e0       	ldi	r19, 0x00	; 0
    2360:	02 c0       	rjmp	.+4      	; 0x2366 <M_Dio_PinPullUpRes+0x11a>
    2362:	22 0f       	add	r18, r18
    2364:	33 1f       	adc	r19, r19
    2366:	4a 95       	dec	r20
    2368:	e2 f7       	brpl	.-8      	; 0x2362 <M_Dio_PinPullUpRes+0x116>
    236a:	26 2b       	or	r18, r22
    236c:	fc 01       	movw	r30, r24
    236e:	20 83       	st	Z, r18
    2370:	00 00       	nop
			default:                            break;
		}
		break;
    2372:	6c c0       	rjmp	.+216    	; 0x244c <M_Dio_PinPullUpRes+0x200>
		case DISABLE:
		switch(Local_u8_Port)
    2374:	8a 81       	ldd	r24, Y+2	; 0x02
    2376:	88 2f       	mov	r24, r24
    2378:	90 e0       	ldi	r25, 0x00	; 0
    237a:	82 30       	cpi	r24, 0x02	; 2
    237c:	91 05       	cpc	r25, r1
    237e:	19 f1       	breq	.+70     	; 0x23c6 <M_Dio_PinPullUpRes+0x17a>
    2380:	83 30       	cpi	r24, 0x03	; 3
    2382:	91 05       	cpc	r25, r1
    2384:	1c f4       	brge	.+6      	; 0x238c <M_Dio_PinPullUpRes+0x140>
    2386:	01 97       	sbiw	r24, 0x01	; 1
    2388:	41 f0       	breq	.+16     	; 0x239a <M_Dio_PinPullUpRes+0x14e>
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    238a:	5f c0       	rjmp	.+190    	; 0x244a <M_Dio_PinPullUpRes+0x1fe>
			case 4: SetBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
		}
		break;
		case DISABLE:
		switch(Local_u8_Port)
    238c:	83 30       	cpi	r24, 0x03	; 3
    238e:	91 05       	cpc	r25, r1
    2390:	81 f1       	breq	.+96     	; 0x23f2 <M_Dio_PinPullUpRes+0x1a6>
    2392:	04 97       	sbiw	r24, 0x04	; 4
    2394:	09 f4       	brne	.+2      	; 0x2398 <M_Dio_PinPullUpRes+0x14c>
    2396:	43 c0       	rjmp	.+134    	; 0x241e <M_Dio_PinPullUpRes+0x1d2>
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
			default:                            break;
    2398:	58 c0       	rjmp	.+176    	; 0x244a <M_Dio_PinPullUpRes+0x1fe>
		}
		break;
		case DISABLE:
		switch(Local_u8_Port)
		{
			case 1: ClrBit(_PORTA,Local_u8_Pin); break;
    239a:	8b e3       	ldi	r24, 0x3B	; 59
    239c:	90 e0       	ldi	r25, 0x00	; 0
    239e:	2b e3       	ldi	r18, 0x3B	; 59
    23a0:	30 e0       	ldi	r19, 0x00	; 0
    23a2:	f9 01       	movw	r30, r18
    23a4:	20 81       	ld	r18, Z
    23a6:	62 2f       	mov	r22, r18
    23a8:	29 81       	ldd	r18, Y+1	; 0x01
    23aa:	42 2f       	mov	r20, r18
    23ac:	50 e0       	ldi	r21, 0x00	; 0
    23ae:	21 e0       	ldi	r18, 0x01	; 1
    23b0:	30 e0       	ldi	r19, 0x00	; 0
    23b2:	02 c0       	rjmp	.+4      	; 0x23b8 <M_Dio_PinPullUpRes+0x16c>
    23b4:	22 0f       	add	r18, r18
    23b6:	33 1f       	adc	r19, r19
    23b8:	4a 95       	dec	r20
    23ba:	e2 f7       	brpl	.-8      	; 0x23b4 <M_Dio_PinPullUpRes+0x168>
    23bc:	20 95       	com	r18
    23be:	26 23       	and	r18, r22
    23c0:	fc 01       	movw	r30, r24
    23c2:	20 83       	st	Z, r18
    23c4:	42 c0       	rjmp	.+132    	; 0x244a <M_Dio_PinPullUpRes+0x1fe>
			case 2: ClrBit(_PORTB,Local_u8_Pin); break;
    23c6:	88 e3       	ldi	r24, 0x38	; 56
    23c8:	90 e0       	ldi	r25, 0x00	; 0
    23ca:	28 e3       	ldi	r18, 0x38	; 56
    23cc:	30 e0       	ldi	r19, 0x00	; 0
    23ce:	f9 01       	movw	r30, r18
    23d0:	20 81       	ld	r18, Z
    23d2:	62 2f       	mov	r22, r18
    23d4:	29 81       	ldd	r18, Y+1	; 0x01
    23d6:	42 2f       	mov	r20, r18
    23d8:	50 e0       	ldi	r21, 0x00	; 0
    23da:	21 e0       	ldi	r18, 0x01	; 1
    23dc:	30 e0       	ldi	r19, 0x00	; 0
    23de:	02 c0       	rjmp	.+4      	; 0x23e4 <M_Dio_PinPullUpRes+0x198>
    23e0:	22 0f       	add	r18, r18
    23e2:	33 1f       	adc	r19, r19
    23e4:	4a 95       	dec	r20
    23e6:	e2 f7       	brpl	.-8      	; 0x23e0 <M_Dio_PinPullUpRes+0x194>
    23e8:	20 95       	com	r18
    23ea:	26 23       	and	r18, r22
    23ec:	fc 01       	movw	r30, r24
    23ee:	20 83       	st	Z, r18
    23f0:	2c c0       	rjmp	.+88     	; 0x244a <M_Dio_PinPullUpRes+0x1fe>
			case 3: ClrBit(_PORTC,Local_u8_Pin); break;
    23f2:	85 e3       	ldi	r24, 0x35	; 53
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	25 e3       	ldi	r18, 0x35	; 53
    23f8:	30 e0       	ldi	r19, 0x00	; 0
    23fa:	f9 01       	movw	r30, r18
    23fc:	20 81       	ld	r18, Z
    23fe:	62 2f       	mov	r22, r18
    2400:	29 81       	ldd	r18, Y+1	; 0x01
    2402:	42 2f       	mov	r20, r18
    2404:	50 e0       	ldi	r21, 0x00	; 0
    2406:	21 e0       	ldi	r18, 0x01	; 1
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	02 c0       	rjmp	.+4      	; 0x2410 <M_Dio_PinPullUpRes+0x1c4>
    240c:	22 0f       	add	r18, r18
    240e:	33 1f       	adc	r19, r19
    2410:	4a 95       	dec	r20
    2412:	e2 f7       	brpl	.-8      	; 0x240c <M_Dio_PinPullUpRes+0x1c0>
    2414:	20 95       	com	r18
    2416:	26 23       	and	r18, r22
    2418:	fc 01       	movw	r30, r24
    241a:	20 83       	st	Z, r18
    241c:	16 c0       	rjmp	.+44     	; 0x244a <M_Dio_PinPullUpRes+0x1fe>
			case 4: ClrBit(_PORTD,Local_u8_Pin); break;
    241e:	82 e3       	ldi	r24, 0x32	; 50
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	22 e3       	ldi	r18, 0x32	; 50
    2424:	30 e0       	ldi	r19, 0x00	; 0
    2426:	f9 01       	movw	r30, r18
    2428:	20 81       	ld	r18, Z
    242a:	62 2f       	mov	r22, r18
    242c:	29 81       	ldd	r18, Y+1	; 0x01
    242e:	42 2f       	mov	r20, r18
    2430:	50 e0       	ldi	r21, 0x00	; 0
    2432:	21 e0       	ldi	r18, 0x01	; 1
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	02 c0       	rjmp	.+4      	; 0x243c <M_Dio_PinPullUpRes+0x1f0>
    2438:	22 0f       	add	r18, r18
    243a:	33 1f       	adc	r19, r19
    243c:	4a 95       	dec	r20
    243e:	e2 f7       	brpl	.-8      	; 0x2438 <M_Dio_PinPullUpRes+0x1ec>
    2440:	20 95       	com	r18
    2442:	26 23       	and	r18, r22
    2444:	fc 01       	movw	r30, r24
    2446:	20 83       	st	Z, r18
    2448:	00 00       	nop
			default:                            break;
		}
		break;
    244a:	00 00       	nop
		default:
		break;
	}
}
    244c:	00 00       	nop
    244e:	0f 90       	pop	r0
    2450:	0f 90       	pop	r0
    2452:	0f 90       	pop	r0
    2454:	0f 90       	pop	r0
    2456:	df 91       	pop	r29
    2458:	cf 91       	pop	r28
    245a:	08 95       	ret

0000245c <__cmpsf2>:
    245c:	0e 94 18 13 	call	0x2630	; 0x2630 <__fp_cmp>
    2460:	08 f4       	brcc	.+2      	; 0x2464 <__cmpsf2+0x8>
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	08 95       	ret

00002466 <__divsf3>:
    2466:	0e 94 47 12 	call	0x248e	; 0x248e <__divsf3x>
    246a:	0c 94 63 13 	jmp	0x26c6	; 0x26c6 <__fp_round>
    246e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__fp_pscB>
    2472:	58 f0       	brcs	.+22     	; 0x248a <__divsf3+0x24>
    2474:	0e 94 55 13 	call	0x26aa	; 0x26aa <__fp_pscA>
    2478:	40 f0       	brcs	.+16     	; 0x248a <__divsf3+0x24>
    247a:	29 f4       	brne	.+10     	; 0x2486 <__divsf3+0x20>
    247c:	5f 3f       	cpi	r21, 0xFF	; 255
    247e:	29 f0       	breq	.+10     	; 0x248a <__divsf3+0x24>
    2480:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__fp_inf>
    2484:	51 11       	cpse	r21, r1
    2486:	0c 94 97 13 	jmp	0x272e	; 0x272e <__fp_szero>
    248a:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_nan>

0000248e <__divsf3x>:
    248e:	0e 94 74 13 	call	0x26e8	; 0x26e8 <__fp_split3>
    2492:	68 f3       	brcs	.-38     	; 0x246e <__divsf3+0x8>

00002494 <__divsf3_pse>:
    2494:	99 23       	and	r25, r25
    2496:	b1 f3       	breq	.-20     	; 0x2484 <__divsf3+0x1e>
    2498:	55 23       	and	r21, r21
    249a:	91 f3       	breq	.-28     	; 0x2480 <__divsf3+0x1a>
    249c:	95 1b       	sub	r25, r21
    249e:	55 0b       	sbc	r21, r21
    24a0:	bb 27       	eor	r27, r27
    24a2:	aa 27       	eor	r26, r26
    24a4:	62 17       	cp	r22, r18
    24a6:	73 07       	cpc	r23, r19
    24a8:	84 07       	cpc	r24, r20
    24aa:	38 f0       	brcs	.+14     	; 0x24ba <__divsf3_pse+0x26>
    24ac:	9f 5f       	subi	r25, 0xFF	; 255
    24ae:	5f 4f       	sbci	r21, 0xFF	; 255
    24b0:	22 0f       	add	r18, r18
    24b2:	33 1f       	adc	r19, r19
    24b4:	44 1f       	adc	r20, r20
    24b6:	aa 1f       	adc	r26, r26
    24b8:	a9 f3       	breq	.-22     	; 0x24a4 <__divsf3_pse+0x10>
    24ba:	35 d0       	rcall	.+106    	; 0x2526 <__divsf3_pse+0x92>
    24bc:	0e 2e       	mov	r0, r30
    24be:	3a f0       	brmi	.+14     	; 0x24ce <__divsf3_pse+0x3a>
    24c0:	e0 e8       	ldi	r30, 0x80	; 128
    24c2:	32 d0       	rcall	.+100    	; 0x2528 <__divsf3_pse+0x94>
    24c4:	91 50       	subi	r25, 0x01	; 1
    24c6:	50 40       	sbci	r21, 0x00	; 0
    24c8:	e6 95       	lsr	r30
    24ca:	00 1c       	adc	r0, r0
    24cc:	ca f7       	brpl	.-14     	; 0x24c0 <__divsf3_pse+0x2c>
    24ce:	2b d0       	rcall	.+86     	; 0x2526 <__divsf3_pse+0x92>
    24d0:	fe 2f       	mov	r31, r30
    24d2:	29 d0       	rcall	.+82     	; 0x2526 <__divsf3_pse+0x92>
    24d4:	66 0f       	add	r22, r22
    24d6:	77 1f       	adc	r23, r23
    24d8:	88 1f       	adc	r24, r24
    24da:	bb 1f       	adc	r27, r27
    24dc:	26 17       	cp	r18, r22
    24de:	37 07       	cpc	r19, r23
    24e0:	48 07       	cpc	r20, r24
    24e2:	ab 07       	cpc	r26, r27
    24e4:	b0 e8       	ldi	r27, 0x80	; 128
    24e6:	09 f0       	breq	.+2      	; 0x24ea <__divsf3_pse+0x56>
    24e8:	bb 0b       	sbc	r27, r27
    24ea:	80 2d       	mov	r24, r0
    24ec:	bf 01       	movw	r22, r30
    24ee:	ff 27       	eor	r31, r31
    24f0:	93 58       	subi	r25, 0x83	; 131
    24f2:	5f 4f       	sbci	r21, 0xFF	; 255
    24f4:	3a f0       	brmi	.+14     	; 0x2504 <__divsf3_pse+0x70>
    24f6:	9e 3f       	cpi	r25, 0xFE	; 254
    24f8:	51 05       	cpc	r21, r1
    24fa:	78 f0       	brcs	.+30     	; 0x251a <__divsf3_pse+0x86>
    24fc:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__fp_inf>
    2500:	0c 94 97 13 	jmp	0x272e	; 0x272e <__fp_szero>
    2504:	5f 3f       	cpi	r21, 0xFF	; 255
    2506:	e4 f3       	brlt	.-8      	; 0x2500 <__divsf3_pse+0x6c>
    2508:	98 3e       	cpi	r25, 0xE8	; 232
    250a:	d4 f3       	brlt	.-12     	; 0x2500 <__divsf3_pse+0x6c>
    250c:	86 95       	lsr	r24
    250e:	77 95       	ror	r23
    2510:	67 95       	ror	r22
    2512:	b7 95       	ror	r27
    2514:	f7 95       	ror	r31
    2516:	9f 5f       	subi	r25, 0xFF	; 255
    2518:	c9 f7       	brne	.-14     	; 0x250c <__divsf3_pse+0x78>
    251a:	88 0f       	add	r24, r24
    251c:	91 1d       	adc	r25, r1
    251e:	96 95       	lsr	r25
    2520:	87 95       	ror	r24
    2522:	97 f9       	bld	r25, 7
    2524:	08 95       	ret
    2526:	e1 e0       	ldi	r30, 0x01	; 1
    2528:	66 0f       	add	r22, r22
    252a:	77 1f       	adc	r23, r23
    252c:	88 1f       	adc	r24, r24
    252e:	bb 1f       	adc	r27, r27
    2530:	62 17       	cp	r22, r18
    2532:	73 07       	cpc	r23, r19
    2534:	84 07       	cpc	r24, r20
    2536:	ba 07       	cpc	r27, r26
    2538:	20 f0       	brcs	.+8      	; 0x2542 <__divsf3_pse+0xae>
    253a:	62 1b       	sub	r22, r18
    253c:	73 0b       	sbc	r23, r19
    253e:	84 0b       	sbc	r24, r20
    2540:	ba 0b       	sbc	r27, r26
    2542:	ee 1f       	adc	r30, r30
    2544:	88 f7       	brcc	.-30     	; 0x2528 <__divsf3_pse+0x94>
    2546:	e0 95       	com	r30
    2548:	08 95       	ret

0000254a <__fixunssfsi>:
    254a:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <__fp_splitA>
    254e:	88 f0       	brcs	.+34     	; 0x2572 <__fixunssfsi+0x28>
    2550:	9f 57       	subi	r25, 0x7F	; 127
    2552:	98 f0       	brcs	.+38     	; 0x257a <__fixunssfsi+0x30>
    2554:	b9 2f       	mov	r27, r25
    2556:	99 27       	eor	r25, r25
    2558:	b7 51       	subi	r27, 0x17	; 23
    255a:	b0 f0       	brcs	.+44     	; 0x2588 <__fixunssfsi+0x3e>
    255c:	e1 f0       	breq	.+56     	; 0x2596 <__fixunssfsi+0x4c>
    255e:	66 0f       	add	r22, r22
    2560:	77 1f       	adc	r23, r23
    2562:	88 1f       	adc	r24, r24
    2564:	99 1f       	adc	r25, r25
    2566:	1a f0       	brmi	.+6      	; 0x256e <__fixunssfsi+0x24>
    2568:	ba 95       	dec	r27
    256a:	c9 f7       	brne	.-14     	; 0x255e <__fixunssfsi+0x14>
    256c:	14 c0       	rjmp	.+40     	; 0x2596 <__fixunssfsi+0x4c>
    256e:	b1 30       	cpi	r27, 0x01	; 1
    2570:	91 f0       	breq	.+36     	; 0x2596 <__fixunssfsi+0x4c>
    2572:	0e 94 96 13 	call	0x272c	; 0x272c <__fp_zero>
    2576:	b1 e0       	ldi	r27, 0x01	; 1
    2578:	08 95       	ret
    257a:	0c 94 96 13 	jmp	0x272c	; 0x272c <__fp_zero>
    257e:	67 2f       	mov	r22, r23
    2580:	78 2f       	mov	r23, r24
    2582:	88 27       	eor	r24, r24
    2584:	b8 5f       	subi	r27, 0xF8	; 248
    2586:	39 f0       	breq	.+14     	; 0x2596 <__fixunssfsi+0x4c>
    2588:	b9 3f       	cpi	r27, 0xF9	; 249
    258a:	cc f3       	brlt	.-14     	; 0x257e <__fixunssfsi+0x34>
    258c:	86 95       	lsr	r24
    258e:	77 95       	ror	r23
    2590:	67 95       	ror	r22
    2592:	b3 95       	inc	r27
    2594:	d9 f7       	brne	.-10     	; 0x258c <__fixunssfsi+0x42>
    2596:	3e f4       	brtc	.+14     	; 0x25a6 <__fixunssfsi+0x5c>
    2598:	90 95       	com	r25
    259a:	80 95       	com	r24
    259c:	70 95       	com	r23
    259e:	61 95       	neg	r22
    25a0:	7f 4f       	sbci	r23, 0xFF	; 255
    25a2:	8f 4f       	sbci	r24, 0xFF	; 255
    25a4:	9f 4f       	sbci	r25, 0xFF	; 255
    25a6:	08 95       	ret

000025a8 <__floatdisf>:
    25a8:	97 fb       	bst	r25, 7
    25aa:	16 f4       	brtc	.+4      	; 0x25b0 <__floatdisf+0x8>
    25ac:	0e 94 45 13 	call	0x268a	; 0x268a <__fp_negdi>
    25b0:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__fp_di2sf>

000025b4 <__floatundisf>:
    25b4:	e8 94       	clt

000025b6 <__fp_di2sf>:
    25b6:	f9 2f       	mov	r31, r25
    25b8:	96 eb       	ldi	r25, 0xB6	; 182
    25ba:	ff 23       	and	r31, r31
    25bc:	81 f0       	breq	.+32     	; 0x25de <__fp_di2sf+0x28>
    25be:	12 16       	cp	r1, r18
    25c0:	13 06       	cpc	r1, r19
    25c2:	14 06       	cpc	r1, r20
    25c4:	44 0b       	sbc	r20, r20
    25c6:	93 95       	inc	r25
    25c8:	f6 95       	lsr	r31
    25ca:	87 95       	ror	r24
    25cc:	77 95       	ror	r23
    25ce:	67 95       	ror	r22
    25d0:	57 95       	ror	r21
    25d2:	40 40       	sbci	r20, 0x00	; 0
    25d4:	ff 23       	and	r31, r31
    25d6:	b9 f7       	brne	.-18     	; 0x25c6 <__fp_di2sf+0x10>
    25d8:	1b c0       	rjmp	.+54     	; 0x2610 <__fp_di2sf+0x5a>
    25da:	99 27       	eor	r25, r25
    25dc:	08 95       	ret
    25de:	88 23       	and	r24, r24
    25e0:	51 f4       	brne	.+20     	; 0x25f6 <__fp_di2sf+0x40>
    25e2:	98 50       	subi	r25, 0x08	; 8
    25e4:	d2 f7       	brpl	.-12     	; 0x25da <__fp_di2sf+0x24>
    25e6:	87 2b       	or	r24, r23
    25e8:	76 2f       	mov	r23, r22
    25ea:	65 2f       	mov	r22, r21
    25ec:	54 2f       	mov	r21, r20
    25ee:	43 2f       	mov	r20, r19
    25f0:	32 2f       	mov	r19, r18
    25f2:	20 e0       	ldi	r18, 0x00	; 0
    25f4:	b1 f3       	breq	.-20     	; 0x25e2 <__fp_di2sf+0x2c>
    25f6:	12 16       	cp	r1, r18
    25f8:	13 06       	cpc	r1, r19
    25fa:	14 06       	cpc	r1, r20
    25fc:	44 0b       	sbc	r20, r20
    25fe:	88 23       	and	r24, r24
    2600:	3a f0       	brmi	.+14     	; 0x2610 <__fp_di2sf+0x5a>
    2602:	9a 95       	dec	r25
    2604:	44 0f       	add	r20, r20
    2606:	55 1f       	adc	r21, r21
    2608:	66 1f       	adc	r22, r22
    260a:	77 1f       	adc	r23, r23
    260c:	88 1f       	adc	r24, r24
    260e:	ca f7       	brpl	.-14     	; 0x2602 <__fp_di2sf+0x4c>
    2610:	55 23       	and	r21, r21
    2612:	4a f4       	brpl	.+18     	; 0x2626 <__fp_di2sf+0x70>
    2614:	44 0f       	add	r20, r20
    2616:	55 1f       	adc	r21, r21
    2618:	11 f4       	brne	.+4      	; 0x261e <__fp_di2sf+0x68>
    261a:	60 ff       	sbrs	r22, 0
    261c:	04 c0       	rjmp	.+8      	; 0x2626 <__fp_di2sf+0x70>
    261e:	6f 5f       	subi	r22, 0xFF	; 255
    2620:	7f 4f       	sbci	r23, 0xFF	; 255
    2622:	8f 4f       	sbci	r24, 0xFF	; 255
    2624:	9f 4f       	sbci	r25, 0xFF	; 255
    2626:	88 0f       	add	r24, r24
    2628:	96 95       	lsr	r25
    262a:	87 95       	ror	r24
    262c:	97 f9       	bld	r25, 7
    262e:	08 95       	ret

00002630 <__fp_cmp>:
    2630:	99 0f       	add	r25, r25
    2632:	00 08       	sbc	r0, r0
    2634:	55 0f       	add	r21, r21
    2636:	aa 0b       	sbc	r26, r26
    2638:	e0 e8       	ldi	r30, 0x80	; 128
    263a:	fe ef       	ldi	r31, 0xFE	; 254
    263c:	16 16       	cp	r1, r22
    263e:	17 06       	cpc	r1, r23
    2640:	e8 07       	cpc	r30, r24
    2642:	f9 07       	cpc	r31, r25
    2644:	c0 f0       	brcs	.+48     	; 0x2676 <__fp_cmp+0x46>
    2646:	12 16       	cp	r1, r18
    2648:	13 06       	cpc	r1, r19
    264a:	e4 07       	cpc	r30, r20
    264c:	f5 07       	cpc	r31, r21
    264e:	98 f0       	brcs	.+38     	; 0x2676 <__fp_cmp+0x46>
    2650:	62 1b       	sub	r22, r18
    2652:	73 0b       	sbc	r23, r19
    2654:	84 0b       	sbc	r24, r20
    2656:	95 0b       	sbc	r25, r21
    2658:	39 f4       	brne	.+14     	; 0x2668 <__fp_cmp+0x38>
    265a:	0a 26       	eor	r0, r26
    265c:	61 f0       	breq	.+24     	; 0x2676 <__fp_cmp+0x46>
    265e:	23 2b       	or	r18, r19
    2660:	24 2b       	or	r18, r20
    2662:	25 2b       	or	r18, r21
    2664:	21 f4       	brne	.+8      	; 0x266e <__fp_cmp+0x3e>
    2666:	08 95       	ret
    2668:	0a 26       	eor	r0, r26
    266a:	09 f4       	brne	.+2      	; 0x266e <__fp_cmp+0x3e>
    266c:	a1 40       	sbci	r26, 0x01	; 1
    266e:	a6 95       	lsr	r26
    2670:	8f ef       	ldi	r24, 0xFF	; 255
    2672:	81 1d       	adc	r24, r1
    2674:	81 1d       	adc	r24, r1
    2676:	08 95       	ret

00002678 <__fp_inf>:
    2678:	97 f9       	bld	r25, 7
    267a:	9f 67       	ori	r25, 0x7F	; 127
    267c:	80 e8       	ldi	r24, 0x80	; 128
    267e:	70 e0       	ldi	r23, 0x00	; 0
    2680:	60 e0       	ldi	r22, 0x00	; 0
    2682:	08 95       	ret

00002684 <__fp_nan>:
    2684:	9f ef       	ldi	r25, 0xFF	; 255
    2686:	80 ec       	ldi	r24, 0xC0	; 192
    2688:	08 95       	ret

0000268a <__fp_negdi>:
    268a:	90 95       	com	r25
    268c:	80 95       	com	r24
    268e:	70 95       	com	r23
    2690:	60 95       	com	r22
    2692:	50 95       	com	r21
    2694:	40 95       	com	r20
    2696:	30 95       	com	r19
    2698:	21 95       	neg	r18
    269a:	3f 4f       	sbci	r19, 0xFF	; 255
    269c:	4f 4f       	sbci	r20, 0xFF	; 255
    269e:	5f 4f       	sbci	r21, 0xFF	; 255
    26a0:	6f 4f       	sbci	r22, 0xFF	; 255
    26a2:	7f 4f       	sbci	r23, 0xFF	; 255
    26a4:	8f 4f       	sbci	r24, 0xFF	; 255
    26a6:	9f 4f       	sbci	r25, 0xFF	; 255
    26a8:	08 95       	ret

000026aa <__fp_pscA>:
    26aa:	00 24       	eor	r0, r0
    26ac:	0a 94       	dec	r0
    26ae:	16 16       	cp	r1, r22
    26b0:	17 06       	cpc	r1, r23
    26b2:	18 06       	cpc	r1, r24
    26b4:	09 06       	cpc	r0, r25
    26b6:	08 95       	ret

000026b8 <__fp_pscB>:
    26b8:	00 24       	eor	r0, r0
    26ba:	0a 94       	dec	r0
    26bc:	12 16       	cp	r1, r18
    26be:	13 06       	cpc	r1, r19
    26c0:	14 06       	cpc	r1, r20
    26c2:	05 06       	cpc	r0, r21
    26c4:	08 95       	ret

000026c6 <__fp_round>:
    26c6:	09 2e       	mov	r0, r25
    26c8:	03 94       	inc	r0
    26ca:	00 0c       	add	r0, r0
    26cc:	11 f4       	brne	.+4      	; 0x26d2 <__fp_round+0xc>
    26ce:	88 23       	and	r24, r24
    26d0:	52 f0       	brmi	.+20     	; 0x26e6 <__fp_round+0x20>
    26d2:	bb 0f       	add	r27, r27
    26d4:	40 f4       	brcc	.+16     	; 0x26e6 <__fp_round+0x20>
    26d6:	bf 2b       	or	r27, r31
    26d8:	11 f4       	brne	.+4      	; 0x26de <__fp_round+0x18>
    26da:	60 ff       	sbrs	r22, 0
    26dc:	04 c0       	rjmp	.+8      	; 0x26e6 <__fp_round+0x20>
    26de:	6f 5f       	subi	r22, 0xFF	; 255
    26e0:	7f 4f       	sbci	r23, 0xFF	; 255
    26e2:	8f 4f       	sbci	r24, 0xFF	; 255
    26e4:	9f 4f       	sbci	r25, 0xFF	; 255
    26e6:	08 95       	ret

000026e8 <__fp_split3>:
    26e8:	57 fd       	sbrc	r21, 7
    26ea:	90 58       	subi	r25, 0x80	; 128
    26ec:	44 0f       	add	r20, r20
    26ee:	55 1f       	adc	r21, r21
    26f0:	59 f0       	breq	.+22     	; 0x2708 <__fp_splitA+0x10>
    26f2:	5f 3f       	cpi	r21, 0xFF	; 255
    26f4:	71 f0       	breq	.+28     	; 0x2712 <__fp_splitA+0x1a>
    26f6:	47 95       	ror	r20

000026f8 <__fp_splitA>:
    26f8:	88 0f       	add	r24, r24
    26fa:	97 fb       	bst	r25, 7
    26fc:	99 1f       	adc	r25, r25
    26fe:	61 f0       	breq	.+24     	; 0x2718 <__fp_splitA+0x20>
    2700:	9f 3f       	cpi	r25, 0xFF	; 255
    2702:	79 f0       	breq	.+30     	; 0x2722 <__fp_splitA+0x2a>
    2704:	87 95       	ror	r24
    2706:	08 95       	ret
    2708:	12 16       	cp	r1, r18
    270a:	13 06       	cpc	r1, r19
    270c:	14 06       	cpc	r1, r20
    270e:	55 1f       	adc	r21, r21
    2710:	f2 cf       	rjmp	.-28     	; 0x26f6 <__fp_split3+0xe>
    2712:	46 95       	lsr	r20
    2714:	f1 df       	rcall	.-30     	; 0x26f8 <__fp_splitA>
    2716:	08 c0       	rjmp	.+16     	; 0x2728 <__fp_splitA+0x30>
    2718:	16 16       	cp	r1, r22
    271a:	17 06       	cpc	r1, r23
    271c:	18 06       	cpc	r1, r24
    271e:	99 1f       	adc	r25, r25
    2720:	f1 cf       	rjmp	.-30     	; 0x2704 <__fp_splitA+0xc>
    2722:	86 95       	lsr	r24
    2724:	71 05       	cpc	r23, r1
    2726:	61 05       	cpc	r22, r1
    2728:	08 94       	sec
    272a:	08 95       	ret

0000272c <__fp_zero>:
    272c:	e8 94       	clt

0000272e <__fp_szero>:
    272e:	bb 27       	eor	r27, r27
    2730:	66 27       	eor	r22, r22
    2732:	77 27       	eor	r23, r23
    2734:	cb 01       	movw	r24, r22
    2736:	97 f9       	bld	r25, 7
    2738:	08 95       	ret

0000273a <__gesf2>:
    273a:	0e 94 18 13 	call	0x2630	; 0x2630 <__fp_cmp>
    273e:	08 f4       	brcc	.+2      	; 0x2742 <__gesf2+0x8>
    2740:	8f ef       	ldi	r24, 0xFF	; 255
    2742:	08 95       	ret

00002744 <__mulsf3>:
    2744:	0e 94 b5 13 	call	0x276a	; 0x276a <__mulsf3x>
    2748:	0c 94 63 13 	jmp	0x26c6	; 0x26c6 <__fp_round>
    274c:	0e 94 55 13 	call	0x26aa	; 0x26aa <__fp_pscA>
    2750:	38 f0       	brcs	.+14     	; 0x2760 <__mulsf3+0x1c>
    2752:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__fp_pscB>
    2756:	20 f0       	brcs	.+8      	; 0x2760 <__mulsf3+0x1c>
    2758:	95 23       	and	r25, r21
    275a:	11 f0       	breq	.+4      	; 0x2760 <__mulsf3+0x1c>
    275c:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__fp_inf>
    2760:	0c 94 42 13 	jmp	0x2684	; 0x2684 <__fp_nan>
    2764:	11 24       	eor	r1, r1
    2766:	0c 94 97 13 	jmp	0x272e	; 0x272e <__fp_szero>

0000276a <__mulsf3x>:
    276a:	0e 94 74 13 	call	0x26e8	; 0x26e8 <__fp_split3>
    276e:	70 f3       	brcs	.-36     	; 0x274c <__mulsf3+0x8>

00002770 <__mulsf3_pse>:
    2770:	95 9f       	mul	r25, r21
    2772:	c1 f3       	breq	.-16     	; 0x2764 <__mulsf3+0x20>
    2774:	95 0f       	add	r25, r21
    2776:	50 e0       	ldi	r21, 0x00	; 0
    2778:	55 1f       	adc	r21, r21
    277a:	62 9f       	mul	r22, r18
    277c:	f0 01       	movw	r30, r0
    277e:	72 9f       	mul	r23, r18
    2780:	bb 27       	eor	r27, r27
    2782:	f0 0d       	add	r31, r0
    2784:	b1 1d       	adc	r27, r1
    2786:	63 9f       	mul	r22, r19
    2788:	aa 27       	eor	r26, r26
    278a:	f0 0d       	add	r31, r0
    278c:	b1 1d       	adc	r27, r1
    278e:	aa 1f       	adc	r26, r26
    2790:	64 9f       	mul	r22, r20
    2792:	66 27       	eor	r22, r22
    2794:	b0 0d       	add	r27, r0
    2796:	a1 1d       	adc	r26, r1
    2798:	66 1f       	adc	r22, r22
    279a:	82 9f       	mul	r24, r18
    279c:	22 27       	eor	r18, r18
    279e:	b0 0d       	add	r27, r0
    27a0:	a1 1d       	adc	r26, r1
    27a2:	62 1f       	adc	r22, r18
    27a4:	73 9f       	mul	r23, r19
    27a6:	b0 0d       	add	r27, r0
    27a8:	a1 1d       	adc	r26, r1
    27aa:	62 1f       	adc	r22, r18
    27ac:	83 9f       	mul	r24, r19
    27ae:	a0 0d       	add	r26, r0
    27b0:	61 1d       	adc	r22, r1
    27b2:	22 1f       	adc	r18, r18
    27b4:	74 9f       	mul	r23, r20
    27b6:	33 27       	eor	r19, r19
    27b8:	a0 0d       	add	r26, r0
    27ba:	61 1d       	adc	r22, r1
    27bc:	23 1f       	adc	r18, r19
    27be:	84 9f       	mul	r24, r20
    27c0:	60 0d       	add	r22, r0
    27c2:	21 1d       	adc	r18, r1
    27c4:	82 2f       	mov	r24, r18
    27c6:	76 2f       	mov	r23, r22
    27c8:	6a 2f       	mov	r22, r26
    27ca:	11 24       	eor	r1, r1
    27cc:	9f 57       	subi	r25, 0x7F	; 127
    27ce:	50 40       	sbci	r21, 0x00	; 0
    27d0:	9a f0       	brmi	.+38     	; 0x27f8 <__mulsf3_pse+0x88>
    27d2:	f1 f0       	breq	.+60     	; 0x2810 <__mulsf3_pse+0xa0>
    27d4:	88 23       	and	r24, r24
    27d6:	4a f0       	brmi	.+18     	; 0x27ea <__mulsf3_pse+0x7a>
    27d8:	ee 0f       	add	r30, r30
    27da:	ff 1f       	adc	r31, r31
    27dc:	bb 1f       	adc	r27, r27
    27de:	66 1f       	adc	r22, r22
    27e0:	77 1f       	adc	r23, r23
    27e2:	88 1f       	adc	r24, r24
    27e4:	91 50       	subi	r25, 0x01	; 1
    27e6:	50 40       	sbci	r21, 0x00	; 0
    27e8:	a9 f7       	brne	.-22     	; 0x27d4 <__mulsf3_pse+0x64>
    27ea:	9e 3f       	cpi	r25, 0xFE	; 254
    27ec:	51 05       	cpc	r21, r1
    27ee:	80 f0       	brcs	.+32     	; 0x2810 <__mulsf3_pse+0xa0>
    27f0:	0c 94 3c 13 	jmp	0x2678	; 0x2678 <__fp_inf>
    27f4:	0c 94 97 13 	jmp	0x272e	; 0x272e <__fp_szero>
    27f8:	5f 3f       	cpi	r21, 0xFF	; 255
    27fa:	e4 f3       	brlt	.-8      	; 0x27f4 <__mulsf3_pse+0x84>
    27fc:	98 3e       	cpi	r25, 0xE8	; 232
    27fe:	d4 f3       	brlt	.-12     	; 0x27f4 <__mulsf3_pse+0x84>
    2800:	86 95       	lsr	r24
    2802:	77 95       	ror	r23
    2804:	67 95       	ror	r22
    2806:	b7 95       	ror	r27
    2808:	f7 95       	ror	r31
    280a:	e7 95       	ror	r30
    280c:	9f 5f       	subi	r25, 0xFF	; 255
    280e:	c1 f7       	brne	.-16     	; 0x2800 <__mulsf3_pse+0x90>
    2810:	fe 2b       	or	r31, r30
    2812:	88 0f       	add	r24, r24
    2814:	91 1d       	adc	r25, r1
    2816:	96 95       	lsr	r25
    2818:	87 95       	ror	r24
    281a:	97 f9       	bld	r25, 7
    281c:	08 95       	ret

0000281e <vfprintf>:
    281e:	a0 e1       	ldi	r26, 0x10	; 16
    2820:	b0 e0       	ldi	r27, 0x00	; 0
    2822:	e5 e1       	ldi	r30, 0x15	; 21
    2824:	f4 e1       	ldi	r31, 0x14	; 20
    2826:	0c 94 85 18 	jmp	0x310a	; 0x310a <__prologue_saves__>
    282a:	7c 01       	movw	r14, r24
    282c:	1b 01       	movw	r2, r22
    282e:	6a 01       	movw	r12, r20
    2830:	fc 01       	movw	r30, r24
    2832:	17 82       	std	Z+7, r1	; 0x07
    2834:	16 82       	std	Z+6, r1	; 0x06
    2836:	83 81       	ldd	r24, Z+3	; 0x03
    2838:	81 ff       	sbrs	r24, 1
    283a:	44 c3       	rjmp	.+1672   	; 0x2ec4 <vfprintf+0x6a6>
    283c:	9e 01       	movw	r18, r28
    283e:	2f 5f       	subi	r18, 0xFF	; 255
    2840:	3f 4f       	sbci	r19, 0xFF	; 255
    2842:	39 01       	movw	r6, r18
    2844:	f7 01       	movw	r30, r14
    2846:	93 81       	ldd	r25, Z+3	; 0x03
    2848:	f1 01       	movw	r30, r2
    284a:	93 fd       	sbrc	r25, 3
    284c:	85 91       	lpm	r24, Z+
    284e:	93 ff       	sbrs	r25, 3
    2850:	81 91       	ld	r24, Z+
    2852:	1f 01       	movw	r2, r30
    2854:	88 23       	and	r24, r24
    2856:	09 f4       	brne	.+2      	; 0x285a <vfprintf+0x3c>
    2858:	31 c3       	rjmp	.+1634   	; 0x2ebc <vfprintf+0x69e>
    285a:	85 32       	cpi	r24, 0x25	; 37
    285c:	39 f4       	brne	.+14     	; 0x286c <vfprintf+0x4e>
    285e:	93 fd       	sbrc	r25, 3
    2860:	85 91       	lpm	r24, Z+
    2862:	93 ff       	sbrs	r25, 3
    2864:	81 91       	ld	r24, Z+
    2866:	1f 01       	movw	r2, r30
    2868:	85 32       	cpi	r24, 0x25	; 37
    286a:	39 f4       	brne	.+14     	; 0x287a <vfprintf+0x5c>
    286c:	b7 01       	movw	r22, r14
    286e:	90 e0       	ldi	r25, 0x00	; 0
    2870:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2874:	56 01       	movw	r10, r12
    2876:	65 01       	movw	r12, r10
    2878:	e5 cf       	rjmp	.-54     	; 0x2844 <vfprintf+0x26>
    287a:	10 e0       	ldi	r17, 0x00	; 0
    287c:	51 2c       	mov	r5, r1
    287e:	91 2c       	mov	r9, r1
    2880:	ff e1       	ldi	r31, 0x1F	; 31
    2882:	f9 15       	cp	r31, r9
    2884:	d8 f0       	brcs	.+54     	; 0x28bc <vfprintf+0x9e>
    2886:	8b 32       	cpi	r24, 0x2B	; 43
    2888:	79 f0       	breq	.+30     	; 0x28a8 <vfprintf+0x8a>
    288a:	38 f4       	brcc	.+14     	; 0x289a <vfprintf+0x7c>
    288c:	80 32       	cpi	r24, 0x20	; 32
    288e:	79 f0       	breq	.+30     	; 0x28ae <vfprintf+0x90>
    2890:	83 32       	cpi	r24, 0x23	; 35
    2892:	a1 f4       	brne	.+40     	; 0x28bc <vfprintf+0x9e>
    2894:	f9 2d       	mov	r31, r9
    2896:	f0 61       	ori	r31, 0x10	; 16
    2898:	2e c0       	rjmp	.+92     	; 0x28f6 <vfprintf+0xd8>
    289a:	8d 32       	cpi	r24, 0x2D	; 45
    289c:	61 f0       	breq	.+24     	; 0x28b6 <vfprintf+0x98>
    289e:	80 33       	cpi	r24, 0x30	; 48
    28a0:	69 f4       	brne	.+26     	; 0x28bc <vfprintf+0x9e>
    28a2:	29 2d       	mov	r18, r9
    28a4:	21 60       	ori	r18, 0x01	; 1
    28a6:	2d c0       	rjmp	.+90     	; 0x2902 <vfprintf+0xe4>
    28a8:	39 2d       	mov	r19, r9
    28aa:	32 60       	ori	r19, 0x02	; 2
    28ac:	93 2e       	mov	r9, r19
    28ae:	89 2d       	mov	r24, r9
    28b0:	84 60       	ori	r24, 0x04	; 4
    28b2:	98 2e       	mov	r9, r24
    28b4:	2a c0       	rjmp	.+84     	; 0x290a <vfprintf+0xec>
    28b6:	e9 2d       	mov	r30, r9
    28b8:	e8 60       	ori	r30, 0x08	; 8
    28ba:	15 c0       	rjmp	.+42     	; 0x28e6 <vfprintf+0xc8>
    28bc:	97 fc       	sbrc	r9, 7
    28be:	2d c0       	rjmp	.+90     	; 0x291a <vfprintf+0xfc>
    28c0:	20 ed       	ldi	r18, 0xD0	; 208
    28c2:	28 0f       	add	r18, r24
    28c4:	2a 30       	cpi	r18, 0x0A	; 10
    28c6:	88 f4       	brcc	.+34     	; 0x28ea <vfprintf+0xcc>
    28c8:	96 fe       	sbrs	r9, 6
    28ca:	06 c0       	rjmp	.+12     	; 0x28d8 <vfprintf+0xba>
    28cc:	3a e0       	ldi	r19, 0x0A	; 10
    28ce:	13 9f       	mul	r17, r19
    28d0:	20 0d       	add	r18, r0
    28d2:	11 24       	eor	r1, r1
    28d4:	12 2f       	mov	r17, r18
    28d6:	19 c0       	rjmp	.+50     	; 0x290a <vfprintf+0xec>
    28d8:	8a e0       	ldi	r24, 0x0A	; 10
    28da:	58 9e       	mul	r5, r24
    28dc:	20 0d       	add	r18, r0
    28de:	11 24       	eor	r1, r1
    28e0:	52 2e       	mov	r5, r18
    28e2:	e9 2d       	mov	r30, r9
    28e4:	e0 62       	ori	r30, 0x20	; 32
    28e6:	9e 2e       	mov	r9, r30
    28e8:	10 c0       	rjmp	.+32     	; 0x290a <vfprintf+0xec>
    28ea:	8e 32       	cpi	r24, 0x2E	; 46
    28ec:	31 f4       	brne	.+12     	; 0x28fa <vfprintf+0xdc>
    28ee:	96 fc       	sbrc	r9, 6
    28f0:	e5 c2       	rjmp	.+1482   	; 0x2ebc <vfprintf+0x69e>
    28f2:	f9 2d       	mov	r31, r9
    28f4:	f0 64       	ori	r31, 0x40	; 64
    28f6:	9f 2e       	mov	r9, r31
    28f8:	08 c0       	rjmp	.+16     	; 0x290a <vfprintf+0xec>
    28fa:	8c 36       	cpi	r24, 0x6C	; 108
    28fc:	21 f4       	brne	.+8      	; 0x2906 <vfprintf+0xe8>
    28fe:	29 2d       	mov	r18, r9
    2900:	20 68       	ori	r18, 0x80	; 128
    2902:	92 2e       	mov	r9, r18
    2904:	02 c0       	rjmp	.+4      	; 0x290a <vfprintf+0xec>
    2906:	88 36       	cpi	r24, 0x68	; 104
    2908:	41 f4       	brne	.+16     	; 0x291a <vfprintf+0xfc>
    290a:	f1 01       	movw	r30, r2
    290c:	93 fd       	sbrc	r25, 3
    290e:	85 91       	lpm	r24, Z+
    2910:	93 ff       	sbrs	r25, 3
    2912:	81 91       	ld	r24, Z+
    2914:	1f 01       	movw	r2, r30
    2916:	81 11       	cpse	r24, r1
    2918:	b3 cf       	rjmp	.-154    	; 0x2880 <vfprintf+0x62>
    291a:	9b eb       	ldi	r25, 0xBB	; 187
    291c:	98 0f       	add	r25, r24
    291e:	93 30       	cpi	r25, 0x03	; 3
    2920:	20 f4       	brcc	.+8      	; 0x292a <vfprintf+0x10c>
    2922:	99 2d       	mov	r25, r9
    2924:	90 61       	ori	r25, 0x10	; 16
    2926:	80 5e       	subi	r24, 0xE0	; 224
    2928:	07 c0       	rjmp	.+14     	; 0x2938 <vfprintf+0x11a>
    292a:	9b e9       	ldi	r25, 0x9B	; 155
    292c:	98 0f       	add	r25, r24
    292e:	93 30       	cpi	r25, 0x03	; 3
    2930:	08 f0       	brcs	.+2      	; 0x2934 <vfprintf+0x116>
    2932:	66 c1       	rjmp	.+716    	; 0x2c00 <vfprintf+0x3e2>
    2934:	99 2d       	mov	r25, r9
    2936:	9f 7e       	andi	r25, 0xEF	; 239
    2938:	96 ff       	sbrs	r25, 6
    293a:	16 e0       	ldi	r17, 0x06	; 6
    293c:	9f 73       	andi	r25, 0x3F	; 63
    293e:	99 2e       	mov	r9, r25
    2940:	85 36       	cpi	r24, 0x65	; 101
    2942:	19 f4       	brne	.+6      	; 0x294a <vfprintf+0x12c>
    2944:	90 64       	ori	r25, 0x40	; 64
    2946:	99 2e       	mov	r9, r25
    2948:	08 c0       	rjmp	.+16     	; 0x295a <vfprintf+0x13c>
    294a:	86 36       	cpi	r24, 0x66	; 102
    294c:	21 f4       	brne	.+8      	; 0x2956 <vfprintf+0x138>
    294e:	39 2f       	mov	r19, r25
    2950:	30 68       	ori	r19, 0x80	; 128
    2952:	93 2e       	mov	r9, r19
    2954:	02 c0       	rjmp	.+4      	; 0x295a <vfprintf+0x13c>
    2956:	11 11       	cpse	r17, r1
    2958:	11 50       	subi	r17, 0x01	; 1
    295a:	97 fe       	sbrs	r9, 7
    295c:	07 c0       	rjmp	.+14     	; 0x296c <vfprintf+0x14e>
    295e:	1c 33       	cpi	r17, 0x3C	; 60
    2960:	50 f4       	brcc	.+20     	; 0x2976 <vfprintf+0x158>
    2962:	44 24       	eor	r4, r4
    2964:	43 94       	inc	r4
    2966:	41 0e       	add	r4, r17
    2968:	27 e0       	ldi	r18, 0x07	; 7
    296a:	0b c0       	rjmp	.+22     	; 0x2982 <vfprintf+0x164>
    296c:	18 30       	cpi	r17, 0x08	; 8
    296e:	38 f0       	brcs	.+14     	; 0x297e <vfprintf+0x160>
    2970:	27 e0       	ldi	r18, 0x07	; 7
    2972:	17 e0       	ldi	r17, 0x07	; 7
    2974:	05 c0       	rjmp	.+10     	; 0x2980 <vfprintf+0x162>
    2976:	27 e0       	ldi	r18, 0x07	; 7
    2978:	9c e3       	ldi	r25, 0x3C	; 60
    297a:	49 2e       	mov	r4, r25
    297c:	02 c0       	rjmp	.+4      	; 0x2982 <vfprintf+0x164>
    297e:	21 2f       	mov	r18, r17
    2980:	41 2c       	mov	r4, r1
    2982:	56 01       	movw	r10, r12
    2984:	84 e0       	ldi	r24, 0x04	; 4
    2986:	a8 0e       	add	r10, r24
    2988:	b1 1c       	adc	r11, r1
    298a:	f6 01       	movw	r30, r12
    298c:	60 81       	ld	r22, Z
    298e:	71 81       	ldd	r23, Z+1	; 0x01
    2990:	82 81       	ldd	r24, Z+2	; 0x02
    2992:	93 81       	ldd	r25, Z+3	; 0x03
    2994:	04 2d       	mov	r16, r4
    2996:	a3 01       	movw	r20, r6
    2998:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <__ftoa_engine>
    299c:	6c 01       	movw	r12, r24
    299e:	f9 81       	ldd	r31, Y+1	; 0x01
    29a0:	fc 87       	std	Y+12, r31	; 0x0c
    29a2:	f0 ff       	sbrs	r31, 0
    29a4:	02 c0       	rjmp	.+4      	; 0x29aa <vfprintf+0x18c>
    29a6:	f3 ff       	sbrs	r31, 3
    29a8:	06 c0       	rjmp	.+12     	; 0x29b6 <vfprintf+0x198>
    29aa:	91 fc       	sbrc	r9, 1
    29ac:	06 c0       	rjmp	.+12     	; 0x29ba <vfprintf+0x19c>
    29ae:	92 fe       	sbrs	r9, 2
    29b0:	06 c0       	rjmp	.+12     	; 0x29be <vfprintf+0x1a0>
    29b2:	00 e2       	ldi	r16, 0x20	; 32
    29b4:	05 c0       	rjmp	.+10     	; 0x29c0 <vfprintf+0x1a2>
    29b6:	0d e2       	ldi	r16, 0x2D	; 45
    29b8:	03 c0       	rjmp	.+6      	; 0x29c0 <vfprintf+0x1a2>
    29ba:	0b e2       	ldi	r16, 0x2B	; 43
    29bc:	01 c0       	rjmp	.+2      	; 0x29c0 <vfprintf+0x1a2>
    29be:	00 e0       	ldi	r16, 0x00	; 0
    29c0:	8c 85       	ldd	r24, Y+12	; 0x0c
    29c2:	8c 70       	andi	r24, 0x0C	; 12
    29c4:	19 f0       	breq	.+6      	; 0x29cc <vfprintf+0x1ae>
    29c6:	01 11       	cpse	r16, r1
    29c8:	5a c2       	rjmp	.+1204   	; 0x2e7e <vfprintf+0x660>
    29ca:	9b c2       	rjmp	.+1334   	; 0x2f02 <vfprintf+0x6e4>
    29cc:	97 fe       	sbrs	r9, 7
    29ce:	10 c0       	rjmp	.+32     	; 0x29f0 <vfprintf+0x1d2>
    29d0:	4c 0c       	add	r4, r12
    29d2:	fc 85       	ldd	r31, Y+12	; 0x0c
    29d4:	f4 ff       	sbrs	r31, 4
    29d6:	04 c0       	rjmp	.+8      	; 0x29e0 <vfprintf+0x1c2>
    29d8:	8a 81       	ldd	r24, Y+2	; 0x02
    29da:	81 33       	cpi	r24, 0x31	; 49
    29dc:	09 f4       	brne	.+2      	; 0x29e0 <vfprintf+0x1c2>
    29de:	4a 94       	dec	r4
    29e0:	14 14       	cp	r1, r4
    29e2:	74 f5       	brge	.+92     	; 0x2a40 <vfprintf+0x222>
    29e4:	28 e0       	ldi	r18, 0x08	; 8
    29e6:	24 15       	cp	r18, r4
    29e8:	78 f5       	brcc	.+94     	; 0x2a48 <vfprintf+0x22a>
    29ea:	88 e0       	ldi	r24, 0x08	; 8
    29ec:	48 2e       	mov	r4, r24
    29ee:	2c c0       	rjmp	.+88     	; 0x2a48 <vfprintf+0x22a>
    29f0:	96 fc       	sbrc	r9, 6
    29f2:	2a c0       	rjmp	.+84     	; 0x2a48 <vfprintf+0x22a>
    29f4:	81 2f       	mov	r24, r17
    29f6:	90 e0       	ldi	r25, 0x00	; 0
    29f8:	8c 15       	cp	r24, r12
    29fa:	9d 05       	cpc	r25, r13
    29fc:	9c f0       	brlt	.+38     	; 0x2a24 <vfprintf+0x206>
    29fe:	3c ef       	ldi	r19, 0xFC	; 252
    2a00:	c3 16       	cp	r12, r19
    2a02:	3f ef       	ldi	r19, 0xFF	; 255
    2a04:	d3 06       	cpc	r13, r19
    2a06:	74 f0       	brlt	.+28     	; 0x2a24 <vfprintf+0x206>
    2a08:	89 2d       	mov	r24, r9
    2a0a:	80 68       	ori	r24, 0x80	; 128
    2a0c:	98 2e       	mov	r9, r24
    2a0e:	0a c0       	rjmp	.+20     	; 0x2a24 <vfprintf+0x206>
    2a10:	e2 e0       	ldi	r30, 0x02	; 2
    2a12:	f0 e0       	ldi	r31, 0x00	; 0
    2a14:	ec 0f       	add	r30, r28
    2a16:	fd 1f       	adc	r31, r29
    2a18:	e1 0f       	add	r30, r17
    2a1a:	f1 1d       	adc	r31, r1
    2a1c:	80 81       	ld	r24, Z
    2a1e:	80 33       	cpi	r24, 0x30	; 48
    2a20:	19 f4       	brne	.+6      	; 0x2a28 <vfprintf+0x20a>
    2a22:	11 50       	subi	r17, 0x01	; 1
    2a24:	11 11       	cpse	r17, r1
    2a26:	f4 cf       	rjmp	.-24     	; 0x2a10 <vfprintf+0x1f2>
    2a28:	97 fe       	sbrs	r9, 7
    2a2a:	0e c0       	rjmp	.+28     	; 0x2a48 <vfprintf+0x22a>
    2a2c:	44 24       	eor	r4, r4
    2a2e:	43 94       	inc	r4
    2a30:	41 0e       	add	r4, r17
    2a32:	81 2f       	mov	r24, r17
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	c8 16       	cp	r12, r24
    2a38:	d9 06       	cpc	r13, r25
    2a3a:	2c f4       	brge	.+10     	; 0x2a46 <vfprintf+0x228>
    2a3c:	1c 19       	sub	r17, r12
    2a3e:	04 c0       	rjmp	.+8      	; 0x2a48 <vfprintf+0x22a>
    2a40:	44 24       	eor	r4, r4
    2a42:	43 94       	inc	r4
    2a44:	01 c0       	rjmp	.+2      	; 0x2a48 <vfprintf+0x22a>
    2a46:	10 e0       	ldi	r17, 0x00	; 0
    2a48:	97 fe       	sbrs	r9, 7
    2a4a:	06 c0       	rjmp	.+12     	; 0x2a58 <vfprintf+0x23a>
    2a4c:	1c 14       	cp	r1, r12
    2a4e:	1d 04       	cpc	r1, r13
    2a50:	34 f4       	brge	.+12     	; 0x2a5e <vfprintf+0x240>
    2a52:	c6 01       	movw	r24, r12
    2a54:	01 96       	adiw	r24, 0x01	; 1
    2a56:	05 c0       	rjmp	.+10     	; 0x2a62 <vfprintf+0x244>
    2a58:	85 e0       	ldi	r24, 0x05	; 5
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	02 c0       	rjmp	.+4      	; 0x2a62 <vfprintf+0x244>
    2a5e:	81 e0       	ldi	r24, 0x01	; 1
    2a60:	90 e0       	ldi	r25, 0x00	; 0
    2a62:	01 11       	cpse	r16, r1
    2a64:	01 96       	adiw	r24, 0x01	; 1
    2a66:	11 23       	and	r17, r17
    2a68:	31 f0       	breq	.+12     	; 0x2a76 <vfprintf+0x258>
    2a6a:	21 2f       	mov	r18, r17
    2a6c:	30 e0       	ldi	r19, 0x00	; 0
    2a6e:	2f 5f       	subi	r18, 0xFF	; 255
    2a70:	3f 4f       	sbci	r19, 0xFF	; 255
    2a72:	82 0f       	add	r24, r18
    2a74:	93 1f       	adc	r25, r19
    2a76:	25 2d       	mov	r18, r5
    2a78:	30 e0       	ldi	r19, 0x00	; 0
    2a7a:	82 17       	cp	r24, r18
    2a7c:	93 07       	cpc	r25, r19
    2a7e:	14 f4       	brge	.+4      	; 0x2a84 <vfprintf+0x266>
    2a80:	58 1a       	sub	r5, r24
    2a82:	01 c0       	rjmp	.+2      	; 0x2a86 <vfprintf+0x268>
    2a84:	51 2c       	mov	r5, r1
    2a86:	89 2d       	mov	r24, r9
    2a88:	89 70       	andi	r24, 0x09	; 9
    2a8a:	49 f4       	brne	.+18     	; 0x2a9e <vfprintf+0x280>
    2a8c:	55 20       	and	r5, r5
    2a8e:	39 f0       	breq	.+14     	; 0x2a9e <vfprintf+0x280>
    2a90:	b7 01       	movw	r22, r14
    2a92:	80 e2       	ldi	r24, 0x20	; 32
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2a9a:	5a 94       	dec	r5
    2a9c:	f7 cf       	rjmp	.-18     	; 0x2a8c <vfprintf+0x26e>
    2a9e:	00 23       	and	r16, r16
    2aa0:	29 f0       	breq	.+10     	; 0x2aac <vfprintf+0x28e>
    2aa2:	b7 01       	movw	r22, r14
    2aa4:	80 2f       	mov	r24, r16
    2aa6:	90 e0       	ldi	r25, 0x00	; 0
    2aa8:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2aac:	93 fc       	sbrc	r9, 3
    2aae:	09 c0       	rjmp	.+18     	; 0x2ac2 <vfprintf+0x2a4>
    2ab0:	55 20       	and	r5, r5
    2ab2:	39 f0       	breq	.+14     	; 0x2ac2 <vfprintf+0x2a4>
    2ab4:	b7 01       	movw	r22, r14
    2ab6:	80 e3       	ldi	r24, 0x30	; 48
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2abe:	5a 94       	dec	r5
    2ac0:	f7 cf       	rjmp	.-18     	; 0x2ab0 <vfprintf+0x292>
    2ac2:	97 fe       	sbrs	r9, 7
    2ac4:	4c c0       	rjmp	.+152    	; 0x2b5e <vfprintf+0x340>
    2ac6:	46 01       	movw	r8, r12
    2ac8:	d7 fe       	sbrs	r13, 7
    2aca:	02 c0       	rjmp	.+4      	; 0x2ad0 <vfprintf+0x2b2>
    2acc:	81 2c       	mov	r8, r1
    2ace:	91 2c       	mov	r9, r1
    2ad0:	c6 01       	movw	r24, r12
    2ad2:	88 19       	sub	r24, r8
    2ad4:	99 09       	sbc	r25, r9
    2ad6:	f3 01       	movw	r30, r6
    2ad8:	e8 0f       	add	r30, r24
    2ada:	f9 1f       	adc	r31, r25
    2adc:	fe 87       	std	Y+14, r31	; 0x0e
    2ade:	ed 87       	std	Y+13, r30	; 0x0d
    2ae0:	96 01       	movw	r18, r12
    2ae2:	24 19       	sub	r18, r4
    2ae4:	31 09       	sbc	r19, r1
    2ae6:	38 8b       	std	Y+16, r19	; 0x10
    2ae8:	2f 87       	std	Y+15, r18	; 0x0f
    2aea:	01 2f       	mov	r16, r17
    2aec:	10 e0       	ldi	r17, 0x00	; 0
    2aee:	11 95       	neg	r17
    2af0:	01 95       	neg	r16
    2af2:	11 09       	sbc	r17, r1
    2af4:	3f ef       	ldi	r19, 0xFF	; 255
    2af6:	83 16       	cp	r8, r19
    2af8:	93 06       	cpc	r9, r19
    2afa:	29 f4       	brne	.+10     	; 0x2b06 <vfprintf+0x2e8>
    2afc:	b7 01       	movw	r22, r14
    2afe:	8e e2       	ldi	r24, 0x2E	; 46
    2b00:	90 e0       	ldi	r25, 0x00	; 0
    2b02:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2b06:	c8 14       	cp	r12, r8
    2b08:	d9 04       	cpc	r13, r9
    2b0a:	4c f0       	brlt	.+18     	; 0x2b1e <vfprintf+0x300>
    2b0c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b0e:	98 89       	ldd	r25, Y+16	; 0x10
    2b10:	88 15       	cp	r24, r8
    2b12:	99 05       	cpc	r25, r9
    2b14:	24 f4       	brge	.+8      	; 0x2b1e <vfprintf+0x300>
    2b16:	ed 85       	ldd	r30, Y+13	; 0x0d
    2b18:	fe 85       	ldd	r31, Y+14	; 0x0e
    2b1a:	81 81       	ldd	r24, Z+1	; 0x01
    2b1c:	01 c0       	rjmp	.+2      	; 0x2b20 <vfprintf+0x302>
    2b1e:	80 e3       	ldi	r24, 0x30	; 48
    2b20:	f1 e0       	ldi	r31, 0x01	; 1
    2b22:	8f 1a       	sub	r8, r31
    2b24:	91 08       	sbc	r9, r1
    2b26:	2d 85       	ldd	r18, Y+13	; 0x0d
    2b28:	3e 85       	ldd	r19, Y+14	; 0x0e
    2b2a:	2f 5f       	subi	r18, 0xFF	; 255
    2b2c:	3f 4f       	sbci	r19, 0xFF	; 255
    2b2e:	3e 87       	std	Y+14, r19	; 0x0e
    2b30:	2d 87       	std	Y+13, r18	; 0x0d
    2b32:	80 16       	cp	r8, r16
    2b34:	91 06       	cpc	r9, r17
    2b36:	2c f0       	brlt	.+10     	; 0x2b42 <vfprintf+0x324>
    2b38:	b7 01       	movw	r22, r14
    2b3a:	90 e0       	ldi	r25, 0x00	; 0
    2b3c:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2b40:	d9 cf       	rjmp	.-78     	; 0x2af4 <vfprintf+0x2d6>
    2b42:	c8 14       	cp	r12, r8
    2b44:	d9 04       	cpc	r13, r9
    2b46:	41 f4       	brne	.+16     	; 0x2b58 <vfprintf+0x33a>
    2b48:	9a 81       	ldd	r25, Y+2	; 0x02
    2b4a:	96 33       	cpi	r25, 0x36	; 54
    2b4c:	20 f4       	brcc	.+8      	; 0x2b56 <vfprintf+0x338>
    2b4e:	95 33       	cpi	r25, 0x35	; 53
    2b50:	19 f4       	brne	.+6      	; 0x2b58 <vfprintf+0x33a>
    2b52:	3c 85       	ldd	r19, Y+12	; 0x0c
    2b54:	34 ff       	sbrs	r19, 4
    2b56:	81 e3       	ldi	r24, 0x31	; 49
    2b58:	b7 01       	movw	r22, r14
    2b5a:	90 e0       	ldi	r25, 0x00	; 0
    2b5c:	4e c0       	rjmp	.+156    	; 0x2bfa <vfprintf+0x3dc>
    2b5e:	8a 81       	ldd	r24, Y+2	; 0x02
    2b60:	81 33       	cpi	r24, 0x31	; 49
    2b62:	19 f0       	breq	.+6      	; 0x2b6a <vfprintf+0x34c>
    2b64:	9c 85       	ldd	r25, Y+12	; 0x0c
    2b66:	9f 7e       	andi	r25, 0xEF	; 239
    2b68:	9c 87       	std	Y+12, r25	; 0x0c
    2b6a:	b7 01       	movw	r22, r14
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2b72:	11 11       	cpse	r17, r1
    2b74:	05 c0       	rjmp	.+10     	; 0x2b80 <vfprintf+0x362>
    2b76:	94 fc       	sbrc	r9, 4
    2b78:	18 c0       	rjmp	.+48     	; 0x2baa <vfprintf+0x38c>
    2b7a:	85 e6       	ldi	r24, 0x65	; 101
    2b7c:	90 e0       	ldi	r25, 0x00	; 0
    2b7e:	17 c0       	rjmp	.+46     	; 0x2bae <vfprintf+0x390>
    2b80:	b7 01       	movw	r22, r14
    2b82:	8e e2       	ldi	r24, 0x2E	; 46
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2b8a:	1e 5f       	subi	r17, 0xFE	; 254
    2b8c:	82 e0       	ldi	r24, 0x02	; 2
    2b8e:	01 e0       	ldi	r16, 0x01	; 1
    2b90:	08 0f       	add	r16, r24
    2b92:	f3 01       	movw	r30, r6
    2b94:	e8 0f       	add	r30, r24
    2b96:	f1 1d       	adc	r31, r1
    2b98:	80 81       	ld	r24, Z
    2b9a:	b7 01       	movw	r22, r14
    2b9c:	90 e0       	ldi	r25, 0x00	; 0
    2b9e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2ba2:	80 2f       	mov	r24, r16
    2ba4:	01 13       	cpse	r16, r17
    2ba6:	f3 cf       	rjmp	.-26     	; 0x2b8e <vfprintf+0x370>
    2ba8:	e6 cf       	rjmp	.-52     	; 0x2b76 <vfprintf+0x358>
    2baa:	85 e4       	ldi	r24, 0x45	; 69
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	b7 01       	movw	r22, r14
    2bb0:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2bb4:	d7 fc       	sbrc	r13, 7
    2bb6:	06 c0       	rjmp	.+12     	; 0x2bc4 <vfprintf+0x3a6>
    2bb8:	c1 14       	cp	r12, r1
    2bba:	d1 04       	cpc	r13, r1
    2bbc:	41 f4       	brne	.+16     	; 0x2bce <vfprintf+0x3b0>
    2bbe:	ec 85       	ldd	r30, Y+12	; 0x0c
    2bc0:	e4 ff       	sbrs	r30, 4
    2bc2:	05 c0       	rjmp	.+10     	; 0x2bce <vfprintf+0x3b0>
    2bc4:	d1 94       	neg	r13
    2bc6:	c1 94       	neg	r12
    2bc8:	d1 08       	sbc	r13, r1
    2bca:	8d e2       	ldi	r24, 0x2D	; 45
    2bcc:	01 c0       	rjmp	.+2      	; 0x2bd0 <vfprintf+0x3b2>
    2bce:	8b e2       	ldi	r24, 0x2B	; 43
    2bd0:	b7 01       	movw	r22, r14
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2bd8:	80 e3       	ldi	r24, 0x30	; 48
    2bda:	2a e0       	ldi	r18, 0x0A	; 10
    2bdc:	c2 16       	cp	r12, r18
    2bde:	d1 04       	cpc	r13, r1
    2be0:	2c f0       	brlt	.+10     	; 0x2bec <vfprintf+0x3ce>
    2be2:	8f 5f       	subi	r24, 0xFF	; 255
    2be4:	fa e0       	ldi	r31, 0x0A	; 10
    2be6:	cf 1a       	sub	r12, r31
    2be8:	d1 08       	sbc	r13, r1
    2bea:	f7 cf       	rjmp	.-18     	; 0x2bda <vfprintf+0x3bc>
    2bec:	b7 01       	movw	r22, r14
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2bf4:	b7 01       	movw	r22, r14
    2bf6:	c6 01       	movw	r24, r12
    2bf8:	c0 96       	adiw	r24, 0x30	; 48
    2bfa:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2bfe:	54 c1       	rjmp	.+680    	; 0x2ea8 <vfprintf+0x68a>
    2c00:	83 36       	cpi	r24, 0x63	; 99
    2c02:	31 f0       	breq	.+12     	; 0x2c10 <vfprintf+0x3f2>
    2c04:	83 37       	cpi	r24, 0x73	; 115
    2c06:	79 f0       	breq	.+30     	; 0x2c26 <vfprintf+0x408>
    2c08:	83 35       	cpi	r24, 0x53	; 83
    2c0a:	09 f0       	breq	.+2      	; 0x2c0e <vfprintf+0x3f0>
    2c0c:	56 c0       	rjmp	.+172    	; 0x2cba <vfprintf+0x49c>
    2c0e:	20 c0       	rjmp	.+64     	; 0x2c50 <vfprintf+0x432>
    2c10:	56 01       	movw	r10, r12
    2c12:	32 e0       	ldi	r19, 0x02	; 2
    2c14:	a3 0e       	add	r10, r19
    2c16:	b1 1c       	adc	r11, r1
    2c18:	f6 01       	movw	r30, r12
    2c1a:	80 81       	ld	r24, Z
    2c1c:	89 83       	std	Y+1, r24	; 0x01
    2c1e:	01 e0       	ldi	r16, 0x01	; 1
    2c20:	10 e0       	ldi	r17, 0x00	; 0
    2c22:	63 01       	movw	r12, r6
    2c24:	12 c0       	rjmp	.+36     	; 0x2c4a <vfprintf+0x42c>
    2c26:	56 01       	movw	r10, r12
    2c28:	f2 e0       	ldi	r31, 0x02	; 2
    2c2a:	af 0e       	add	r10, r31
    2c2c:	b1 1c       	adc	r11, r1
    2c2e:	f6 01       	movw	r30, r12
    2c30:	c0 80       	ld	r12, Z
    2c32:	d1 80       	ldd	r13, Z+1	; 0x01
    2c34:	96 fe       	sbrs	r9, 6
    2c36:	03 c0       	rjmp	.+6      	; 0x2c3e <vfprintf+0x420>
    2c38:	61 2f       	mov	r22, r17
    2c3a:	70 e0       	ldi	r23, 0x00	; 0
    2c3c:	02 c0       	rjmp	.+4      	; 0x2c42 <vfprintf+0x424>
    2c3e:	6f ef       	ldi	r22, 0xFF	; 255
    2c40:	7f ef       	ldi	r23, 0xFF	; 255
    2c42:	c6 01       	movw	r24, r12
    2c44:	0e 94 f0 19 	call	0x33e0	; 0x33e0 <strnlen>
    2c48:	8c 01       	movw	r16, r24
    2c4a:	f9 2d       	mov	r31, r9
    2c4c:	ff 77       	andi	r31, 0x7F	; 127
    2c4e:	14 c0       	rjmp	.+40     	; 0x2c78 <vfprintf+0x45a>
    2c50:	56 01       	movw	r10, r12
    2c52:	22 e0       	ldi	r18, 0x02	; 2
    2c54:	a2 0e       	add	r10, r18
    2c56:	b1 1c       	adc	r11, r1
    2c58:	f6 01       	movw	r30, r12
    2c5a:	c0 80       	ld	r12, Z
    2c5c:	d1 80       	ldd	r13, Z+1	; 0x01
    2c5e:	96 fe       	sbrs	r9, 6
    2c60:	03 c0       	rjmp	.+6      	; 0x2c68 <vfprintf+0x44a>
    2c62:	61 2f       	mov	r22, r17
    2c64:	70 e0       	ldi	r23, 0x00	; 0
    2c66:	02 c0       	rjmp	.+4      	; 0x2c6c <vfprintf+0x44e>
    2c68:	6f ef       	ldi	r22, 0xFF	; 255
    2c6a:	7f ef       	ldi	r23, 0xFF	; 255
    2c6c:	c6 01       	movw	r24, r12
    2c6e:	0e 94 ca 19 	call	0x3394	; 0x3394 <strnlen_P>
    2c72:	8c 01       	movw	r16, r24
    2c74:	f9 2d       	mov	r31, r9
    2c76:	f0 68       	ori	r31, 0x80	; 128
    2c78:	9f 2e       	mov	r9, r31
    2c7a:	f3 fd       	sbrc	r31, 3
    2c7c:	1a c0       	rjmp	.+52     	; 0x2cb2 <vfprintf+0x494>
    2c7e:	85 2d       	mov	r24, r5
    2c80:	90 e0       	ldi	r25, 0x00	; 0
    2c82:	08 17       	cp	r16, r24
    2c84:	19 07       	cpc	r17, r25
    2c86:	a8 f4       	brcc	.+42     	; 0x2cb2 <vfprintf+0x494>
    2c88:	b7 01       	movw	r22, r14
    2c8a:	80 e2       	ldi	r24, 0x20	; 32
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2c92:	5a 94       	dec	r5
    2c94:	f4 cf       	rjmp	.-24     	; 0x2c7e <vfprintf+0x460>
    2c96:	f6 01       	movw	r30, r12
    2c98:	97 fc       	sbrc	r9, 7
    2c9a:	85 91       	lpm	r24, Z+
    2c9c:	97 fe       	sbrs	r9, 7
    2c9e:	81 91       	ld	r24, Z+
    2ca0:	6f 01       	movw	r12, r30
    2ca2:	b7 01       	movw	r22, r14
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2caa:	51 10       	cpse	r5, r1
    2cac:	5a 94       	dec	r5
    2cae:	01 50       	subi	r16, 0x01	; 1
    2cb0:	11 09       	sbc	r17, r1
    2cb2:	01 15       	cp	r16, r1
    2cb4:	11 05       	cpc	r17, r1
    2cb6:	79 f7       	brne	.-34     	; 0x2c96 <vfprintf+0x478>
    2cb8:	f7 c0       	rjmp	.+494    	; 0x2ea8 <vfprintf+0x68a>
    2cba:	84 36       	cpi	r24, 0x64	; 100
    2cbc:	11 f0       	breq	.+4      	; 0x2cc2 <vfprintf+0x4a4>
    2cbe:	89 36       	cpi	r24, 0x69	; 105
    2cc0:	61 f5       	brne	.+88     	; 0x2d1a <vfprintf+0x4fc>
    2cc2:	56 01       	movw	r10, r12
    2cc4:	97 fe       	sbrs	r9, 7
    2cc6:	09 c0       	rjmp	.+18     	; 0x2cda <vfprintf+0x4bc>
    2cc8:	24 e0       	ldi	r18, 0x04	; 4
    2cca:	a2 0e       	add	r10, r18
    2ccc:	b1 1c       	adc	r11, r1
    2cce:	f6 01       	movw	r30, r12
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	0a c0       	rjmp	.+20     	; 0x2cee <vfprintf+0x4d0>
    2cda:	f2 e0       	ldi	r31, 0x02	; 2
    2cdc:	af 0e       	add	r10, r31
    2cde:	b1 1c       	adc	r11, r1
    2ce0:	f6 01       	movw	r30, r12
    2ce2:	60 81       	ld	r22, Z
    2ce4:	71 81       	ldd	r23, Z+1	; 0x01
    2ce6:	07 2e       	mov	r0, r23
    2ce8:	00 0c       	add	r0, r0
    2cea:	88 0b       	sbc	r24, r24
    2cec:	99 0b       	sbc	r25, r25
    2cee:	f9 2d       	mov	r31, r9
    2cf0:	ff 76       	andi	r31, 0x6F	; 111
    2cf2:	9f 2e       	mov	r9, r31
    2cf4:	97 ff       	sbrs	r25, 7
    2cf6:	09 c0       	rjmp	.+18     	; 0x2d0a <vfprintf+0x4ec>
    2cf8:	90 95       	com	r25
    2cfa:	80 95       	com	r24
    2cfc:	70 95       	com	r23
    2cfe:	61 95       	neg	r22
    2d00:	7f 4f       	sbci	r23, 0xFF	; 255
    2d02:	8f 4f       	sbci	r24, 0xFF	; 255
    2d04:	9f 4f       	sbci	r25, 0xFF	; 255
    2d06:	f0 68       	ori	r31, 0x80	; 128
    2d08:	9f 2e       	mov	r9, r31
    2d0a:	2a e0       	ldi	r18, 0x0A	; 10
    2d0c:	30 e0       	ldi	r19, 0x00	; 0
    2d0e:	a3 01       	movw	r20, r6
    2d10:	0e 94 69 1a 	call	0x34d2	; 0x34d2 <__ultoa_invert>
    2d14:	c8 2e       	mov	r12, r24
    2d16:	c6 18       	sub	r12, r6
    2d18:	3f c0       	rjmp	.+126    	; 0x2d98 <vfprintf+0x57a>
    2d1a:	09 2d       	mov	r16, r9
    2d1c:	85 37       	cpi	r24, 0x75	; 117
    2d1e:	21 f4       	brne	.+8      	; 0x2d28 <vfprintf+0x50a>
    2d20:	0f 7e       	andi	r16, 0xEF	; 239
    2d22:	2a e0       	ldi	r18, 0x0A	; 10
    2d24:	30 e0       	ldi	r19, 0x00	; 0
    2d26:	1d c0       	rjmp	.+58     	; 0x2d62 <vfprintf+0x544>
    2d28:	09 7f       	andi	r16, 0xF9	; 249
    2d2a:	8f 36       	cpi	r24, 0x6F	; 111
    2d2c:	91 f0       	breq	.+36     	; 0x2d52 <vfprintf+0x534>
    2d2e:	18 f4       	brcc	.+6      	; 0x2d36 <vfprintf+0x518>
    2d30:	88 35       	cpi	r24, 0x58	; 88
    2d32:	59 f0       	breq	.+22     	; 0x2d4a <vfprintf+0x52c>
    2d34:	c3 c0       	rjmp	.+390    	; 0x2ebc <vfprintf+0x69e>
    2d36:	80 37       	cpi	r24, 0x70	; 112
    2d38:	19 f0       	breq	.+6      	; 0x2d40 <vfprintf+0x522>
    2d3a:	88 37       	cpi	r24, 0x78	; 120
    2d3c:	11 f0       	breq	.+4      	; 0x2d42 <vfprintf+0x524>
    2d3e:	be c0       	rjmp	.+380    	; 0x2ebc <vfprintf+0x69e>
    2d40:	00 61       	ori	r16, 0x10	; 16
    2d42:	04 ff       	sbrs	r16, 4
    2d44:	09 c0       	rjmp	.+18     	; 0x2d58 <vfprintf+0x53a>
    2d46:	04 60       	ori	r16, 0x04	; 4
    2d48:	07 c0       	rjmp	.+14     	; 0x2d58 <vfprintf+0x53a>
    2d4a:	94 fe       	sbrs	r9, 4
    2d4c:	08 c0       	rjmp	.+16     	; 0x2d5e <vfprintf+0x540>
    2d4e:	06 60       	ori	r16, 0x06	; 6
    2d50:	06 c0       	rjmp	.+12     	; 0x2d5e <vfprintf+0x540>
    2d52:	28 e0       	ldi	r18, 0x08	; 8
    2d54:	30 e0       	ldi	r19, 0x00	; 0
    2d56:	05 c0       	rjmp	.+10     	; 0x2d62 <vfprintf+0x544>
    2d58:	20 e1       	ldi	r18, 0x10	; 16
    2d5a:	30 e0       	ldi	r19, 0x00	; 0
    2d5c:	02 c0       	rjmp	.+4      	; 0x2d62 <vfprintf+0x544>
    2d5e:	20 e1       	ldi	r18, 0x10	; 16
    2d60:	32 e0       	ldi	r19, 0x02	; 2
    2d62:	56 01       	movw	r10, r12
    2d64:	07 ff       	sbrs	r16, 7
    2d66:	09 c0       	rjmp	.+18     	; 0x2d7a <vfprintf+0x55c>
    2d68:	84 e0       	ldi	r24, 0x04	; 4
    2d6a:	a8 0e       	add	r10, r24
    2d6c:	b1 1c       	adc	r11, r1
    2d6e:	f6 01       	movw	r30, r12
    2d70:	60 81       	ld	r22, Z
    2d72:	71 81       	ldd	r23, Z+1	; 0x01
    2d74:	82 81       	ldd	r24, Z+2	; 0x02
    2d76:	93 81       	ldd	r25, Z+3	; 0x03
    2d78:	08 c0       	rjmp	.+16     	; 0x2d8a <vfprintf+0x56c>
    2d7a:	f2 e0       	ldi	r31, 0x02	; 2
    2d7c:	af 0e       	add	r10, r31
    2d7e:	b1 1c       	adc	r11, r1
    2d80:	f6 01       	movw	r30, r12
    2d82:	60 81       	ld	r22, Z
    2d84:	71 81       	ldd	r23, Z+1	; 0x01
    2d86:	80 e0       	ldi	r24, 0x00	; 0
    2d88:	90 e0       	ldi	r25, 0x00	; 0
    2d8a:	a3 01       	movw	r20, r6
    2d8c:	0e 94 69 1a 	call	0x34d2	; 0x34d2 <__ultoa_invert>
    2d90:	c8 2e       	mov	r12, r24
    2d92:	c6 18       	sub	r12, r6
    2d94:	0f 77       	andi	r16, 0x7F	; 127
    2d96:	90 2e       	mov	r9, r16
    2d98:	96 fe       	sbrs	r9, 6
    2d9a:	0b c0       	rjmp	.+22     	; 0x2db2 <vfprintf+0x594>
    2d9c:	09 2d       	mov	r16, r9
    2d9e:	0e 7f       	andi	r16, 0xFE	; 254
    2da0:	c1 16       	cp	r12, r17
    2da2:	50 f4       	brcc	.+20     	; 0x2db8 <vfprintf+0x59a>
    2da4:	94 fe       	sbrs	r9, 4
    2da6:	0a c0       	rjmp	.+20     	; 0x2dbc <vfprintf+0x59e>
    2da8:	92 fc       	sbrc	r9, 2
    2daa:	08 c0       	rjmp	.+16     	; 0x2dbc <vfprintf+0x59e>
    2dac:	09 2d       	mov	r16, r9
    2dae:	0e 7e       	andi	r16, 0xEE	; 238
    2db0:	05 c0       	rjmp	.+10     	; 0x2dbc <vfprintf+0x59e>
    2db2:	dc 2c       	mov	r13, r12
    2db4:	09 2d       	mov	r16, r9
    2db6:	03 c0       	rjmp	.+6      	; 0x2dbe <vfprintf+0x5a0>
    2db8:	dc 2c       	mov	r13, r12
    2dba:	01 c0       	rjmp	.+2      	; 0x2dbe <vfprintf+0x5a0>
    2dbc:	d1 2e       	mov	r13, r17
    2dbe:	04 ff       	sbrs	r16, 4
    2dc0:	0d c0       	rjmp	.+26     	; 0x2ddc <vfprintf+0x5be>
    2dc2:	fe 01       	movw	r30, r28
    2dc4:	ec 0d       	add	r30, r12
    2dc6:	f1 1d       	adc	r31, r1
    2dc8:	80 81       	ld	r24, Z
    2dca:	80 33       	cpi	r24, 0x30	; 48
    2dcc:	11 f4       	brne	.+4      	; 0x2dd2 <vfprintf+0x5b4>
    2dce:	09 7e       	andi	r16, 0xE9	; 233
    2dd0:	09 c0       	rjmp	.+18     	; 0x2de4 <vfprintf+0x5c6>
    2dd2:	02 ff       	sbrs	r16, 2
    2dd4:	06 c0       	rjmp	.+12     	; 0x2de2 <vfprintf+0x5c4>
    2dd6:	d3 94       	inc	r13
    2dd8:	d3 94       	inc	r13
    2dda:	04 c0       	rjmp	.+8      	; 0x2de4 <vfprintf+0x5c6>
    2ddc:	80 2f       	mov	r24, r16
    2dde:	86 78       	andi	r24, 0x86	; 134
    2de0:	09 f0       	breq	.+2      	; 0x2de4 <vfprintf+0x5c6>
    2de2:	d3 94       	inc	r13
    2de4:	03 fd       	sbrc	r16, 3
    2de6:	11 c0       	rjmp	.+34     	; 0x2e0a <vfprintf+0x5ec>
    2de8:	00 ff       	sbrs	r16, 0
    2dea:	06 c0       	rjmp	.+12     	; 0x2df8 <vfprintf+0x5da>
    2dec:	1c 2d       	mov	r17, r12
    2dee:	d5 14       	cp	r13, r5
    2df0:	80 f4       	brcc	.+32     	; 0x2e12 <vfprintf+0x5f4>
    2df2:	15 0d       	add	r17, r5
    2df4:	1d 19       	sub	r17, r13
    2df6:	0d c0       	rjmp	.+26     	; 0x2e12 <vfprintf+0x5f4>
    2df8:	d5 14       	cp	r13, r5
    2dfa:	58 f4       	brcc	.+22     	; 0x2e12 <vfprintf+0x5f4>
    2dfc:	b7 01       	movw	r22, r14
    2dfe:	80 e2       	ldi	r24, 0x20	; 32
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2e06:	d3 94       	inc	r13
    2e08:	f7 cf       	rjmp	.-18     	; 0x2df8 <vfprintf+0x5da>
    2e0a:	d5 14       	cp	r13, r5
    2e0c:	10 f4       	brcc	.+4      	; 0x2e12 <vfprintf+0x5f4>
    2e0e:	5d 18       	sub	r5, r13
    2e10:	01 c0       	rjmp	.+2      	; 0x2e14 <vfprintf+0x5f6>
    2e12:	51 2c       	mov	r5, r1
    2e14:	04 ff       	sbrs	r16, 4
    2e16:	10 c0       	rjmp	.+32     	; 0x2e38 <vfprintf+0x61a>
    2e18:	b7 01       	movw	r22, r14
    2e1a:	80 e3       	ldi	r24, 0x30	; 48
    2e1c:	90 e0       	ldi	r25, 0x00	; 0
    2e1e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2e22:	02 ff       	sbrs	r16, 2
    2e24:	17 c0       	rjmp	.+46     	; 0x2e54 <vfprintf+0x636>
    2e26:	01 fd       	sbrc	r16, 1
    2e28:	03 c0       	rjmp	.+6      	; 0x2e30 <vfprintf+0x612>
    2e2a:	88 e7       	ldi	r24, 0x78	; 120
    2e2c:	90 e0       	ldi	r25, 0x00	; 0
    2e2e:	02 c0       	rjmp	.+4      	; 0x2e34 <vfprintf+0x616>
    2e30:	88 e5       	ldi	r24, 0x58	; 88
    2e32:	90 e0       	ldi	r25, 0x00	; 0
    2e34:	b7 01       	movw	r22, r14
    2e36:	0c c0       	rjmp	.+24     	; 0x2e50 <vfprintf+0x632>
    2e38:	80 2f       	mov	r24, r16
    2e3a:	86 78       	andi	r24, 0x86	; 134
    2e3c:	59 f0       	breq	.+22     	; 0x2e54 <vfprintf+0x636>
    2e3e:	01 ff       	sbrs	r16, 1
    2e40:	02 c0       	rjmp	.+4      	; 0x2e46 <vfprintf+0x628>
    2e42:	8b e2       	ldi	r24, 0x2B	; 43
    2e44:	01 c0       	rjmp	.+2      	; 0x2e48 <vfprintf+0x62a>
    2e46:	80 e2       	ldi	r24, 0x20	; 32
    2e48:	07 fd       	sbrc	r16, 7
    2e4a:	8d e2       	ldi	r24, 0x2D	; 45
    2e4c:	b7 01       	movw	r22, r14
    2e4e:	90 e0       	ldi	r25, 0x00	; 0
    2e50:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2e54:	c1 16       	cp	r12, r17
    2e56:	38 f4       	brcc	.+14     	; 0x2e66 <vfprintf+0x648>
    2e58:	b7 01       	movw	r22, r14
    2e5a:	80 e3       	ldi	r24, 0x30	; 48
    2e5c:	90 e0       	ldi	r25, 0x00	; 0
    2e5e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2e62:	11 50       	subi	r17, 0x01	; 1
    2e64:	f7 cf       	rjmp	.-18     	; 0x2e54 <vfprintf+0x636>
    2e66:	ca 94       	dec	r12
    2e68:	f3 01       	movw	r30, r6
    2e6a:	ec 0d       	add	r30, r12
    2e6c:	f1 1d       	adc	r31, r1
    2e6e:	80 81       	ld	r24, Z
    2e70:	b7 01       	movw	r22, r14
    2e72:	90 e0       	ldi	r25, 0x00	; 0
    2e74:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2e78:	c1 10       	cpse	r12, r1
    2e7a:	f5 cf       	rjmp	.-22     	; 0x2e66 <vfprintf+0x648>
    2e7c:	15 c0       	rjmp	.+42     	; 0x2ea8 <vfprintf+0x68a>
    2e7e:	f4 e0       	ldi	r31, 0x04	; 4
    2e80:	f5 15       	cp	r31, r5
    2e82:	60 f5       	brcc	.+88     	; 0x2edc <vfprintf+0x6be>
    2e84:	84 e0       	ldi	r24, 0x04	; 4
    2e86:	58 1a       	sub	r5, r24
    2e88:	93 fe       	sbrs	r9, 3
    2e8a:	1f c0       	rjmp	.+62     	; 0x2eca <vfprintf+0x6ac>
    2e8c:	01 11       	cpse	r16, r1
    2e8e:	27 c0       	rjmp	.+78     	; 0x2ede <vfprintf+0x6c0>
    2e90:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e92:	23 ff       	sbrs	r18, 3
    2e94:	2a c0       	rjmp	.+84     	; 0x2eea <vfprintf+0x6cc>
    2e96:	04 e5       	ldi	r16, 0x54	; 84
    2e98:	10 e0       	ldi	r17, 0x00	; 0
    2e9a:	39 2d       	mov	r19, r9
    2e9c:	30 71       	andi	r19, 0x10	; 16
    2e9e:	93 2e       	mov	r9, r19
    2ea0:	f8 01       	movw	r30, r16
    2ea2:	84 91       	lpm	r24, Z
    2ea4:	81 11       	cpse	r24, r1
    2ea6:	24 c0       	rjmp	.+72     	; 0x2ef0 <vfprintf+0x6d2>
    2ea8:	55 20       	and	r5, r5
    2eaa:	09 f4       	brne	.+2      	; 0x2eae <vfprintf+0x690>
    2eac:	e4 cc       	rjmp	.-1592   	; 0x2876 <vfprintf+0x58>
    2eae:	b7 01       	movw	r22, r14
    2eb0:	80 e2       	ldi	r24, 0x20	; 32
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2eb8:	5a 94       	dec	r5
    2eba:	f6 cf       	rjmp	.-20     	; 0x2ea8 <vfprintf+0x68a>
    2ebc:	f7 01       	movw	r30, r14
    2ebe:	86 81       	ldd	r24, Z+6	; 0x06
    2ec0:	97 81       	ldd	r25, Z+7	; 0x07
    2ec2:	26 c0       	rjmp	.+76     	; 0x2f10 <vfprintf+0x6f2>
    2ec4:	8f ef       	ldi	r24, 0xFF	; 255
    2ec6:	9f ef       	ldi	r25, 0xFF	; 255
    2ec8:	23 c0       	rjmp	.+70     	; 0x2f10 <vfprintf+0x6f2>
    2eca:	b7 01       	movw	r22, r14
    2ecc:	80 e2       	ldi	r24, 0x20	; 32
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2ed4:	5a 94       	dec	r5
    2ed6:	51 10       	cpse	r5, r1
    2ed8:	f8 cf       	rjmp	.-16     	; 0x2eca <vfprintf+0x6ac>
    2eda:	d8 cf       	rjmp	.-80     	; 0x2e8c <vfprintf+0x66e>
    2edc:	51 2c       	mov	r5, r1
    2ede:	b7 01       	movw	r22, r14
    2ee0:	80 2f       	mov	r24, r16
    2ee2:	90 e0       	ldi	r25, 0x00	; 0
    2ee4:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2ee8:	d3 cf       	rjmp	.-90     	; 0x2e90 <vfprintf+0x672>
    2eea:	08 e5       	ldi	r16, 0x58	; 88
    2eec:	10 e0       	ldi	r17, 0x00	; 0
    2eee:	d5 cf       	rjmp	.-86     	; 0x2e9a <vfprintf+0x67c>
    2ef0:	91 10       	cpse	r9, r1
    2ef2:	80 52       	subi	r24, 0x20	; 32
    2ef4:	b7 01       	movw	r22, r14
    2ef6:	90 e0       	ldi	r25, 0x00	; 0
    2ef8:	0e 94 0b 1a 	call	0x3416	; 0x3416 <fputc>
    2efc:	0f 5f       	subi	r16, 0xFF	; 255
    2efe:	1f 4f       	sbci	r17, 0xFF	; 255
    2f00:	cf cf       	rjmp	.-98     	; 0x2ea0 <vfprintf+0x682>
    2f02:	23 e0       	ldi	r18, 0x03	; 3
    2f04:	25 15       	cp	r18, r5
    2f06:	10 f4       	brcc	.+4      	; 0x2f0c <vfprintf+0x6ee>
    2f08:	83 e0       	ldi	r24, 0x03	; 3
    2f0a:	bd cf       	rjmp	.-134    	; 0x2e86 <vfprintf+0x668>
    2f0c:	51 2c       	mov	r5, r1
    2f0e:	c0 cf       	rjmp	.-128    	; 0x2e90 <vfprintf+0x672>
    2f10:	60 96       	adiw	r28, 0x10	; 16
    2f12:	e2 e1       	ldi	r30, 0x12	; 18
    2f14:	0c 94 a1 18 	jmp	0x3142	; 0x3142 <__epilogue_restores__>

00002f18 <__muldi3>:
    2f18:	df 93       	push	r29
    2f1a:	cf 93       	push	r28
    2f1c:	1f 93       	push	r17
    2f1e:	0f 93       	push	r16
    2f20:	9a 9d       	mul	r25, r10
    2f22:	f0 2d       	mov	r31, r0
    2f24:	21 9f       	mul	r18, r17
    2f26:	f0 0d       	add	r31, r0
    2f28:	8b 9d       	mul	r24, r11
    2f2a:	f0 0d       	add	r31, r0
    2f2c:	8a 9d       	mul	r24, r10
    2f2e:	e0 2d       	mov	r30, r0
    2f30:	f1 0d       	add	r31, r1
    2f32:	03 9f       	mul	r16, r19
    2f34:	f0 0d       	add	r31, r0
    2f36:	02 9f       	mul	r16, r18
    2f38:	e0 0d       	add	r30, r0
    2f3a:	f1 1d       	adc	r31, r1
    2f3c:	4e 9d       	mul	r20, r14
    2f3e:	e0 0d       	add	r30, r0
    2f40:	f1 1d       	adc	r31, r1
    2f42:	5e 9d       	mul	r21, r14
    2f44:	f0 0d       	add	r31, r0
    2f46:	4f 9d       	mul	r20, r15
    2f48:	f0 0d       	add	r31, r0
    2f4a:	7f 93       	push	r23
    2f4c:	6f 93       	push	r22
    2f4e:	bf 92       	push	r11
    2f50:	af 92       	push	r10
    2f52:	5f 93       	push	r21
    2f54:	4f 93       	push	r20
    2f56:	d5 01       	movw	r26, r10
    2f58:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2f5c:	8b 01       	movw	r16, r22
    2f5e:	ac 01       	movw	r20, r24
    2f60:	d7 01       	movw	r26, r14
    2f62:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2f66:	eb 01       	movw	r28, r22
    2f68:	e8 0f       	add	r30, r24
    2f6a:	f9 1f       	adc	r31, r25
    2f6c:	d6 01       	movw	r26, r12
    2f6e:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <__muldi3_6>
    2f72:	2f 91       	pop	r18
    2f74:	3f 91       	pop	r19
    2f76:	d6 01       	movw	r26, r12
    2f78:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2f7c:	c6 0f       	add	r28, r22
    2f7e:	d7 1f       	adc	r29, r23
    2f80:	e8 1f       	adc	r30, r24
    2f82:	f9 1f       	adc	r31, r25
    2f84:	af 91       	pop	r26
    2f86:	bf 91       	pop	r27
    2f88:	0e 94 dc 17 	call	0x2fb8	; 0x2fb8 <__muldi3_6>
    2f8c:	2f 91       	pop	r18
    2f8e:	3f 91       	pop	r19
    2f90:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2f94:	c6 0f       	add	r28, r22
    2f96:	d7 1f       	adc	r29, r23
    2f98:	e8 1f       	adc	r30, r24
    2f9a:	f9 1f       	adc	r31, r25
    2f9c:	d6 01       	movw	r26, r12
    2f9e:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2fa2:	e6 0f       	add	r30, r22
    2fa4:	f7 1f       	adc	r31, r23
    2fa6:	98 01       	movw	r18, r16
    2fa8:	be 01       	movw	r22, r28
    2faa:	cf 01       	movw	r24, r30
    2fac:	11 24       	eor	r1, r1
    2fae:	0f 91       	pop	r16
    2fb0:	1f 91       	pop	r17
    2fb2:	cf 91       	pop	r28
    2fb4:	df 91       	pop	r29
    2fb6:	08 95       	ret

00002fb8 <__muldi3_6>:
    2fb8:	0e 94 e3 18 	call	0x31c6	; 0x31c6 <__umulhisi3>
    2fbc:	46 0f       	add	r20, r22
    2fbe:	57 1f       	adc	r21, r23
    2fc0:	c8 1f       	adc	r28, r24
    2fc2:	d9 1f       	adc	r29, r25
    2fc4:	08 f4       	brcc	.+2      	; 0x2fc8 <__muldi3_6+0x10>
    2fc6:	31 96       	adiw	r30, 0x01	; 1
    2fc8:	08 95       	ret

00002fca <__moddi3>:
    2fca:	68 94       	set
    2fcc:	01 c0       	rjmp	.+2      	; 0x2fd0 <__divdi3_moddi3>

00002fce <__divdi3>:
    2fce:	e8 94       	clt

00002fd0 <__divdi3_moddi3>:
    2fd0:	f9 2f       	mov	r31, r25
    2fd2:	f1 2b       	or	r31, r17
    2fd4:	12 f0       	brmi	.+4      	; 0x2fda <__divdi3_moddi3+0xa>
    2fd6:	0c 94 19 18 	jmp	0x3032	; 0x3032 <__udivdi3_umoddi3>
    2fda:	a0 e0       	ldi	r26, 0x00	; 0
    2fdc:	b0 e0       	ldi	r27, 0x00	; 0
    2fde:	e3 ef       	ldi	r30, 0xF3	; 243
    2fe0:	f7 e1       	ldi	r31, 0x17	; 23
    2fe2:	0c 94 8b 18 	jmp	0x3116	; 0x3116 <__prologue_saves__+0xc>
    2fe6:	09 2e       	mov	r0, r25
    2fe8:	05 94       	asr	r0
    2fea:	22 f4       	brpl	.+8      	; 0x2ff4 <__divdi3_moddi3+0x24>
    2fec:	0e 94 75 18 	call	0x30ea	; 0x30ea <__negdi2>
    2ff0:	11 23       	and	r17, r17
    2ff2:	92 f4       	brpl	.+36     	; 0x3018 <__divdi3_moddi3+0x48>
    2ff4:	f0 e8       	ldi	r31, 0x80	; 128
    2ff6:	0f 26       	eor	r0, r31
    2ff8:	ff ef       	ldi	r31, 0xFF	; 255
    2ffa:	e0 94       	com	r14
    2ffc:	f0 94       	com	r15
    2ffe:	00 95       	com	r16
    3000:	10 95       	com	r17
    3002:	b0 94       	com	r11
    3004:	c0 94       	com	r12
    3006:	d0 94       	com	r13
    3008:	a1 94       	neg	r10
    300a:	bf 0a       	sbc	r11, r31
    300c:	cf 0a       	sbc	r12, r31
    300e:	df 0a       	sbc	r13, r31
    3010:	ef 0a       	sbc	r14, r31
    3012:	ff 0a       	sbc	r15, r31
    3014:	0f 0b       	sbc	r16, r31
    3016:	1f 0b       	sbc	r17, r31
    3018:	0e 94 24 18 	call	0x3048	; 0x3048 <__udivmod64>
    301c:	07 fc       	sbrc	r0, 7
    301e:	0e 94 75 18 	call	0x30ea	; 0x30ea <__negdi2>
    3022:	cd b7       	in	r28, 0x3d	; 61
    3024:	de b7       	in	r29, 0x3e	; 62
    3026:	ec e0       	ldi	r30, 0x0C	; 12
    3028:	0c 94 a7 18 	jmp	0x314e	; 0x314e <__epilogue_restores__+0xc>

0000302c <__umoddi3>:
    302c:	68 94       	set
    302e:	01 c0       	rjmp	.+2      	; 0x3032 <__udivdi3_umoddi3>

00003030 <__udivdi3>:
    3030:	e8 94       	clt

00003032 <__udivdi3_umoddi3>:
    3032:	8f 92       	push	r8
    3034:	9f 92       	push	r9
    3036:	cf 93       	push	r28
    3038:	df 93       	push	r29
    303a:	0e 94 24 18 	call	0x3048	; 0x3048 <__udivmod64>
    303e:	df 91       	pop	r29
    3040:	cf 91       	pop	r28
    3042:	9f 90       	pop	r9
    3044:	8f 90       	pop	r8
    3046:	08 95       	ret

00003048 <__udivmod64>:
    3048:	88 24       	eor	r8, r8
    304a:	99 24       	eor	r9, r9
    304c:	f4 01       	movw	r30, r8
    304e:	e4 01       	movw	r28, r8
    3050:	b0 e4       	ldi	r27, 0x40	; 64
    3052:	9f 93       	push	r25
    3054:	aa 27       	eor	r26, r26
    3056:	9a 15       	cp	r25, r10
    3058:	8b 04       	cpc	r8, r11
    305a:	9c 04       	cpc	r9, r12
    305c:	ed 05       	cpc	r30, r13
    305e:	fe 05       	cpc	r31, r14
    3060:	cf 05       	cpc	r28, r15
    3062:	d0 07       	cpc	r29, r16
    3064:	a1 07       	cpc	r26, r17
    3066:	98 f4       	brcc	.+38     	; 0x308e <__udivmod64+0x46>
    3068:	ad 2f       	mov	r26, r29
    306a:	dc 2f       	mov	r29, r28
    306c:	cf 2f       	mov	r28, r31
    306e:	fe 2f       	mov	r31, r30
    3070:	e9 2d       	mov	r30, r9
    3072:	98 2c       	mov	r9, r8
    3074:	89 2e       	mov	r8, r25
    3076:	98 2f       	mov	r25, r24
    3078:	87 2f       	mov	r24, r23
    307a:	76 2f       	mov	r23, r22
    307c:	65 2f       	mov	r22, r21
    307e:	54 2f       	mov	r21, r20
    3080:	43 2f       	mov	r20, r19
    3082:	32 2f       	mov	r19, r18
    3084:	22 27       	eor	r18, r18
    3086:	b8 50       	subi	r27, 0x08	; 8
    3088:	31 f7       	brne	.-52     	; 0x3056 <__udivmod64+0xe>
    308a:	bf 91       	pop	r27
    308c:	27 c0       	rjmp	.+78     	; 0x30dc <__udivmod64+0x94>
    308e:	1b 2e       	mov	r1, r27
    3090:	bf 91       	pop	r27
    3092:	bb 27       	eor	r27, r27
    3094:	22 0f       	add	r18, r18
    3096:	33 1f       	adc	r19, r19
    3098:	44 1f       	adc	r20, r20
    309a:	55 1f       	adc	r21, r21
    309c:	66 1f       	adc	r22, r22
    309e:	77 1f       	adc	r23, r23
    30a0:	88 1f       	adc	r24, r24
    30a2:	99 1f       	adc	r25, r25
    30a4:	88 1c       	adc	r8, r8
    30a6:	99 1c       	adc	r9, r9
    30a8:	ee 1f       	adc	r30, r30
    30aa:	ff 1f       	adc	r31, r31
    30ac:	cc 1f       	adc	r28, r28
    30ae:	dd 1f       	adc	r29, r29
    30b0:	aa 1f       	adc	r26, r26
    30b2:	bb 1f       	adc	r27, r27
    30b4:	8a 14       	cp	r8, r10
    30b6:	9b 04       	cpc	r9, r11
    30b8:	ec 05       	cpc	r30, r12
    30ba:	fd 05       	cpc	r31, r13
    30bc:	ce 05       	cpc	r28, r14
    30be:	df 05       	cpc	r29, r15
    30c0:	a0 07       	cpc	r26, r16
    30c2:	b1 07       	cpc	r27, r17
    30c4:	48 f0       	brcs	.+18     	; 0x30d8 <__udivmod64+0x90>
    30c6:	8a 18       	sub	r8, r10
    30c8:	9b 08       	sbc	r9, r11
    30ca:	ec 09       	sbc	r30, r12
    30cc:	fd 09       	sbc	r31, r13
    30ce:	ce 09       	sbc	r28, r14
    30d0:	df 09       	sbc	r29, r15
    30d2:	a0 0b       	sbc	r26, r16
    30d4:	b1 0b       	sbc	r27, r17
    30d6:	21 60       	ori	r18, 0x01	; 1
    30d8:	1a 94       	dec	r1
    30da:	e1 f6       	brne	.-72     	; 0x3094 <__udivmod64+0x4c>
    30dc:	2e f4       	brtc	.+10     	; 0x30e8 <__udivmod64+0xa0>
    30de:	94 01       	movw	r18, r8
    30e0:	af 01       	movw	r20, r30
    30e2:	be 01       	movw	r22, r28
    30e4:	cd 01       	movw	r24, r26
    30e6:	00 0c       	add	r0, r0
    30e8:	08 95       	ret

000030ea <__negdi2>:
    30ea:	60 95       	com	r22
    30ec:	70 95       	com	r23
    30ee:	80 95       	com	r24
    30f0:	90 95       	com	r25
    30f2:	30 95       	com	r19
    30f4:	40 95       	com	r20
    30f6:	50 95       	com	r21
    30f8:	21 95       	neg	r18
    30fa:	3f 4f       	sbci	r19, 0xFF	; 255
    30fc:	4f 4f       	sbci	r20, 0xFF	; 255
    30fe:	5f 4f       	sbci	r21, 0xFF	; 255
    3100:	6f 4f       	sbci	r22, 0xFF	; 255
    3102:	7f 4f       	sbci	r23, 0xFF	; 255
    3104:	8f 4f       	sbci	r24, 0xFF	; 255
    3106:	9f 4f       	sbci	r25, 0xFF	; 255
    3108:	08 95       	ret

0000310a <__prologue_saves__>:
    310a:	2f 92       	push	r2
    310c:	3f 92       	push	r3
    310e:	4f 92       	push	r4
    3110:	5f 92       	push	r5
    3112:	6f 92       	push	r6
    3114:	7f 92       	push	r7
    3116:	8f 92       	push	r8
    3118:	9f 92       	push	r9
    311a:	af 92       	push	r10
    311c:	bf 92       	push	r11
    311e:	cf 92       	push	r12
    3120:	df 92       	push	r13
    3122:	ef 92       	push	r14
    3124:	ff 92       	push	r15
    3126:	0f 93       	push	r16
    3128:	1f 93       	push	r17
    312a:	cf 93       	push	r28
    312c:	df 93       	push	r29
    312e:	cd b7       	in	r28, 0x3d	; 61
    3130:	de b7       	in	r29, 0x3e	; 62
    3132:	ca 1b       	sub	r28, r26
    3134:	db 0b       	sbc	r29, r27
    3136:	0f b6       	in	r0, 0x3f	; 63
    3138:	f8 94       	cli
    313a:	de bf       	out	0x3e, r29	; 62
    313c:	0f be       	out	0x3f, r0	; 63
    313e:	cd bf       	out	0x3d, r28	; 61
    3140:	09 94       	ijmp

00003142 <__epilogue_restores__>:
    3142:	2a 88       	ldd	r2, Y+18	; 0x12
    3144:	39 88       	ldd	r3, Y+17	; 0x11
    3146:	48 88       	ldd	r4, Y+16	; 0x10
    3148:	5f 84       	ldd	r5, Y+15	; 0x0f
    314a:	6e 84       	ldd	r6, Y+14	; 0x0e
    314c:	7d 84       	ldd	r7, Y+13	; 0x0d
    314e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3150:	9b 84       	ldd	r9, Y+11	; 0x0b
    3152:	aa 84       	ldd	r10, Y+10	; 0x0a
    3154:	b9 84       	ldd	r11, Y+9	; 0x09
    3156:	c8 84       	ldd	r12, Y+8	; 0x08
    3158:	df 80       	ldd	r13, Y+7	; 0x07
    315a:	ee 80       	ldd	r14, Y+6	; 0x06
    315c:	fd 80       	ldd	r15, Y+5	; 0x05
    315e:	0c 81       	ldd	r16, Y+4	; 0x04
    3160:	1b 81       	ldd	r17, Y+3	; 0x03
    3162:	aa 81       	ldd	r26, Y+2	; 0x02
    3164:	b9 81       	ldd	r27, Y+1	; 0x01
    3166:	ce 0f       	add	r28, r30
    3168:	d1 1d       	adc	r29, r1
    316a:	0f b6       	in	r0, 0x3f	; 63
    316c:	f8 94       	cli
    316e:	de bf       	out	0x3e, r29	; 62
    3170:	0f be       	out	0x3f, r0	; 63
    3172:	cd bf       	out	0x3d, r28	; 61
    3174:	ed 01       	movw	r28, r26
    3176:	08 95       	ret

00003178 <__adddi3>:
    3178:	2a 0d       	add	r18, r10
    317a:	3b 1d       	adc	r19, r11
    317c:	4c 1d       	adc	r20, r12
    317e:	5d 1d       	adc	r21, r13
    3180:	6e 1d       	adc	r22, r14
    3182:	7f 1d       	adc	r23, r15
    3184:	80 1f       	adc	r24, r16
    3186:	91 1f       	adc	r25, r17
    3188:	08 95       	ret

0000318a <__subdi3>:
    318a:	2a 19       	sub	r18, r10
    318c:	3b 09       	sbc	r19, r11
    318e:	4c 09       	sbc	r20, r12
    3190:	5d 09       	sbc	r21, r13
    3192:	6e 09       	sbc	r22, r14
    3194:	7f 09       	sbc	r23, r15
    3196:	80 0b       	sbc	r24, r16
    3198:	91 0b       	sbc	r25, r17
    319a:	08 95       	ret

0000319c <__cmpdi2>:
    319c:	2a 15       	cp	r18, r10
    319e:	3b 05       	cpc	r19, r11
    31a0:	4c 05       	cpc	r20, r12
    31a2:	5d 05       	cpc	r21, r13
    31a4:	6e 05       	cpc	r22, r14
    31a6:	7f 05       	cpc	r23, r15
    31a8:	80 07       	cpc	r24, r16
    31aa:	91 07       	cpc	r25, r17
    31ac:	08 95       	ret

000031ae <__cmpdi2_s8>:
    31ae:	00 24       	eor	r0, r0
    31b0:	a7 fd       	sbrc	r26, 7
    31b2:	00 94       	com	r0
    31b4:	2a 17       	cp	r18, r26
    31b6:	30 05       	cpc	r19, r0
    31b8:	40 05       	cpc	r20, r0
    31ba:	50 05       	cpc	r21, r0
    31bc:	60 05       	cpc	r22, r0
    31be:	70 05       	cpc	r23, r0
    31c0:	80 05       	cpc	r24, r0
    31c2:	90 05       	cpc	r25, r0
    31c4:	08 95       	ret

000031c6 <__umulhisi3>:
    31c6:	a2 9f       	mul	r26, r18
    31c8:	b0 01       	movw	r22, r0
    31ca:	b3 9f       	mul	r27, r19
    31cc:	c0 01       	movw	r24, r0
    31ce:	a3 9f       	mul	r26, r19
    31d0:	70 0d       	add	r23, r0
    31d2:	81 1d       	adc	r24, r1
    31d4:	11 24       	eor	r1, r1
    31d6:	91 1d       	adc	r25, r1
    31d8:	b2 9f       	mul	r27, r18
    31da:	70 0d       	add	r23, r0
    31dc:	81 1d       	adc	r24, r1
    31de:	11 24       	eor	r1, r1
    31e0:	91 1d       	adc	r25, r1
    31e2:	08 95       	ret

000031e4 <__ftoa_engine>:
    31e4:	28 30       	cpi	r18, 0x08	; 8
    31e6:	08 f0       	brcs	.+2      	; 0x31ea <__ftoa_engine+0x6>
    31e8:	27 e0       	ldi	r18, 0x07	; 7
    31ea:	33 27       	eor	r19, r19
    31ec:	da 01       	movw	r26, r20
    31ee:	99 0f       	add	r25, r25
    31f0:	31 1d       	adc	r19, r1
    31f2:	87 fd       	sbrc	r24, 7
    31f4:	91 60       	ori	r25, 0x01	; 1
    31f6:	00 96       	adiw	r24, 0x00	; 0
    31f8:	61 05       	cpc	r22, r1
    31fa:	71 05       	cpc	r23, r1
    31fc:	39 f4       	brne	.+14     	; 0x320c <__ftoa_engine+0x28>
    31fe:	32 60       	ori	r19, 0x02	; 2
    3200:	2e 5f       	subi	r18, 0xFE	; 254
    3202:	3d 93       	st	X+, r19
    3204:	30 e3       	ldi	r19, 0x30	; 48
    3206:	2a 95       	dec	r18
    3208:	e1 f7       	brne	.-8      	; 0x3202 <__ftoa_engine+0x1e>
    320a:	08 95       	ret
    320c:	9f 3f       	cpi	r25, 0xFF	; 255
    320e:	30 f0       	brcs	.+12     	; 0x321c <__ftoa_engine+0x38>
    3210:	80 38       	cpi	r24, 0x80	; 128
    3212:	71 05       	cpc	r23, r1
    3214:	61 05       	cpc	r22, r1
    3216:	09 f0       	breq	.+2      	; 0x321a <__ftoa_engine+0x36>
    3218:	3c 5f       	subi	r19, 0xFC	; 252
    321a:	3c 5f       	subi	r19, 0xFC	; 252
    321c:	3d 93       	st	X+, r19
    321e:	91 30       	cpi	r25, 0x01	; 1
    3220:	08 f0       	brcs	.+2      	; 0x3224 <__ftoa_engine+0x40>
    3222:	80 68       	ori	r24, 0x80	; 128
    3224:	91 1d       	adc	r25, r1
    3226:	df 93       	push	r29
    3228:	cf 93       	push	r28
    322a:	1f 93       	push	r17
    322c:	0f 93       	push	r16
    322e:	ff 92       	push	r15
    3230:	ef 92       	push	r14
    3232:	19 2f       	mov	r17, r25
    3234:	98 7f       	andi	r25, 0xF8	; 248
    3236:	96 95       	lsr	r25
    3238:	e9 2f       	mov	r30, r25
    323a:	96 95       	lsr	r25
    323c:	96 95       	lsr	r25
    323e:	e9 0f       	add	r30, r25
    3240:	ff 27       	eor	r31, r31
    3242:	ea 54       	subi	r30, 0x4A	; 74
    3244:	ff 4f       	sbci	r31, 0xFF	; 255
    3246:	99 27       	eor	r25, r25
    3248:	33 27       	eor	r19, r19
    324a:	ee 24       	eor	r14, r14
    324c:	ff 24       	eor	r15, r15
    324e:	a7 01       	movw	r20, r14
    3250:	e7 01       	movw	r28, r14
    3252:	05 90       	lpm	r0, Z+
    3254:	08 94       	sec
    3256:	07 94       	ror	r0
    3258:	28 f4       	brcc	.+10     	; 0x3264 <__ftoa_engine+0x80>
    325a:	36 0f       	add	r19, r22
    325c:	e7 1e       	adc	r14, r23
    325e:	f8 1e       	adc	r15, r24
    3260:	49 1f       	adc	r20, r25
    3262:	51 1d       	adc	r21, r1
    3264:	66 0f       	add	r22, r22
    3266:	77 1f       	adc	r23, r23
    3268:	88 1f       	adc	r24, r24
    326a:	99 1f       	adc	r25, r25
    326c:	06 94       	lsr	r0
    326e:	a1 f7       	brne	.-24     	; 0x3258 <__ftoa_engine+0x74>
    3270:	05 90       	lpm	r0, Z+
    3272:	07 94       	ror	r0
    3274:	28 f4       	brcc	.+10     	; 0x3280 <__ftoa_engine+0x9c>
    3276:	e7 0e       	add	r14, r23
    3278:	f8 1e       	adc	r15, r24
    327a:	49 1f       	adc	r20, r25
    327c:	56 1f       	adc	r21, r22
    327e:	c1 1d       	adc	r28, r1
    3280:	77 0f       	add	r23, r23
    3282:	88 1f       	adc	r24, r24
    3284:	99 1f       	adc	r25, r25
    3286:	66 1f       	adc	r22, r22
    3288:	06 94       	lsr	r0
    328a:	a1 f7       	brne	.-24     	; 0x3274 <__ftoa_engine+0x90>
    328c:	05 90       	lpm	r0, Z+
    328e:	07 94       	ror	r0
    3290:	28 f4       	brcc	.+10     	; 0x329c <__ftoa_engine+0xb8>
    3292:	f8 0e       	add	r15, r24
    3294:	49 1f       	adc	r20, r25
    3296:	56 1f       	adc	r21, r22
    3298:	c7 1f       	adc	r28, r23
    329a:	d1 1d       	adc	r29, r1
    329c:	88 0f       	add	r24, r24
    329e:	99 1f       	adc	r25, r25
    32a0:	66 1f       	adc	r22, r22
    32a2:	77 1f       	adc	r23, r23
    32a4:	06 94       	lsr	r0
    32a6:	a1 f7       	brne	.-24     	; 0x3290 <__ftoa_engine+0xac>
    32a8:	05 90       	lpm	r0, Z+
    32aa:	07 94       	ror	r0
    32ac:	20 f4       	brcc	.+8      	; 0x32b6 <__ftoa_engine+0xd2>
    32ae:	49 0f       	add	r20, r25
    32b0:	56 1f       	adc	r21, r22
    32b2:	c7 1f       	adc	r28, r23
    32b4:	d8 1f       	adc	r29, r24
    32b6:	99 0f       	add	r25, r25
    32b8:	66 1f       	adc	r22, r22
    32ba:	77 1f       	adc	r23, r23
    32bc:	88 1f       	adc	r24, r24
    32be:	06 94       	lsr	r0
    32c0:	a9 f7       	brne	.-22     	; 0x32ac <__ftoa_engine+0xc8>
    32c2:	84 91       	lpm	r24, Z
    32c4:	10 95       	com	r17
    32c6:	17 70       	andi	r17, 0x07	; 7
    32c8:	41 f0       	breq	.+16     	; 0x32da <__ftoa_engine+0xf6>
    32ca:	d6 95       	lsr	r29
    32cc:	c7 95       	ror	r28
    32ce:	57 95       	ror	r21
    32d0:	47 95       	ror	r20
    32d2:	f7 94       	ror	r15
    32d4:	e7 94       	ror	r14
    32d6:	1a 95       	dec	r17
    32d8:	c1 f7       	brne	.-16     	; 0x32ca <__ftoa_engine+0xe6>
    32da:	ec e5       	ldi	r30, 0x5C	; 92
    32dc:	f0 e0       	ldi	r31, 0x00	; 0
    32de:	68 94       	set
    32e0:	15 90       	lpm	r1, Z+
    32e2:	15 91       	lpm	r17, Z+
    32e4:	35 91       	lpm	r19, Z+
    32e6:	65 91       	lpm	r22, Z+
    32e8:	95 91       	lpm	r25, Z+
    32ea:	05 90       	lpm	r0, Z+
    32ec:	7f e2       	ldi	r23, 0x2F	; 47
    32ee:	73 95       	inc	r23
    32f0:	e1 18       	sub	r14, r1
    32f2:	f1 0a       	sbc	r15, r17
    32f4:	43 0b       	sbc	r20, r19
    32f6:	56 0b       	sbc	r21, r22
    32f8:	c9 0b       	sbc	r28, r25
    32fa:	d0 09       	sbc	r29, r0
    32fc:	c0 f7       	brcc	.-16     	; 0x32ee <__ftoa_engine+0x10a>
    32fe:	e1 0c       	add	r14, r1
    3300:	f1 1e       	adc	r15, r17
    3302:	43 1f       	adc	r20, r19
    3304:	56 1f       	adc	r21, r22
    3306:	c9 1f       	adc	r28, r25
    3308:	d0 1d       	adc	r29, r0
    330a:	7e f4       	brtc	.+30     	; 0x332a <__ftoa_engine+0x146>
    330c:	70 33       	cpi	r23, 0x30	; 48
    330e:	11 f4       	brne	.+4      	; 0x3314 <__ftoa_engine+0x130>
    3310:	8a 95       	dec	r24
    3312:	e6 cf       	rjmp	.-52     	; 0x32e0 <__ftoa_engine+0xfc>
    3314:	e8 94       	clt
    3316:	01 50       	subi	r16, 0x01	; 1
    3318:	30 f0       	brcs	.+12     	; 0x3326 <__ftoa_engine+0x142>
    331a:	08 0f       	add	r16, r24
    331c:	0a f4       	brpl	.+2      	; 0x3320 <__ftoa_engine+0x13c>
    331e:	00 27       	eor	r16, r16
    3320:	02 17       	cp	r16, r18
    3322:	08 f4       	brcc	.+2      	; 0x3326 <__ftoa_engine+0x142>
    3324:	20 2f       	mov	r18, r16
    3326:	23 95       	inc	r18
    3328:	02 2f       	mov	r16, r18
    332a:	7a 33       	cpi	r23, 0x3A	; 58
    332c:	28 f0       	brcs	.+10     	; 0x3338 <__ftoa_engine+0x154>
    332e:	79 e3       	ldi	r23, 0x39	; 57
    3330:	7d 93       	st	X+, r23
    3332:	2a 95       	dec	r18
    3334:	e9 f7       	brne	.-6      	; 0x3330 <__ftoa_engine+0x14c>
    3336:	10 c0       	rjmp	.+32     	; 0x3358 <__ftoa_engine+0x174>
    3338:	7d 93       	st	X+, r23
    333a:	2a 95       	dec	r18
    333c:	89 f6       	brne	.-94     	; 0x32e0 <__ftoa_engine+0xfc>
    333e:	06 94       	lsr	r0
    3340:	97 95       	ror	r25
    3342:	67 95       	ror	r22
    3344:	37 95       	ror	r19
    3346:	17 95       	ror	r17
    3348:	17 94       	ror	r1
    334a:	e1 18       	sub	r14, r1
    334c:	f1 0a       	sbc	r15, r17
    334e:	43 0b       	sbc	r20, r19
    3350:	56 0b       	sbc	r21, r22
    3352:	c9 0b       	sbc	r28, r25
    3354:	d0 09       	sbc	r29, r0
    3356:	98 f0       	brcs	.+38     	; 0x337e <__ftoa_engine+0x19a>
    3358:	23 95       	inc	r18
    335a:	7e 91       	ld	r23, -X
    335c:	73 95       	inc	r23
    335e:	7a 33       	cpi	r23, 0x3A	; 58
    3360:	08 f0       	brcs	.+2      	; 0x3364 <__ftoa_engine+0x180>
    3362:	70 e3       	ldi	r23, 0x30	; 48
    3364:	7c 93       	st	X, r23
    3366:	20 13       	cpse	r18, r16
    3368:	b8 f7       	brcc	.-18     	; 0x3358 <__ftoa_engine+0x174>
    336a:	7e 91       	ld	r23, -X
    336c:	70 61       	ori	r23, 0x10	; 16
    336e:	7d 93       	st	X+, r23
    3370:	30 f0       	brcs	.+12     	; 0x337e <__ftoa_engine+0x19a>
    3372:	83 95       	inc	r24
    3374:	71 e3       	ldi	r23, 0x31	; 49
    3376:	7d 93       	st	X+, r23
    3378:	70 e3       	ldi	r23, 0x30	; 48
    337a:	2a 95       	dec	r18
    337c:	e1 f7       	brne	.-8      	; 0x3376 <__ftoa_engine+0x192>
    337e:	11 24       	eor	r1, r1
    3380:	ef 90       	pop	r14
    3382:	ff 90       	pop	r15
    3384:	0f 91       	pop	r16
    3386:	1f 91       	pop	r17
    3388:	cf 91       	pop	r28
    338a:	df 91       	pop	r29
    338c:	99 27       	eor	r25, r25
    338e:	87 fd       	sbrc	r24, 7
    3390:	90 95       	com	r25
    3392:	08 95       	ret

00003394 <strnlen_P>:
    3394:	fc 01       	movw	r30, r24
    3396:	05 90       	lpm	r0, Z+
    3398:	61 50       	subi	r22, 0x01	; 1
    339a:	70 40       	sbci	r23, 0x00	; 0
    339c:	01 10       	cpse	r0, r1
    339e:	d8 f7       	brcc	.-10     	; 0x3396 <strnlen_P+0x2>
    33a0:	80 95       	com	r24
    33a2:	90 95       	com	r25
    33a4:	8e 0f       	add	r24, r30
    33a6:	9f 1f       	adc	r25, r31
    33a8:	08 95       	ret

000033aa <memset>:
    33aa:	dc 01       	movw	r26, r24
    33ac:	01 c0       	rjmp	.+2      	; 0x33b0 <memset+0x6>
    33ae:	6d 93       	st	X+, r22
    33b0:	41 50       	subi	r20, 0x01	; 1
    33b2:	50 40       	sbci	r21, 0x00	; 0
    33b4:	e0 f7       	brcc	.-8      	; 0x33ae <memset+0x4>
    33b6:	08 95       	ret

000033b8 <strcat>:
    33b8:	fb 01       	movw	r30, r22
    33ba:	dc 01       	movw	r26, r24
    33bc:	0d 90       	ld	r0, X+
    33be:	00 20       	and	r0, r0
    33c0:	e9 f7       	brne	.-6      	; 0x33bc <strcat+0x4>
    33c2:	11 97       	sbiw	r26, 0x01	; 1
    33c4:	01 90       	ld	r0, Z+
    33c6:	0d 92       	st	X+, r0
    33c8:	00 20       	and	r0, r0
    33ca:	e1 f7       	brne	.-8      	; 0x33c4 <strcat+0xc>
    33cc:	08 95       	ret

000033ce <strlen>:
    33ce:	fc 01       	movw	r30, r24
    33d0:	01 90       	ld	r0, Z+
    33d2:	00 20       	and	r0, r0
    33d4:	e9 f7       	brne	.-6      	; 0x33d0 <strlen+0x2>
    33d6:	80 95       	com	r24
    33d8:	90 95       	com	r25
    33da:	8e 0f       	add	r24, r30
    33dc:	9f 1f       	adc	r25, r31
    33de:	08 95       	ret

000033e0 <strnlen>:
    33e0:	fc 01       	movw	r30, r24
    33e2:	61 50       	subi	r22, 0x01	; 1
    33e4:	70 40       	sbci	r23, 0x00	; 0
    33e6:	01 90       	ld	r0, Z+
    33e8:	01 10       	cpse	r0, r1
    33ea:	d8 f7       	brcc	.-10     	; 0x33e2 <strnlen+0x2>
    33ec:	80 95       	com	r24
    33ee:	90 95       	com	r25
    33f0:	8e 0f       	add	r24, r30
    33f2:	9f 1f       	adc	r25, r31
    33f4:	08 95       	ret

000033f6 <strrev>:
    33f6:	dc 01       	movw	r26, r24
    33f8:	fc 01       	movw	r30, r24
    33fa:	67 2f       	mov	r22, r23
    33fc:	71 91       	ld	r23, Z+
    33fe:	77 23       	and	r23, r23
    3400:	e1 f7       	brne	.-8      	; 0x33fa <strrev+0x4>
    3402:	32 97       	sbiw	r30, 0x02	; 2
    3404:	04 c0       	rjmp	.+8      	; 0x340e <strrev+0x18>
    3406:	7c 91       	ld	r23, X
    3408:	6d 93       	st	X+, r22
    340a:	70 83       	st	Z, r23
    340c:	62 91       	ld	r22, -Z
    340e:	ae 17       	cp	r26, r30
    3410:	bf 07       	cpc	r27, r31
    3412:	c8 f3       	brcs	.-14     	; 0x3406 <strrev+0x10>
    3414:	08 95       	ret

00003416 <fputc>:
    3416:	0f 93       	push	r16
    3418:	1f 93       	push	r17
    341a:	cf 93       	push	r28
    341c:	df 93       	push	r29
    341e:	fb 01       	movw	r30, r22
    3420:	23 81       	ldd	r18, Z+3	; 0x03
    3422:	21 fd       	sbrc	r18, 1
    3424:	03 c0       	rjmp	.+6      	; 0x342c <fputc+0x16>
    3426:	8f ef       	ldi	r24, 0xFF	; 255
    3428:	9f ef       	ldi	r25, 0xFF	; 255
    342a:	2c c0       	rjmp	.+88     	; 0x3484 <fputc+0x6e>
    342c:	22 ff       	sbrs	r18, 2
    342e:	16 c0       	rjmp	.+44     	; 0x345c <fputc+0x46>
    3430:	46 81       	ldd	r20, Z+6	; 0x06
    3432:	57 81       	ldd	r21, Z+7	; 0x07
    3434:	24 81       	ldd	r18, Z+4	; 0x04
    3436:	35 81       	ldd	r19, Z+5	; 0x05
    3438:	42 17       	cp	r20, r18
    343a:	53 07       	cpc	r21, r19
    343c:	44 f4       	brge	.+16     	; 0x344e <fputc+0x38>
    343e:	a0 81       	ld	r26, Z
    3440:	b1 81       	ldd	r27, Z+1	; 0x01
    3442:	9d 01       	movw	r18, r26
    3444:	2f 5f       	subi	r18, 0xFF	; 255
    3446:	3f 4f       	sbci	r19, 0xFF	; 255
    3448:	31 83       	std	Z+1, r19	; 0x01
    344a:	20 83       	st	Z, r18
    344c:	8c 93       	st	X, r24
    344e:	26 81       	ldd	r18, Z+6	; 0x06
    3450:	37 81       	ldd	r19, Z+7	; 0x07
    3452:	2f 5f       	subi	r18, 0xFF	; 255
    3454:	3f 4f       	sbci	r19, 0xFF	; 255
    3456:	37 83       	std	Z+7, r19	; 0x07
    3458:	26 83       	std	Z+6, r18	; 0x06
    345a:	14 c0       	rjmp	.+40     	; 0x3484 <fputc+0x6e>
    345c:	8b 01       	movw	r16, r22
    345e:	ec 01       	movw	r28, r24
    3460:	fb 01       	movw	r30, r22
    3462:	00 84       	ldd	r0, Z+8	; 0x08
    3464:	f1 85       	ldd	r31, Z+9	; 0x09
    3466:	e0 2d       	mov	r30, r0
    3468:	09 95       	icall
    346a:	89 2b       	or	r24, r25
    346c:	e1 f6       	brne	.-72     	; 0x3426 <fputc+0x10>
    346e:	d8 01       	movw	r26, r16
    3470:	16 96       	adiw	r26, 0x06	; 6
    3472:	8d 91       	ld	r24, X+
    3474:	9c 91       	ld	r25, X
    3476:	17 97       	sbiw	r26, 0x07	; 7
    3478:	01 96       	adiw	r24, 0x01	; 1
    347a:	17 96       	adiw	r26, 0x07	; 7
    347c:	9c 93       	st	X, r25
    347e:	8e 93       	st	-X, r24
    3480:	16 97       	sbiw	r26, 0x06	; 6
    3482:	ce 01       	movw	r24, r28
    3484:	df 91       	pop	r29
    3486:	cf 91       	pop	r28
    3488:	1f 91       	pop	r17
    348a:	0f 91       	pop	r16
    348c:	08 95       	ret

0000348e <sprintf>:
    348e:	ae e0       	ldi	r26, 0x0E	; 14
    3490:	b0 e0       	ldi	r27, 0x00	; 0
    3492:	ed e4       	ldi	r30, 0x4D	; 77
    3494:	fa e1       	ldi	r31, 0x1A	; 26
    3496:	0c 94 93 18 	jmp	0x3126	; 0x3126 <__prologue_saves__+0x1c>
    349a:	0d 89       	ldd	r16, Y+21	; 0x15
    349c:	1e 89       	ldd	r17, Y+22	; 0x16
    349e:	86 e0       	ldi	r24, 0x06	; 6
    34a0:	8c 83       	std	Y+4, r24	; 0x04
    34a2:	1a 83       	std	Y+2, r17	; 0x02
    34a4:	09 83       	std	Y+1, r16	; 0x01
    34a6:	8f ef       	ldi	r24, 0xFF	; 255
    34a8:	9f e7       	ldi	r25, 0x7F	; 127
    34aa:	9e 83       	std	Y+6, r25	; 0x06
    34ac:	8d 83       	std	Y+5, r24	; 0x05
    34ae:	ae 01       	movw	r20, r28
    34b0:	47 5e       	subi	r20, 0xE7	; 231
    34b2:	5f 4f       	sbci	r21, 0xFF	; 255
    34b4:	6f 89       	ldd	r22, Y+23	; 0x17
    34b6:	78 8d       	ldd	r23, Y+24	; 0x18
    34b8:	ce 01       	movw	r24, r28
    34ba:	01 96       	adiw	r24, 0x01	; 1
    34bc:	0e 94 0f 14 	call	0x281e	; 0x281e <vfprintf>
    34c0:	ef 81       	ldd	r30, Y+7	; 0x07
    34c2:	f8 85       	ldd	r31, Y+8	; 0x08
    34c4:	e0 0f       	add	r30, r16
    34c6:	f1 1f       	adc	r31, r17
    34c8:	10 82       	st	Z, r1
    34ca:	2e 96       	adiw	r28, 0x0e	; 14
    34cc:	e4 e0       	ldi	r30, 0x04	; 4
    34ce:	0c 94 af 18 	jmp	0x315e	; 0x315e <__epilogue_restores__+0x1c>

000034d2 <__ultoa_invert>:
    34d2:	fa 01       	movw	r30, r20
    34d4:	aa 27       	eor	r26, r26
    34d6:	28 30       	cpi	r18, 0x08	; 8
    34d8:	51 f1       	breq	.+84     	; 0x352e <__ultoa_invert+0x5c>
    34da:	20 31       	cpi	r18, 0x10	; 16
    34dc:	81 f1       	breq	.+96     	; 0x353e <__ultoa_invert+0x6c>
    34de:	e8 94       	clt
    34e0:	6f 93       	push	r22
    34e2:	6e 7f       	andi	r22, 0xFE	; 254
    34e4:	6e 5f       	subi	r22, 0xFE	; 254
    34e6:	7f 4f       	sbci	r23, 0xFF	; 255
    34e8:	8f 4f       	sbci	r24, 0xFF	; 255
    34ea:	9f 4f       	sbci	r25, 0xFF	; 255
    34ec:	af 4f       	sbci	r26, 0xFF	; 255
    34ee:	b1 e0       	ldi	r27, 0x01	; 1
    34f0:	3e d0       	rcall	.+124    	; 0x356e <__ultoa_invert+0x9c>
    34f2:	b4 e0       	ldi	r27, 0x04	; 4
    34f4:	3c d0       	rcall	.+120    	; 0x356e <__ultoa_invert+0x9c>
    34f6:	67 0f       	add	r22, r23
    34f8:	78 1f       	adc	r23, r24
    34fa:	89 1f       	adc	r24, r25
    34fc:	9a 1f       	adc	r25, r26
    34fe:	a1 1d       	adc	r26, r1
    3500:	68 0f       	add	r22, r24
    3502:	79 1f       	adc	r23, r25
    3504:	8a 1f       	adc	r24, r26
    3506:	91 1d       	adc	r25, r1
    3508:	a1 1d       	adc	r26, r1
    350a:	6a 0f       	add	r22, r26
    350c:	71 1d       	adc	r23, r1
    350e:	81 1d       	adc	r24, r1
    3510:	91 1d       	adc	r25, r1
    3512:	a1 1d       	adc	r26, r1
    3514:	20 d0       	rcall	.+64     	; 0x3556 <__ultoa_invert+0x84>
    3516:	09 f4       	brne	.+2      	; 0x351a <__ultoa_invert+0x48>
    3518:	68 94       	set
    351a:	3f 91       	pop	r19
    351c:	2a e0       	ldi	r18, 0x0A	; 10
    351e:	26 9f       	mul	r18, r22
    3520:	11 24       	eor	r1, r1
    3522:	30 19       	sub	r19, r0
    3524:	30 5d       	subi	r19, 0xD0	; 208
    3526:	31 93       	st	Z+, r19
    3528:	de f6       	brtc	.-74     	; 0x34e0 <__ultoa_invert+0xe>
    352a:	cf 01       	movw	r24, r30
    352c:	08 95       	ret
    352e:	46 2f       	mov	r20, r22
    3530:	47 70       	andi	r20, 0x07	; 7
    3532:	40 5d       	subi	r20, 0xD0	; 208
    3534:	41 93       	st	Z+, r20
    3536:	b3 e0       	ldi	r27, 0x03	; 3
    3538:	0f d0       	rcall	.+30     	; 0x3558 <__ultoa_invert+0x86>
    353a:	c9 f7       	brne	.-14     	; 0x352e <__ultoa_invert+0x5c>
    353c:	f6 cf       	rjmp	.-20     	; 0x352a <__ultoa_invert+0x58>
    353e:	46 2f       	mov	r20, r22
    3540:	4f 70       	andi	r20, 0x0F	; 15
    3542:	40 5d       	subi	r20, 0xD0	; 208
    3544:	4a 33       	cpi	r20, 0x3A	; 58
    3546:	18 f0       	brcs	.+6      	; 0x354e <__ultoa_invert+0x7c>
    3548:	49 5d       	subi	r20, 0xD9	; 217
    354a:	31 fd       	sbrc	r19, 1
    354c:	40 52       	subi	r20, 0x20	; 32
    354e:	41 93       	st	Z+, r20
    3550:	02 d0       	rcall	.+4      	; 0x3556 <__ultoa_invert+0x84>
    3552:	a9 f7       	brne	.-22     	; 0x353e <__ultoa_invert+0x6c>
    3554:	ea cf       	rjmp	.-44     	; 0x352a <__ultoa_invert+0x58>
    3556:	b4 e0       	ldi	r27, 0x04	; 4
    3558:	a6 95       	lsr	r26
    355a:	97 95       	ror	r25
    355c:	87 95       	ror	r24
    355e:	77 95       	ror	r23
    3560:	67 95       	ror	r22
    3562:	ba 95       	dec	r27
    3564:	c9 f7       	brne	.-14     	; 0x3558 <__ultoa_invert+0x86>
    3566:	00 97       	sbiw	r24, 0x00	; 0
    3568:	61 05       	cpc	r22, r1
    356a:	71 05       	cpc	r23, r1
    356c:	08 95       	ret
    356e:	9b 01       	movw	r18, r22
    3570:	ac 01       	movw	r20, r24
    3572:	0a 2e       	mov	r0, r26
    3574:	06 94       	lsr	r0
    3576:	57 95       	ror	r21
    3578:	47 95       	ror	r20
    357a:	37 95       	ror	r19
    357c:	27 95       	ror	r18
    357e:	ba 95       	dec	r27
    3580:	c9 f7       	brne	.-14     	; 0x3574 <__ultoa_invert+0xa2>
    3582:	62 0f       	add	r22, r18
    3584:	73 1f       	adc	r23, r19
    3586:	84 1f       	adc	r24, r20
    3588:	95 1f       	adc	r25, r21
    358a:	a0 1d       	adc	r26, r0
    358c:	08 95       	ret

0000358e <_exit>:
    358e:	f8 94       	cli

00003590 <__stop_program>:
    3590:	ff cf       	rjmp	.-2      	; 0x3590 <__stop_program>
